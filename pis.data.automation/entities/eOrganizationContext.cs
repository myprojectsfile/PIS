using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.Extensions.Configuration;

namespace pis.data.automation.entities
{
    public partial class eOrganizationContext : DbContext
    {
        private IConfigurationRoot _config;

        public eOrganizationContext(DbContextOptions<eOrganizationContext> options, IConfigurationRoot config) :base(options)
        {
            _config = config;
        }

        public virtual DbSet<Actions> Actions { get; set; }
        public virtual DbSet<ActiveSendReceivers> ActiveSendReceivers { get; set; }
        public virtual DbSet<ActiveSends> ActiveSends { get; set; }
        public virtual DbSet<ArchiveDepartment> ArchiveDepartment { get; set; }
        public virtual DbSet<ArchiveFolderPermission> ArchiveFolderPermission { get; set; }
        public virtual DbSet<AttachmentType> AttachmentType { get; set; }
        public virtual DbSet<Certificates> Certificates { get; set; }
        public virtual DbSet<Contacts> Contacts { get; set; }
        public virtual DbSet<ContactsCategory> ContactsCategory { get; set; }
        public virtual DbSet<ContactsCategoryGroups> ContactsCategoryGroups { get; set; }
        public virtual DbSet<ContactsGroup> ContactsGroup { get; set; }
        public virtual DbSet<ContactsGroupMember> ContactsGroupMember { get; set; }
        public virtual DbSet<ContentRotator> ContentRotator { get; set; }
        public virtual DbSet<CustomError> CustomError { get; set; }
        public virtual DbSet<DepartmentDefaultSendMailBox> DepartmentDefaultSendMailBox { get; set; }
        public virtual DbSet<DepartmentNews> DepartmentNews { get; set; }
        public virtual DbSet<Departments> Departments { get; set; }
        public virtual DbSet<EmailMngFarzinReceivesInfo> EmailMngFarzinReceivesInfo { get; set; }
        public virtual DbSet<EmailMngImportedReceiveList> EmailMngImportedReceiveList { get; set; }
        public virtual DbSet<EmailMngLocalLock> EmailMngLocalLock { get; set; }
        public virtual DbSet<EmailMngLog> EmailMngLog { get; set; }
        public virtual DbSet<EmailMngLogFormat> EmailMngLogFormat { get; set; }
        public virtual DbSet<EmailMngMailBox> EmailMngMailBox { get; set; }
        public virtual DbSet<EmailMngMailBoxInvalidSender> EmailMngMailBoxInvalidSender { get; set; }
        public virtual DbSet<EmailMngMailBoxOwner> EmailMngMailBoxOwner { get; set; }
        public virtual DbSet<EmailMngMailBoxOwnerRel> EmailMngMailBoxOwnerRel { get; set; }
        public virtual DbSet<EmailMngMailBoxReceiveTrying> EmailMngMailBoxReceiveTrying { get; set; }
        public virtual DbSet<EmailMngNoteBook> EmailMngNoteBook { get; set; }
        public virtual DbSet<EmailMngNoteBookEmailAddresses> EmailMngNoteBookEmailAddresses { get; set; }
        public virtual DbSet<EmailMngPop3> EmailMngPop3 { get; set; }
        public virtual DbSet<EmailMngReceiveFileAttachments> EmailMngReceiveFileAttachments { get; set; }
        public virtual DbSet<EmailMngReceiveReceivers> EmailMngReceiveReceivers { get; set; }
        public virtual DbSet<EmailMngReceives> EmailMngReceives { get; set; }
        public virtual DbSet<EmailMngSendAgain> EmailMngSendAgain { get; set; }
        public virtual DbSet<EmailMngSendDocs> EmailMngSendDocs { get; set; }
        public virtual DbSet<EmailMngSendEceReceipts> EmailMngSendEceReceipts { get; set; }
        public virtual DbSet<EmailMngSendFileAttachments> EmailMngSendFileAttachments { get; set; }
        public virtual DbSet<EmailMngSendReceivers> EmailMngSendReceivers { get; set; }
        public virtual DbSet<EmailMngSends> EmailMngSends { get; set; }
        public virtual DbSet<EmailMngSendStates> EmailMngSendStates { get; set; }
        public virtual DbSet<EmailMngSendTrying> EmailMngSendTrying { get; set; }
        public virtual DbSet<EmailMngSmtp> EmailMngSmtp { get; set; }
        public virtual DbSet<Entity1> Entity1 { get; set; }
        public virtual DbSet<Entity1Copies> Entity1Copies { get; set; }
        public virtual DbSet<EntityActivityPermissionSezForm> EntityActivityPermissionSezForm { get; set; }
        public virtual DbSet<EntityActivityPermissionSezFormCopies> EntityActivityPermissionSezFormCopies { get; set; }
        public virtual DbSet<EntityAddressBook> EntityAddressBook { get; set; }
        public virtual DbSet<EntityAddressBookCopies> EntityAddressBookCopies { get; set; }
        public virtual DbSet<EntityAntiVirusForm> EntityAntiVirusForm { get; set; }
        public virtual DbSet<EntityAntiVirusFormCopies> EntityAntiVirusFormCopies { get; set; }
        public virtual DbSet<EntityArchiveFolder> EntityArchiveFolder { get; set; }
        public virtual DbSet<EntityArchiveFolderCopies> EntityArchiveFolderCopies { get; set; }
        public virtual DbSet<EntityAssetIsmsForm> EntityAssetIsmsForm { get; set; }
        public virtual DbSet<EntityAssetIsmsFormCopies> EntityAssetIsmsFormCopies { get; set; }
        public virtual DbSet<EntityBankGuarantee> EntityBankGuarantee { get; set; }
        public virtual DbSet<EntityBankGuaranteeCopies> EntityBankGuaranteeCopies { get; set; }
        public virtual DbSet<EntityBaseForm> EntityBaseForm { get; set; }
        public virtual DbSet<EntityBaseFormCopies> EntityBaseFormCopies { get; set; }
        public virtual DbSet<EntityBcpOperationTestForm> EntityBcpOperationTestForm { get; set; }
        public virtual DbSet<EntityBcpOperationTestFormCopies> EntityBcpOperationTestFormCopies { get; set; }
        public virtual DbSet<EntityCarRequest> EntityCarRequest { get; set; }
        public virtual DbSet<EntityCarRequestCopies> EntityCarRequestCopies { get; set; }
        public virtual DbSet<EntityCategories> EntityCategories { get; set; }
        public virtual DbSet<EntityChangeCreateDoc> EntityChangeCreateDoc { get; set; }
        public virtual DbSet<EntityChangeCreateDocCopies> EntityChangeCreateDocCopies { get; set; }
        public virtual DbSet<EntityChangeManagementForm> EntityChangeManagementForm { get; set; }
        public virtual DbSet<EntityChangeManagementFormCopies> EntityChangeManagementFormCopies { get; set; }
        public virtual DbSet<EntityChangeMngFromNewVersion> EntityChangeMngFromNewVersion { get; set; }
        public virtual DbSet<EntityChangeMngFromNewVersionCopies> EntityChangeMngFromNewVersionCopies { get; set; }
        public virtual DbSet<EntityCheckCompany> EntityCheckCompany { get; set; }
        public virtual DbSet<EntityCheckCompanyCopies> EntityCheckCompanyCopies { get; set; }
        public virtual DbSet<EntityCheckPerson> EntityCheckPerson { get; set; }
        public virtual DbSet<EntityCheckPersonCopies> EntityCheckPersonCopies { get; set; }
        public virtual DbSet<EntityConfirmWarrantyForm> EntityConfirmWarrantyForm { get; set; }
        public virtual DbSet<EntityConfirmWarrantyFormCopies> EntityConfirmWarrantyFormCopies { get; set; }
        public virtual DbSet<EntityCoordinationMeetingsForm> EntityCoordinationMeetingsForm { get; set; }
        public virtual DbSet<EntityCoordinationMeetingsFormCopies> EntityCoordinationMeetingsFormCopies { get; set; }
        public virtual DbSet<EntityCorrectivePreventiveActionsForm> EntityCorrectivePreventiveActionsForm { get; set; }
        public virtual DbSet<EntityCorrectivePreventiveActionsFormCopies> EntityCorrectivePreventiveActionsFormCopies { get; set; }
        public virtual DbSet<EntityCorrectivePreventiveActionsIsmsForm> EntityCorrectivePreventiveActionsIsmsForm { get; set; }
        public virtual DbSet<EntityCorrectivePreventiveActionsIsmsFormCopies> EntityCorrectivePreventiveActionsIsmsFormCopies { get; set; }
        public virtual DbSet<EntityDailyMissionRequest> EntityDailyMissionRequest { get; set; }
        public virtual DbSet<EntityDailyMissionRequestCopies> EntityDailyMissionRequestCopies { get; set; }
        public virtual DbSet<EntityDarkhastkharid> EntityDarkhastkharid { get; set; }
        public virtual DbSet<EntityDarkhastkharidCopies> EntityDarkhastkharidCopies { get; set; }
        public virtual DbSet<EntityDarkhasttamir> EntityDarkhasttamir { get; set; }
        public virtual DbSet<EntityDarkhasttamirat1> EntityDarkhasttamirat1 { get; set; }
        public virtual DbSet<EntityDarkhasttamirat1Copies> EntityDarkhasttamirat1Copies { get; set; }
        public virtual DbSet<EntityDarkhasttamirCopies> EntityDarkhasttamirCopies { get; set; }
        public virtual DbSet<EntityDataTypes> EntityDataTypes { get; set; }
        public virtual DbSet<EntityDataTypesDefaults> EntityDataTypesDefaults { get; set; }
        public virtual DbSet<EntityDependency> EntityDependency { get; set; }
        public virtual DbSet<EntityDirectForm> EntityDirectForm { get; set; }
        public virtual DbSet<EntityDirectFormCopies> EntityDirectFormCopies { get; set; }
        public virtual DbSet<EntityDraftMissionForm> EntityDraftMissionForm { get; set; }
        public virtual DbSet<EntityDraftMissionFormCopies> EntityDraftMissionFormCopies { get; set; }
        public virtual DbSet<EntityDrillingPermission> EntityDrillingPermission { get; set; }
        public virtual DbSet<EntityDrillingPermissionCopies> EntityDrillingPermissionCopies { get; set; }
        public virtual DbSet<EntityElectricalInstallations> EntityElectricalInstallations { get; set; }
        public virtual DbSet<EntityElectricityCostForm> EntityElectricityCostForm { get; set; }
        public virtual DbSet<EntityElectricityCostFormCopies> EntityElectricityCostFormCopies { get; set; }
        public virtual DbSet<EntityExecuteForm> EntityExecuteForm { get; set; }
        public virtual DbSet<EntityExecuteFormCopies> EntityExecuteFormCopies { get; set; }
        public virtual DbSet<EntityExportLastIndicator> EntityExportLastIndicator { get; set; }
        public virtual DbSet<EntityExportLastIndicatorCopies> EntityExportLastIndicatorCopies { get; set; }
        public virtual DbSet<EntityExtendedWarrantyForm> EntityExtendedWarrantyForm { get; set; }
        public virtual DbSet<EntityExtendedWarrantyFormCopies> EntityExtendedWarrantyFormCopies { get; set; }
        public virtual DbSet<EntityFiltering> EntityFiltering { get; set; }
        public virtual DbSet<EntityFinancialPerformance> EntityFinancialPerformance { get; set; }
        public virtual DbSet<EntityFinancialPerformanceCopies> EntityFinancialPerformanceCopies { get; set; }
        public virtual DbSet<EntityFirstAid> EntityFirstAid { get; set; }
        public virtual DbSet<EntityGatepassLetter> EntityGatepassLetter { get; set; }
        public virtual DbSet<EntityGatepassLetterCopies> EntityGatepassLetterCopies { get; set; }
        public virtual DbSet<EntityGovahi> EntityGovahi { get; set; }
        public virtual DbSet<EntityGovahiCopies> EntityGovahiCopies { get; set; }
        public virtual DbSet<EntityHavaleanbar> EntityHavaleanbar { get; set; }
        public virtual DbSet<EntityHavaleanbarCopies> EntityHavaleanbarCopies { get; set; }
        public virtual DbSet<EntityHotelReservation> EntityHotelReservation { get; set; }
        public virtual DbSet<EntityHotelReservationCopies> EntityHotelReservationCopies { get; set; }
        public virtual DbSet<EntityHouse> EntityHouse { get; set; }
        public virtual DbSet<EntityHouseCopies> EntityHouseCopies { get; set; }
        public virtual DbSet<EntityImportLastIndicator> EntityImportLastIndicator { get; set; }
        public virtual DbSet<EntityImportLastIndicatorCopies> EntityImportLastIndicatorCopies { get; set; }
        public virtual DbSet<EntityIncidentMngNewVersian> EntityIncidentMngNewVersian { get; set; }
        public virtual DbSet<EntityIncidentMngNewVersianCopies> EntityIncidentMngNewVersianCopies { get; set; }
        public virtual DbSet<EntityInLetterDoc1> EntityInLetterDoc1 { get; set; }
        public virtual DbSet<EntityInLetterDoc1Copies> EntityInLetterDoc1Copies { get; set; }
        public virtual DbSet<EntityInLetterDoc2> EntityInLetterDoc2 { get; set; }
        public virtual DbSet<EntityInLetterDoc2Copies> EntityInLetterDoc2Copies { get; set; }
        public virtual DbSet<EntityInvalidateWarrantyForm> EntityInvalidateWarrantyForm { get; set; }
        public virtual DbSet<EntityInvalidateWarrantyFormCopies> EntityInvalidateWarrantyFormCopies { get; set; }
        public virtual DbSet<EntityInvestmentLetterDoc> EntityInvestmentLetterDoc { get; set; }
        public virtual DbSet<EntityInvestmentLetterDocCopies> EntityInvestmentLetterDocCopies { get; set; }
        public virtual DbSet<EntityInvestmentLetterDocVersion> EntityInvestmentLetterDocVersion { get; set; }
        public virtual DbSet<EntityInviteMeeting> EntityInviteMeeting { get; set; }
        public virtual DbSet<EntityInviteMeetingCopies> EntityInviteMeetingCopies { get; set; }
        public virtual DbSet<EntityIssuanceWarrantyForm> EntityIssuanceWarrantyForm { get; set; }
        public virtual DbSet<EntityIssuanceWarrantyFormCopies> EntityIssuanceWarrantyFormCopies { get; set; }
        public virtual DbSet<EntityItRequest> EntityItRequest { get; set; }
        public virtual DbSet<EntityItRequestCopies> EntityItRequestCopies { get; set; }
        public virtual DbSet<EntityLanguages> EntityLanguages { get; set; }
        public virtual DbSet<EntityLetter> EntityLetter { get; set; }
        public virtual DbSet<EntityLetterCopies> EntityLetterCopies { get; set; }
        public virtual DbSet<EntityLetterD0cAsaluye> EntityLetterD0cAsaluye { get; set; }
        public virtual DbSet<EntityLetterD0cAsaluyeCopies> EntityLetterD0cAsaluyeCopies { get; set; }
        public virtual DbSet<EntityLetterD0cAsaluyeVersion> EntityLetterD0cAsaluyeVersion { get; set; }
        public virtual DbSet<EntityLetterDoc> EntityLetterDoc { get; set; }
        public virtual DbSet<EntityLetterDocCopies> EntityLetterDocCopies { get; set; }
        public virtual DbSet<EntityLetterDocKharg> EntityLetterDocKharg { get; set; }
        public virtual DbSet<EntityLetterDocKhargCopies> EntityLetterDocKhargCopies { get; set; }
        public virtual DbSet<EntityLetterDocKhargVersion> EntityLetterDocKhargVersion { get; set; }
        public virtual DbSet<EntityLetterDocVersion> EntityLetterDocVersion { get; set; }
        public virtual DbSet<EntityLoan> EntityLoan { get; set; }
        public virtual DbSet<EntityLoanCopies> EntityLoanCopies { get; set; }
        public virtual DbSet<EntityLocalLock> EntityLocalLock { get; set; }
        public virtual DbSet<EntityMarineTransportationOfBrokeragefirms> EntityMarineTransportationOfBrokeragefirms { get; set; }
        public virtual DbSet<EntityMarineTransportationOfBrokeragefirmsCopies> EntityMarineTransportationOfBrokeragefirmsCopies { get; set; }
        public virtual DbSet<EntityMedicalLeaveForm> EntityMedicalLeaveForm { get; set; }
        public virtual DbSet<EntityMedicalLeaveFormCopies> EntityMedicalLeaveFormCopies { get; set; }
        public virtual DbSet<EntityMetadata> EntityMetadata { get; set; }
        public virtual DbSet<EntityMissionForm> EntityMissionForm { get; set; }
        public virtual DbSet<EntityMissionFormCopies> EntityMissionFormCopies { get; set; }
        public virtual DbSet<EntityMissionVerification> EntityMissionVerification { get; set; }
        public virtual DbSet<EntityMissionVerificationCopies> EntityMissionVerificationCopies { get; set; }
        public virtual DbSet<EntityNewMissionForm> EntityNewMissionForm { get; set; }
        public virtual DbSet<EntityNewsForm> EntityNewsForm { get; set; }
        public virtual DbSet<EntityNewsGeneral> EntityNewsGeneral { get; set; }
        public virtual DbSet<EntityNewsGeneralCopies> EntityNewsGeneralCopies { get; set; }
        public virtual DbSet<EntityOcupationRequest> EntityOcupationRequest { get; set; }
        public virtual DbSet<EntityOcupationRequestCopies> EntityOcupationRequestCopies { get; set; }
        public virtual DbSet<EntityOutLetterDoc1> EntityOutLetterDoc1 { get; set; }
        public virtual DbSet<EntityOutLetterDoc1Copies> EntityOutLetterDoc1Copies { get; set; }
        public virtual DbSet<EntityOutLetterDoc2> EntityOutLetterDoc2 { get; set; }
        public virtual DbSet<EntityOutLetterDoc2Copies> EntityOutLetterDoc2Copies { get; set; }
        public virtual DbSet<EntityPaymentForm> EntityPaymentForm { get; set; }
        public virtual DbSet<EntityPaymentFormCopies> EntityPaymentFormCopies { get; set; }
        public virtual DbSet<EntityPeriodicReviewChecklistServerForm> EntityPeriodicReviewChecklistServerForm { get; set; }
        public virtual DbSet<EntityPeriodicReviewChecklistServerFormCopies> EntityPeriodicReviewChecklistServerFormCopies { get; set; }
        public virtual DbSet<EntityPermissionRequestForm> EntityPermissionRequestForm { get; set; }
        public virtual DbSet<EntityPermissionRequestFormCopies> EntityPermissionRequestFormCopies { get; set; }
        public virtual DbSet<EntityPriorityList> EntityPriorityList { get; set; }
        public virtual DbSet<EntityPurchaseHardwareEquipmentForm> EntityPurchaseHardwareEquipmentForm { get; set; }
        public virtual DbSet<EntityPurchaseHardwareEquipmentFormCopies> EntityPurchaseHardwareEquipmentFormCopies { get; set; }
        public virtual DbSet<EntityRecoupmentAccountForm> EntityRecoupmentAccountForm { get; set; }
        public virtual DbSet<EntityRecoupmentAccountFormCopies> EntityRecoupmentAccountFormCopies { get; set; }
        public virtual DbSet<EntityRecycle> EntityRecycle { get; set; }
        public virtual DbSet<EntityRecycleCopies> EntityRecycleCopies { get; set; }
        public virtual DbSet<EntityRegistry> EntityRegistry { get; set; }
        public virtual DbSet<EntityRequestCarRentalForm> EntityRequestCarRentalForm { get; set; }
        public virtual DbSet<EntityRequestCarRentalFormCopies> EntityRequestCarRentalFormCopies { get; set; }
        public virtual DbSet<EntityRequestForm> EntityRequestForm { get; set; }
        public virtual DbSet<EntityRequestForm1> EntityRequestForm1 { get; set; }
        public virtual DbSet<EntityRequestForm1Copies> EntityRequestForm1Copies { get; set; }
        public virtual DbSet<EntityRequestFormCopies> EntityRequestFormCopies { get; set; }
        public virtual DbSet<EntityRestruntRequestForm> EntityRestruntRequestForm { get; set; }
        public virtual DbSet<EntityRestruntRequestFormCopies> EntityRestruntRequestFormCopies { get; set; }
        public virtual DbSet<EntityReturntoyard> EntityReturntoyard { get; set; }
        public virtual DbSet<EntityReturntoyardCopies> EntityReturntoyardCopies { get; set; }
        public virtual DbSet<EntityRevokeAccessForm> EntityRevokeAccessForm { get; set; }
        public virtual DbSet<EntityRevokeAccessFormCopies> EntityRevokeAccessFormCopies { get; set; }
        public virtual DbSet<EntitySam> EntitySam { get; set; }
        public virtual DbSet<EntitySecurityIncidentForm> EntitySecurityIncidentForm { get; set; }
        public virtual DbSet<EntitySecurityIncidentFormCopies> EntitySecurityIncidentFormCopies { get; set; }
        public virtual DbSet<EntitySessionForm> EntitySessionForm { get; set; }
        public virtual DbSet<EntitySessionFormCopies> EntitySessionFormCopies { get; set; }
        public virtual DbSet<EntityShora> EntityShora { get; set; }
        public virtual DbSet<EntityShoraCopies> EntityShoraCopies { get; set; }
        public virtual DbSet<EntityStates> EntityStates { get; set; }
        public virtual DbSet<EntityStockTransfer> EntityStockTransfer { get; set; }
        public virtual DbSet<EntityStockTransferCopies> EntityStockTransferCopies { get; set; }
        public virtual DbSet<EntitySubport> EntitySubport { get; set; }
        public virtual DbSet<EntitySubportCopies> EntitySubportCopies { get; set; }
        public virtual DbSet<EntitySupplies> EntitySupplies { get; set; }
        public virtual DbSet<EntitySuppliesCopies> EntitySuppliesCopies { get; set; }
        public virtual DbSet<EntityTajhizat> EntityTajhizat { get; set; }
        public virtual DbSet<EntityTajhizatCopies> EntityTajhizatCopies { get; set; }
        public virtual DbSet<EntityTamdidTaghlil> EntityTamdidTaghlil { get; set; }
        public virtual DbSet<EntityTamdidTaghlilCopies> EntityTamdidTaghlilCopies { get; set; }
        public virtual DbSet<EntityTaxForm> EntityTaxForm { get; set; }
        public virtual DbSet<EntityTaxFormCopies> EntityTaxFormCopies { get; set; }
        public virtual DbSet<EntityTeste> EntityTeste { get; set; }
        public virtual DbSet<EntityTesteCopies> EntityTesteCopies { get; set; }
        public virtual DbSet<EntityToolbar> EntityToolbar { get; set; }
        public virtual DbSet<EntityToolbarRelServicesAndWorkflows> EntityToolbarRelServicesAndWorkflows { get; set; }
        public virtual DbSet<EntityToolbarServices> EntityToolbarServices { get; set; }
        public virtual DbSet<EntityToolbarTemplate> EntityToolbarTemplate { get; set; }
        public virtual DbSet<EntityTruckform> EntityTruckform { get; set; }
        public virtual DbSet<EntityTruckformCopies> EntityTruckformCopies { get; set; }
        public virtual DbSet<EntityVacationDoc> EntityVacationDoc { get; set; }
        public virtual DbSet<EntityVacationDocCopies> EntityVacationDocCopies { get; set; }
        public virtual DbSet<EntityVacationDocOld> EntityVacationDocOld { get; set; }
        public virtual DbSet<EntityView> EntityView { get; set; }
        public virtual DbSet<EntityVulnerabilitiesIsmsForm> EntityVulnerabilitiesIsmsForm { get; set; }
        public virtual DbSet<EntityVulnerabilitiesIsmsFormCopies> EntityVulnerabilitiesIsmsFormCopies { get; set; }
        public virtual DbSet<EntityWarehouseDraftFrom> EntityWarehouseDraftFrom { get; set; }
        public virtual DbSet<EntityWarehouseDraftFromCopies> EntityWarehouseDraftFromCopies { get; set; }
        public virtual DbSet<EntityWaterRequest> EntityWaterRequest { get; set; }
        public virtual DbSet<EntityWaterRequestCopies> EntityWaterRequestCopies { get; set; }
        public virtual DbSet<FarzinCitizenFollowUpCategory> FarzinCitizenFollowUpCategory { get; set; }
        public virtual DbSet<FarzinCitizenFollowUpCategoryDetails> FarzinCitizenFollowUpCategoryDetails { get; set; }
        public virtual DbSet<FarzinCitizenStateList> FarzinCitizenStateList { get; set; }
        public virtual DbSet<FarzinePayment> FarzinePayment { get; set; }
        public virtual DbSet<FarzinEventLogConfig> FarzinEventLogConfig { get; set; }
        public virtual DbSet<FarzinInputsRegistry> FarzinInputsRegistry { get; set; }
        public virtual DbSet<FarzinModules> FarzinModules { get; set; }
        public virtual DbSet<FarzinPagesRegistry> FarzinPagesRegistry { get; set; }
        public virtual DbSet<FarzinPartnerMapping> FarzinPartnerMapping { get; set; }
        public virtual DbSet<FarzinSubModules> FarzinSubModules { get; set; }
        public virtual DbSet<FarzinTables> FarzinTables { get; set; }
        public virtual DbSet<FarzinTablesRelations> FarzinTablesRelations { get; set; }
        public virtual DbSet<FaxMngFileDependency> FaxMngFileDependency { get; set; }
        public virtual DbSet<FaxMngImportedReceivedList> FaxMngImportedReceivedList { get; set; }
        public virtual DbSet<FaxMngSelectedDependency> FaxMngSelectedDependency { get; set; }
        public virtual DbSet<FaxMngSendReceivers> FaxMngSendReceivers { get; set; }
        public virtual DbSet<FaxMngSends> FaxMngSends { get; set; }
        public virtual DbSet<FaxMngSendsArchive> FaxMngSendsArchive { get; set; }
        public virtual DbSet<FcfAdvertisingMapping> FcfAdvertisingMapping { get; set; }
        public virtual DbSet<FcfEventLogAdvertising> FcfEventLogAdvertising { get; set; }
        public virtual DbSet<FcfEventLogResponseToSends> FcfEventLogResponseToSends { get; set; }
        public virtual DbSet<FcfInterOrganDocHamesh> FcfInterOrganDocHamesh { get; set; }
        public virtual DbSet<FcfInterOrganDocRefers> FcfInterOrganDocRefers { get; set; }
        public virtual DbSet<FcfInterOrganFileRefers> FcfInterOrganFileRefers { get; set; }
        public virtual DbSet<FcfQueue> FcfQueue { get; set; }
        public virtual DbSet<FcfSendReceivers> FcfSendReceivers { get; set; }
        public virtual DbSet<FicLog> FicLog { get; set; }
        public virtual DbSet<FicRules> FicRules { get; set; }
        public virtual DbSet<FicServices> FicServices { get; set; }
        public virtual DbSet<FileDependency> FileDependency { get; set; }
        public virtual DbSet<FollowingAgain> FollowingAgain { get; set; }
        public virtual DbSet<Friends> Friends { get; set; }
        public virtual DbSet<FriendsRoles> FriendsRoles { get; set; }
        public virtual DbSet<GroupCategory> GroupCategory { get; set; }
        public virtual DbSet<Groups> Groups { get; set; }
        public virtual DbSet<GroupsLocationRestrictions> GroupsLocationRestrictions { get; set; }
        public virtual DbSet<GroupsRights> GroupsRights { get; set; }
        public virtual DbSet<GroupsRoles> GroupsRoles { get; set; }
        public virtual DbSet<Hamesh> Hamesh { get; set; }
        public virtual DbSet<IndicatorReservation> IndicatorReservation { get; set; }
        public virtual DbSet<InternallegalReference> InternallegalReference { get; set; }
        public virtual DbSet<InternalReceivers> InternalReceivers { get; set; }
        public virtual DbSet<Layout> Layout { get; set; }
        public virtual DbSet<LayoutJob> LayoutJob { get; set; }
        public virtual DbSet<LegalReference> LegalReference { get; set; }
        public virtual DbSet<LinkToOtherApplications> LinkToOtherApplications { get; set; }
        public virtual DbSet<MsgAttachDocs> MsgAttachDocs { get; set; }
        public virtual DbSet<MsgAttachFiles> MsgAttachFiles { get; set; }
        public virtual DbSet<MsgReceivers> MsgReceivers { get; set; }
        public virtual DbSet<MsgSents> MsgSents { get; set; }
        public virtual DbSet<MultiCategory> MultiCategory { get; set; }
        public virtual DbSet<OrganizationRoles> OrganizationRoles { get; set; }
        public virtual DbSet<PersonalArchive> PersonalArchive { get; set; }
        public virtual DbSet<PersonalArchiveSends> PersonalArchiveSends { get; set; }
        public virtual DbSet<PersonalLock> PersonalLock { get; set; }
        public virtual DbSet<PersonnelSignature> PersonnelSignature { get; set; }
        public virtual DbSet<PreDefinedHamesh> PreDefinedHamesh { get; set; }
        public virtual DbSet<PreDefinedPersonalDesc> PreDefinedPersonalDesc { get; set; }
        public virtual DbSet<PreNoteCategories> PreNoteCategories { get; set; }
        public virtual DbSet<Priorities> Priorities { get; set; }
        public virtual DbSet<RelArchiveDepartmentEntities> RelArchiveDepartmentEntities { get; set; }
        public virtual DbSet<RelEntityIndicator> RelEntityIndicator { get; set; }
        public virtual DbSet<RepeatedcirculationInCartable> RepeatedcirculationInCartable { get; set; }
        public virtual DbSet<RepeatedPersonalArchiveInCartable> RepeatedPersonalArchiveInCartable { get; set; }
        public virtual DbSet<ReservedPersonnel> ReservedPersonnel { get; set; }
        public virtual DbSet<ReserveHistory> ReserveHistory { get; set; }
        public virtual DbSet<RevocationCertificatesList> RevocationCertificatesList { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<RolesDefaultPrintLayouts> RolesDefaultPrintLayouts { get; set; }
        public virtual DbSet<RolesExLocationAccess> RolesExLocationAccess { get; set; }
        public virtual DbSet<RolesExRights> RolesExRights { get; set; }
        public virtual DbSet<RolesExTimeAccess> RolesExTimeAccess { get; set; }
        public virtual DbSet<Rootcertificates> Rootcertificates { get; set; }
        public virtual DbSet<Rptcategory> Rptcategory { get; set; }
        public virtual DbSet<RptdbConfig> RptdbConfig { get; set; }
        public virtual DbSet<Rptentity> Rptentity { get; set; }
        public virtual DbSet<Rptstructure> Rptstructure { get; set; }
        public virtual DbSet<SendDocAttachment> SendDocAttachment { get; set; }
        public virtual DbSet<SendDocCopy> SendDocCopy { get; set; }
        public virtual DbSet<SendFileAttachment> SendFileAttachment { get; set; }
        public virtual DbSet<SendReceivers> SendReceivers { get; set; }
        public virtual DbSet<Sends> Sends { get; set; }
        public virtual DbSet<SpecialCartable> SpecialCartable { get; set; }
        public virtual DbSet<SpecialCartableCategory> SpecialCartableCategory { get; set; }
        public virtual DbSet<SpecialCartableDependency> SpecialCartableDependency { get; set; }
        public virtual DbSet<SpecialCartableSecretaryPersonnel> SpecialCartableSecretaryPersonnel { get; set; }
        public virtual DbSet<SubjectCategory> SubjectCategory { get; set; }
        public virtual DbSet<Subjects> Subjects { get; set; }
        public virtual DbSet<SyncBaseFarzinForms> SyncBaseFarzinForms { get; set; }
        public virtual DbSet<SyncBaseInfoLastCodes> SyncBaseInfoLastCodes { get; set; }
        public virtual DbSet<SyncKeyMap> SyncKeyMap { get; set; }
        public virtual DbSet<SyncLockedDocuments> SyncLockedDocuments { get; set; }
        public virtual DbSet<SyncOfflineChangesLog> SyncOfflineChangesLog { get; set; }
        public virtual DbSet<SystemCategories> SystemCategories { get; set; }
        public virtual DbSet<SystemRights> SystemRights { get; set; }
        public virtual DbSet<TaskHistory> TaskHistory { get; set; }
        public virtual DbSet<TaskSchedule> TaskSchedule { get; set; }
        public virtual DbSet<TempTablePermission> TempTablePermission { get; set; }
        public virtual DbSet<TesTable> TesTable { get; set; }
        public virtual DbSet<UploadFiles> UploadFiles { get; set; }
        public virtual DbSet<UrlserviceExpiredKeys> UrlserviceExpiredKeys { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<UsersDevice> UsersDevice { get; set; }
        public virtual DbSet<UsersOtp> UsersOtp { get; set; }
        public virtual DbSet<UsersTickets> UsersTickets { get; set; }
        public virtual DbSet<UsersToken> UsersToken { get; set; }
        public virtual DbSet<Wfcategory> Wfcategory { get; set; }
        public virtual DbSet<Wfdbconnection> Wfdbconnection { get; set; }
        public virtual DbSet<Wfexecute> Wfexecute { get; set; }
        public virtual DbSet<WffaxRequest> WffaxRequest { get; set; }
        public virtual DbSet<Wfhistory> Wfhistory { get; set; }
        public virtual DbSet<WflogTrace> WflogTrace { get; set; }
        public virtual DbSet<Wfstructure> Wfstructure { get; set; }
        public virtual DbSet<WfstructureVersion> WfstructureVersion { get; set; }
        public virtual DbSet<WfvirtualUser> WfvirtualUser { get; set; }

        // Unable to generate entity type for table 'dbo.tmpSystemProfile'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Rel_Category_WFStructure'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Results'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Rel_Category_Report'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Rel_Actions_Group'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Rel_SystemCategories'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.ImportExportMethods'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.DocType'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Rel_PreNote_Categories'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Entity_Relations'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.TempTable'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Entity_filtering_Copies'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Entity_New_Mission_Form_Copies'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Entity_first_aid_Copies'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Entity_food_request_Copies'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.tmpCheckExportFiles'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.tmpCheckInnerFiles'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Entity_imagenews_coverage_Copies'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Entity_sam_Copies'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.CustomizeCardTable'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Entity_news_form_Copies'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Entity_electrical_installations_Copies'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Convert_Exception'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Entity_Vacation_Doc2'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.FaxMng_Servers'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Convert_InvalidFiles'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.BlockedAccount'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.InvalidLoginTry'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.FarzinCitizenServer'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.FarzinIntro'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Role_ViewDepartmentNews'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.PrintPreviewHistory'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Entity_imagenews_coverage'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.RPTGenerator_Log'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.TempSystemRights'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.ViewCardTable'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Rel_Category_Group'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Entity_food_request'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.WFError'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.SecurityLevels'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.TaskLog'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.FarzinEventLog'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.UserLoginHistory'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Entity_Actions_History'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.System_Settings'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Entity_SecurityLevels'. Please see the warning messages.

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
                base.OnConfiguring(optionsBuilder);
                optionsBuilder.UseSqlServer(_config["Data:ccsConnection"]);
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Actions>(entity =>
            {
                entity.HasKey(e => e.ActionCode);

                entity.HasIndex(e => new { e.ActionCode, e.ActionName })
                    .HasName("IX_Actions");

                entity.Property(e => e.ActionName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.ActionOrder).HasDefaultValueSql("((1))");

                entity.Property(e => e.FarsiDescription).HasMaxLength(1024);

                entity.Property(e => e.IsActiveForCardTable).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsActiveForSend).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsActiveForSendCopy).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsUsedForEce).HasColumnName("IsUsedForECE");

                entity.Property(e => e.IsUsedForFcf).HasColumnName("IsUsedForFCF");

                entity.Property(e => e.ResponseToSend).HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<ActiveSendReceivers>(entity =>
            {
                entity.HasKey(e => e.Code);

                entity.ToTable("ActiveSend_Receivers");

                entity.HasIndex(e => e.ResponseDate)
                    .HasName("IX_ActiveSend_Receivers_3");

                entity.HasIndex(e => e.ResponseUntilDate)
                    .HasName("IX_ActiveSend_Receivers_2");

                entity.HasIndex(e => e.SendCode)
                    .HasName("IX_ActiveSend_Receivers_1");

                entity.HasIndex(e => new { e.ReceiverRoleId, e.ActionCode })
                    .HasName("IX_ActiveSend_Receivers");

                entity.HasIndex(e => new { e.ConsiderationType, e.ReceiveDate, e.FinishedOperation, e.ShowRejected })
                    .HasName("IX_ActiveSend_Receivers_4");

                entity.Property(e => e.Code).ValueGeneratedNever();

                entity.Property(e => e.ConsiderationType).HasMaxLength(255);

                entity.Property(e => e.FirstChangeViewStatesDate).HasColumnType("datetime");

                entity.Property(e => e.FollowingCount).HasDefaultValueSql("((0))");

                entity.Property(e => e.HiddenRoleId)
                    .HasColumnName("HiddenRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.HiddenUserId)
                    .HasColumnName("HiddenUserID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LastChangeViewStatesDate).HasColumnType("datetime");

                entity.Property(e => e.PriorityId).HasColumnName("PriorityID");

                entity.Property(e => e.ReceiveDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ReceiverId).HasColumnName("ReceiverID");

                entity.Property(e => e.ReceiverRoleId).HasColumnName("ReceiverRoleID");

                entity.Property(e => e.ResponseDate).HasColumnType("datetime");

                entity.Property(e => e.ResponseUntilDate).HasColumnType("datetime");

                entity.Property(e => e.ShowRejected).HasDefaultValueSql("((1))");

                entity.Property(e => e.ViewStates)
                    .IsRequired()
                    .HasColumnType("char(40)")
                    .HasDefaultValueSql("('0000000000000000000000000000000000000000')");

                entity.Property(e => e.WfextendedParams)
                    .HasColumnName("WFExtendedParams")
                    .HasMaxLength(4000);

                entity.Property(e => e.WfscenarioCode).HasColumnName("WFScenarioCode");

                entity.HasOne(d => d.SendCodeNavigation)
                    .WithMany(p => p.ActiveSendReceivers)
                    .HasForeignKey(d => d.SendCode)
                    .HasConstraintName("FK_ActiveSend_Receivers_ActiveSends");
            });

            modelBuilder.Entity<ActiveSends>(entity =>
            {
                entity.HasKey(e => e.SendCode);

                entity.HasIndex(e => e.SendCode)
                    .HasName("IX_ActiveSends_3");

                entity.HasIndex(e => e.SendIsDeleted)
                    .HasName("IX_ActiveSends_6");

                entity.HasIndex(e => e.SendIsRecycle)
                    .HasName("IX_ActiveSends_5");

                entity.HasIndex(e => e.SendParentCode)
                    .HasName("IX_ActiveSends_4");

                entity.HasIndex(e => e.SenderRoleId)
                    .HasName("IX_ActiveSends_1");

                entity.HasIndex(e => e.ViewInOutbox)
                    .HasName("IX_ActiveSends_7");

                entity.HasIndex(e => new { e.EntityTypeCode, e.EntityCode })
                    .HasName("IX_ActiveSends_2");

                entity.HasIndex(e => new { e.SenderId, e.SendDate })
                    .HasName("IX_ActiveSends");

                entity.Property(e => e.SendCode).ValueGeneratedNever();

                entity.Property(e => e.Description).HasMaxLength(1024);

                entity.Property(e => e.Location)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ParentReceiverCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.SendDate).HasColumnType("datetime");

                entity.Property(e => e.SendIsDeleted).HasDefaultValueSql("(0)");

                entity.Property(e => e.SendIsRecycle).HasDefaultValueSql("(0)");

                entity.Property(e => e.SendRecycleDate).HasColumnType("datetime");

                entity.Property(e => e.SendRecycleRefrence).HasMaxLength(255);

                entity.Property(e => e.SenderId).HasColumnName("SenderID");

                entity.Property(e => e.SenderRoleId).HasColumnName("SenderRoleID");

                entity.Property(e => e.ViewInOutbox).HasDefaultValueSql("(1)");

                entity.Property(e => e.WfexecutionId).HasColumnName("WFExecutionID");
            });

            modelBuilder.Entity<ArchiveDepartment>(entity =>
            {
                entity.HasKey(e => e.SubjectId);

                entity.HasIndex(e => e.Code)
                    .HasName("IX_ArchiveDepartment_2");

                entity.HasIndex(e => e.DepartmentId)
                    .HasName("IX_ArchiveDepartment_4");

                entity.HasIndex(e => e.OrganizationId)
                    .HasName("IX_ArchiveDepartment_3");

                entity.HasIndex(e => e.OtherPolicyTypeId)
                    .HasName("IX_ArchiveDepartment_1");

                entity.HasIndex(e => e.ParentId)
                    .HasName("IX_ArchiveDepartment_5");

                entity.HasIndex(e => e.SubjectId)
                    .HasName("IX_ArchiveDepartment");

                entity.Property(e => e.SubjectId).HasColumnName("SubjectID");

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");

                entity.Property(e => e.OrganizationId).HasColumnName("OrganizationID");

                entity.Property(e => e.OtherPolicyTypeId)
                    .HasColumnName("OtherPolicyTypeID")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ParentId).HasColumnName("ParentID");

                entity.Property(e => e.SubjectDescription).HasMaxLength(1024);

                entity.Property(e => e.SubjectName)
                    .IsRequired()
                    .HasMaxLength(1024);
            });

            modelBuilder.Entity<ArchiveFolderPermission>(entity =>
            {
                entity.HasIndex(e => new { e.GroupId, e.PolicyTypeId })
                    .HasName("IX_ArchiveFolderPermission_1");

                entity.HasIndex(e => new { e.RoleId, e.PolicyTypeId })
                    .HasName("IX_ArchiveFolderPermission");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.PolicyTypeId).HasColumnName("PolicyTypeID");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.SubjectId).HasColumnName("SubjectID");
            });

            modelBuilder.Entity<AttachmentType>(entity =>
            {
                entity.HasKey(e => e.AttachmentTypeCode);

                entity.ToTable("Attachment_Type");

                entity.Property(e => e.Active).HasDefaultValueSql("((1))");

                entity.Property(e => e.Title).HasMaxLength(200);
            });

            modelBuilder.Entity<Certificates>(entity =>
            {
                entity.HasKey(e => e.CertificateId);

                entity.Property(e => e.CertificateId).HasColumnName("Certificate_ID");

                entity.Property(e => e.CarootId).HasColumnName("CARootID");

                entity.Property(e => e.Certificate).IsRequired();

                entity.Property(e => e.CreateRoleId)
                    .HasColumnName("CreateRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreateUserId)
                    .HasColumnName("CreateUserID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FingerPrint).IsRequired();

                entity.Property(e => e.OwnerId).HasColumnName("OwnerID");

                entity.Property(e => e.RevocationReasonCode)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.RevokeDate).HasColumnType("datetime");

                entity.Property(e => e.ViewName)
                    .IsRequired()
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<Contacts>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CrationDate).HasColumnType("datetime");

                entity.Property(e => e.CreatorUserId).HasColumnName("CreatorUserID");

                entity.Property(e => e.FirstName).HasMaxLength(50);

                entity.Property(e => e.HomeCity).HasMaxLength(100);

                entity.Property(e => e.HomeCountry).HasMaxLength(50);

                entity.Property(e => e.HomePostalCode).HasMaxLength(50);

                entity.Property(e => e.HomeProvince).HasMaxLength(50);

                entity.Property(e => e.HomeStreet).HasMaxLength(250);

                entity.Property(e => e.HomeWebSite).HasMaxLength(600);

                entity.Property(e => e.LastName).HasMaxLength(70);

                entity.Property(e => e.Note).HasMaxLength(2000);

                entity.Property(e => e.OrganizationId).HasColumnName("OrganizationID");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.WorkCity).HasMaxLength(100);

                entity.Property(e => e.WorkCompany).HasMaxLength(200);

                entity.Property(e => e.WorkCountry).HasMaxLength(50);

                entity.Property(e => e.WorkDepartment).HasMaxLength(100);

                entity.Property(e => e.WorkPostalCode).HasMaxLength(50);

                entity.Property(e => e.WorkProvince).HasMaxLength(50);

                entity.Property(e => e.WorkRole).HasMaxLength(100);

                entity.Property(e => e.WorkStreet).HasMaxLength(250);

                entity.Property(e => e.WorkWebSite).HasMaxLength(600);
            });

            modelBuilder.Entity<ContactsCategory>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CategoryName).HasMaxLength(1024);

                entity.Property(e => e.CategoryNote).HasMaxLength(1024);

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.CreatorId).HasColumnName("CreatorID");

                entity.Property(e => e.ParentId).HasColumnName("ParentID");
            });

            modelBuilder.Entity<ContactsCategoryGroups>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CategoryId)
                    .HasColumnName("CategoryID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<ContactsGroup>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.CreatorId).HasColumnName("CreatorID");

                entity.Property(e => e.Name).HasMaxLength(100);

                entity.Property(e => e.Note).HasMaxLength(2000);
            });

            modelBuilder.Entity<ContactsGroupMember>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CotactsId).HasColumnName("CotactsID");

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.CreatorId).HasColumnName("CreatorID");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");
            });

            modelBuilder.Entity<ContentRotator>(entity =>
            {
                entity.HasKey(e => e.ContentId);

                entity.Property(e => e.ContentId).HasColumnName("ContentID");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CreatorRoleId).HasColumnName("CreatorRoleID");

                entity.Property(e => e.EditionDate).HasColumnType("datetime");

                entity.Property(e => e.EditorRoleId).HasColumnName("EditorRoleID");

                entity.Property(e => e.EnforceShow).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsActive).HasDefaultValueSql("(1)");

                entity.Property(e => e.Subject).HasMaxLength(200);

                entity.Property(e => e.TxtContentHtml)
                    .IsRequired()
                    .HasColumnName("txtContentHtml")
                    .HasMaxLength(4000);
            });

            modelBuilder.Entity<CustomError>(entity =>
            {
                entity.HasKey(e => e.ErrorId);

                entity.Property(e => e.ErrorId).HasColumnName("ErrorID");

                entity.Property(e => e.Cookies).HasDefaultValueSql("('')");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FormParams).HasDefaultValueSql("('')");

                entity.Property(e => e.Ipaddress)
                    .HasColumnName("IPAddress")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.Sessions).HasDefaultValueSql("('')");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasMaxLength(1024);

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<DepartmentDefaultSendMailBox>(entity =>
            {
                entity.ToTable("Department_DefaultSendMailBox");

                entity.HasIndex(e => e.DepartmentId)
                    .HasName("IX_Department_DefaultSendMailBox")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");

                entity.Property(e => e.MailBoxId).HasColumnName("MailBoxID");
            });

            modelBuilder.Entity<DepartmentNews>(entity =>
            {
                entity.Property(e => e.DepartmentNewsId).HasColumnName("DepartmentNewsID");

                entity.Property(e => e.CreateOrUpdateDate).HasColumnType("datetime");

                entity.Property(e => e.Ec).HasColumnName("EC");

                entity.Property(e => e.Etc).HasColumnName("ETC");
            });

            modelBuilder.Entity<Departments>(entity =>
            {
                entity.HasKey(e => e.DepartmentId);

                entity.HasIndex(e => e.DepartmentId)
                    .HasName("IX_Departments");

                entity.Property(e => e.DepartmentId).HasColumnName("Department_ID");

                entity.Property(e => e.Address).HasMaxLength(255);

                entity.Property(e => e.CalendarHolidayXml)
                    .HasColumnName("CalendarHolidayXML")
                    .HasColumnType("ntext");

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DepartmentChartXml)
                    .HasColumnName("DepartmentChartXML")
                    .HasColumnType("ntext");

                entity.Property(e => e.DepartmentName).IsRequired();

                entity.Property(e => e.EmailAddress).HasMaxLength(150);

                entity.Property(e => e.EmailConfiguration).HasMaxLength(4000);

                entity.Property(e => e.EndDateSecretSharing).HasMaxLength(255);

                entity.Property(e => e.EndWorkTime).HasDefaultValueSql("((14))");

                entity.Property(e => e.FaxConfiguration).HasColumnType("ntext");

                entity.Property(e => e.Faxes)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.FcfadvertisingPolicy).HasColumnName("FCFAdvertisingPolicy");

                entity.Property(e => e.FormsCategory).HasDefaultValueSql("((1))");

                entity.Property(e => e.HonestXml)
                    .HasColumnName("HonestXML")
                    .HasColumnType("ntext");

                entity.Property(e => e.IsNeedConfirmChangePassword).HasMaxLength(255);

                entity.Property(e => e.IsNeedToConfirm).HasMaxLength(255);

                entity.Property(e => e.LawPermissionsXml)
                    .HasColumnName("LawPermissionsXML")
                    .HasColumnType("xml");

                entity.Property(e => e.LogoPath)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ManagerHonestRoleId)
                    .HasColumnName("ManagerHonestRoleID")
                    .HasMaxLength(255);

                entity.Property(e => e.Oid).HasColumnName("OID");

                entity.Property(e => e.Phones)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.ServerAddress).HasMaxLength(255);

                entity.Property(e => e.StartDateSecretSharing).HasMaxLength(255);

                entity.Property(e => e.StartWorkTime).HasDefaultValueSql("((7))");

                entity.Property(e => e.WaterFallLaw).HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<EmailMngFarzinReceivesInfo>(entity =>
            {
                entity.ToTable("EmailMng_FarzinReceivesInfo");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Crc)
                    .HasColumnName("CRC")
                    .HasColumnType("char(40)");

                entity.Property(e => e.IndicatorDocDate).HasColumnType("datetime");

                entity.Property(e => e.IndicatorDocNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000);

                entity.Property(e => e.ReceiveId).HasColumnName("ReceiveID");

                entity.Property(e => e.SecureReceive).HasDefaultValueSql("(0)");

                entity.Property(e => e.SenderDepartmentId)
                    .HasColumnName("Sender_DepartmentID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.SenderDepartmentName)
                    .IsRequired()
                    .HasColumnName("Sender_DepartmentName")
                    .HasMaxLength(500)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SenderIndicatorId)
                    .HasColumnName("Sender_IndicatorID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.SenderRequesterRoleId)
                    .HasColumnName("Sender_RequesterRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.SenderRequesterUserId)
                    .HasColumnName("Sender_RequesterUserID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.SenderSendId)
                    .HasColumnName("Sender_SendID")
                    .HasColumnType("char(10)")
                    .HasDefaultValueSql("((-1))");

                entity.HasOne(d => d.Receive)
                    .WithMany(p => p.EmailMngFarzinReceivesInfo)
                    .HasForeignKey(d => d.ReceiveId)
                    .HasConstraintName("FK_EmailMng_FarzinReceivesInfo_EmailMng_Receives");
            });

            modelBuilder.Entity<EmailMngImportedReceiveList>(entity =>
            {
                entity.ToTable("EmailMng_ImportedReceiveList");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Ec).HasColumnName("EC");

                entity.Property(e => e.Etc).HasColumnName("ETC");

                entity.Property(e => e.ImportEntityNumber)
                    .IsRequired()
                    .HasMaxLength(1000);

                entity.Property(e => e.IndicatorId).HasColumnName("IndicatorID");

                entity.Property(e => e.ReceiveId).HasColumnName("ReceiveID");

                entity.HasOne(d => d.Receive)
                    .WithMany(p => p.EmailMngImportedReceiveList)
                    .HasForeignKey(d => d.ReceiveId)
                    .HasConstraintName("FK_EmailMng_ImportedReceiveList_EmailMng_Receives");
            });

            modelBuilder.Entity<EmailMngLocalLock>(entity =>
            {
                entity.ToTable("EmailMng_LocalLock");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EmailReceiveId).HasColumnName("EmailReceiveID");

                entity.Property(e => e.LockDate).HasColumnType("datetime");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<EmailMngLog>(entity =>
            {
                entity.ToTable("EmailMng_Log");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Ipaddress)
                    .HasColumnName("IPAddress")
                    .HasMaxLength(50);

                entity.Property(e => e.LogAction)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LogDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.LogMsg)
                    .IsRequired()
                    .HasColumnType("ntext");

                entity.Property(e => e.LogSection)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.RoleId)
                    .HasColumnName("RoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EmailMngLogFormat>(entity =>
            {
                entity.ToTable("EmailMng_LogFormat");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreatorUserId)
                    .HasColumnName("CreatorUserID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.EditionDate).HasColumnType("datetime");

                entity.Property(e => e.EditorRoleId).HasColumnName("EditorRoleID");

                entity.Property(e => e.EditorUserId).HasColumnName("EditorUserID");

                entity.Property(e => e.Format)
                    .IsRequired()
                    .HasMaxLength(4000);
            });

            modelBuilder.Entity<EmailMngMailBox>(entity =>
            {
                entity.ToTable("EmailMng_MailBox");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Active).HasDefaultValueSql("(1)");

                entity.Property(e => e.AttachmentsTransmission).HasDefaultValueSql("(0)");

                entity.Property(e => e.AutomaticReceive).HasDefaultValueSql("(0)");

                entity.Property(e => e.AutomaticSend).HasDefaultValueSql("(0)");

                entity.Property(e => e.Crc)
                    .HasColumnName("CRC")
                    .HasColumnType("char(40)");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CreatorRoleId).HasColumnName("CreatorRoleID");

                entity.Property(e => e.CreatorUserId).HasColumnName("CreatorUserID");

                entity.Property(e => e.DeleteFromPop3)
                    .HasColumnName("DeleteFromPOP3")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");

                entity.Property(e => e.Desc).HasMaxLength(1000);

                entity.Property(e => e.EmailAddress)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.ForReceive).HasDefaultValueSql("(0)");

                entity.Property(e => e.ForSend).HasDefaultValueSql("(0)");

                entity.Property(e => e.LastEditionDate).HasColumnType("datetime");

                entity.Property(e => e.LastEditorRoleId).HasColumnName("LastEditorRoleID");

                entity.Property(e => e.LastEditorUserId).HasColumnName("LastEditorUserID");

                entity.Property(e => e.Pop3Id).HasColumnName("POP3_ID");

                entity.Property(e => e.Pop3Password)
                    .HasColumnName("POP3_Password")
                    .HasMaxLength(1000);

                entity.Property(e => e.Pop3UserName)
                    .HasColumnName("POP3_UserName")
                    .HasMaxLength(500);

                entity.Property(e => e.SmtpId).HasColumnName("SMTP_ID");

                entity.Property(e => e.SmtpPassword)
                    .HasColumnName("SMTP_Password")
                    .HasMaxLength(1000);

                entity.Property(e => e.SmtpUserName)
                    .HasColumnName("SMTP_UserName")
                    .HasMaxLength(500);

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.Pop3)
                    .WithMany(p => p.EmailMngMailBox)
                    .HasForeignKey(d => d.Pop3Id)
                    .HasConstraintName("FK_EmailMng_MailBox_EmailMng_POP3");
            });

            modelBuilder.Entity<EmailMngMailBoxInvalidSender>(entity =>
            {
                entity.ToTable("EmailMng_MailBoxInvalidSender");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Active).HasDefaultValueSql("(0)");

                entity.Property(e => e.Crc)
                    .HasColumnName("CRC")
                    .HasColumnType("char(40)");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CreatorRoleId).HasColumnName("CreatorRoleID");

                entity.Property(e => e.CreatorUserId).HasColumnName("CreatorUserID");

                entity.Property(e => e.EmailAddress)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.LastEditionDate).HasColumnType("datetime");

                entity.Property(e => e.LastEditorRoleId).HasColumnName("LastEditorRoleID");

                entity.Property(e => e.LastEditorUserId).HasColumnName("LastEditorUserID");

                entity.Property(e => e.MailBoxId).HasColumnName("MailBoxID");

                entity.HasOne(d => d.MailBox)
                    .WithMany(p => p.EmailMngMailBoxInvalidSender)
                    .HasForeignKey(d => d.MailBoxId)
                    .HasConstraintName("FK_EmailMng_MailBoxInvalidSender_EmailMng_MailBox");
            });

            modelBuilder.Entity<EmailMngMailBoxOwner>(entity =>
            {
                entity.ToTable("EmailMng_MailBoxOwner");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Active).HasDefaultValueSql("(0)");

                entity.Property(e => e.Crc)
                    .HasColumnName("CRC")
                    .HasColumnType("char(40)");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CreatorRoleId).HasColumnName("CreatorRoleID");

                entity.Property(e => e.CreatorUserId).HasColumnName("CreatorUserID");

                entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");

                entity.Property(e => e.LastEditionDate).HasColumnType("datetime");

                entity.Property(e => e.LastEditorRoleId).HasColumnName("LastEditorRoleID");

                entity.Property(e => e.LastEditorUserId).HasColumnName("LastEditorUserID");

                entity.Property(e => e.OwnerId).HasColumnName("OwnerID");

                entity.Property(e => e.OwnerType)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EmailMngMailBoxOwnerRel>(entity =>
            {
                entity.ToTable("EmailMng_MailBox_Owner_Rel");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Active).HasDefaultValueSql("(1)");

                entity.Property(e => e.Crc)
                    .HasColumnName("CRC")
                    .HasColumnType("char(40)");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CreatorRoleId).HasColumnName("CreatorRoleID");

                entity.Property(e => e.CreatorUserId).HasColumnName("CreatorUserID");

                entity.Property(e => e.LastEditionDate).HasColumnType("datetime");

                entity.Property(e => e.LastEditorRoleId).HasColumnName("LastEditorRoleID");

                entity.Property(e => e.LastEditorUserId).HasColumnName("LastEditorUserID");

                entity.Property(e => e.MailBoxId).HasColumnName("MailBoxID");

                entity.Property(e => e.MailBoxOwnerId).HasColumnName("MailBoxOwner_ID");

                entity.HasOne(d => d.MailBox)
                    .WithMany(p => p.EmailMngMailBoxOwnerRel)
                    .HasForeignKey(d => d.MailBoxId)
                    .HasConstraintName("FK_EmailMng_MailBox_Owner_Rel_EmailMng_MailBox");

                entity.HasOne(d => d.MailBoxOwner)
                    .WithMany(p => p.EmailMngMailBoxOwnerRel)
                    .HasForeignKey(d => d.MailBoxOwnerId)
                    .HasConstraintName("FK_EmailMng_MailBox_Owner_Rel_EmailMng_MailBoxOwner");
            });

            modelBuilder.Entity<EmailMngMailBoxReceiveTrying>(entity =>
            {
                entity.ToTable("EmailMng_MailBoxReceiveTrying");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MailBoxId).HasColumnName("MailBoxID");

                entity.Property(e => e.TechnicalResult)
                    .IsRequired()
                    .HasMaxLength(1000);

                entity.Property(e => e.TrierRoleId)
                    .HasColumnName("TrierRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.TrierUserId)
                    .HasColumnName("TrierUserID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.TryDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TryType)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(N'All')");

                entity.Property(e => e.ViewResult)
                    .IsRequired()
                    .HasMaxLength(1000);

                entity.HasOne(d => d.MailBox)
                    .WithMany(p => p.EmailMngMailBoxReceiveTrying)
                    .HasForeignKey(d => d.MailBoxId)
                    .HasConstraintName("FK_EmailMng_MailBoxReceiveTrying_EmailMng_MailBox");
            });

            modelBuilder.Entity<EmailMngNoteBook>(entity =>
            {
                entity.ToTable("EmailMng_NoteBook");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");

                entity.Property(e => e.Desc).HasMaxLength(4000);

                entity.Property(e => e.FirstName).HasMaxLength(500);

                entity.Property(e => e.LastName).HasMaxLength(500);

                entity.Property(e => e.Nikename)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.OwnerId)
                    .HasColumnName("OwnerID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.OwnerType)
                    .IsRequired()
                    .HasColumnType("char(1)")
                    .HasDefaultValueSql("('R')");

                entity.HasOne(d => d.Department)
                    .WithMany(p => p.EmailMngNoteBook)
                    .HasForeignKey(d => d.DepartmentId)
                    .HasConstraintName("FK_EmailMng_NoteBook_Departments");
            });

            modelBuilder.Entity<EmailMngNoteBookEmailAddresses>(entity =>
            {
                entity.ToTable("EmailMng_NoteBookEmailAddresses");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EmailAddress)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.NoteBookId).HasColumnName("NoteBookID");

                entity.HasOne(d => d.NoteBook)
                    .WithMany(p => p.EmailMngNoteBookEmailAddresses)
                    .HasForeignKey(d => d.NoteBookId)
                    .HasConstraintName("FK_EmailMng_NoteBookEmailAddresses_EmailMng_NoteBook");
            });

            modelBuilder.Entity<EmailMngPop3>(entity =>
            {
                entity.ToTable("EmailMng_POP3");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Active).HasDefaultValueSql("((1))");

                entity.Property(e => e.Address)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CreatorRoleId).HasColumnName("CreatorRoleID");

                entity.Property(e => e.CreatorUserId).HasColumnName("CreatorUserID");

                entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");

                entity.Property(e => e.Desc)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.LastEditionDate).HasColumnType("datetime");

                entity.Property(e => e.LastEditorRoleId).HasColumnName("LastEditorRoleID");

                entity.Property(e => e.LastEditorUserId).HasColumnName("LastEditorUserID");

                entity.Property(e => e.Port).HasDefaultValueSql("((110))");

                entity.Property(e => e.Spalogon).HasColumnName("SPALogon");

                entity.Property(e => e.Sslrequisition).HasColumnName("SSLRequisition");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(250);
            });

            modelBuilder.Entity<EmailMngReceiveFileAttachments>(entity =>
            {
                entity.ToTable("EmailMng_ReceiveFileAttachments");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Crc)
                    .HasColumnName("CRC")
                    .HasColumnType("char(40)");

                entity.Property(e => e.FarzinReceiveCrcvalidation)
                    .HasColumnName("FarzinReceiveCRCValidation")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.FarzinReceiveDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.OriginalName).HasMaxLength(1000);

                entity.Property(e => e.PhysicalPath)
                    .IsRequired()
                    .HasMaxLength(4000);

                entity.Property(e => e.ReceiveId).HasColumnName("ReceiveID");

                entity.Property(e => e.Title).HasMaxLength(250);

                entity.HasOne(d => d.Receive)
                    .WithMany(p => p.EmailMngReceiveFileAttachments)
                    .HasForeignKey(d => d.ReceiveId)
                    .HasConstraintName("FK_EmailMng_ReceiveFileAttachments_EmailMng_Receives");
            });

            modelBuilder.Entity<EmailMngReceiveReceivers>(entity =>
            {
                entity.ToTable("EmailMng_ReceiveReceivers");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EmailAddress).HasMaxLength(500);

                entity.Property(e => e.FarzinReceiveDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ReceiveId).HasColumnName("ReceiveID");

                entity.Property(e => e.ReceiveType)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.Title).HasMaxLength(255);

                entity.HasOne(d => d.Receive)
                    .WithMany(p => p.EmailMngReceiveReceivers)
                    .HasForeignKey(d => d.ReceiveId)
                    .HasConstraintName("FK_EmailMng_ReceiveReceivers_EmailMng_Receives");
            });

            modelBuilder.Entity<EmailMngReceives>(entity =>
            {
                entity.ToTable("EmailMng_Receives");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AttachmentNo)
                    .HasColumnName("AttachmentNO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BodyCharset)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BodyHtml)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BodyText)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CompleteTransmission).HasDefaultValueSql("(0)");

                entity.Property(e => e.CompleteTransmissionRequest).HasDefaultValueSql("(0)");

                entity.Property(e => e.Crc)
                    .HasColumnName("CRC")
                    .HasColumnType("char(40)");

                entity.Property(e => e.EceVersion)
                    .IsRequired()
                    .HasColumnName("ECE_Version")
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FarzinReceiveDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IsEceReceipt)
                    .HasColumnName("IsECE_Receipt")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.IsEceSend)
                    .HasColumnName("IsECE_Send")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.LastReadDate).HasColumnType("datetime");

                entity.Property(e => e.LastReaderRoleId)
                    .HasColumnName("LastReaderRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LastReaderUserId)
                    .HasColumnName("LastReaderUserID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.MailBoxId).HasColumnName("MailBoxID");

                entity.Property(e => e.MessageId)
                    .IsRequired()
                    .HasColumnName("MessageID")
                    .HasMaxLength(500);

                entity.Property(e => e.Pop3ReceiveDate).HasColumnType("datetime");

                entity.Property(e => e.Priority)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(N'Low')");

                entity.Property(e => e.ReadStatus)
                    .IsRequired()
                    .HasColumnType("char(3)")
                    .HasDefaultValueSql("('000')");

                entity.Property(e => e.ReceiverRoleId)
                    .HasColumnName("ReceiverRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.ReceiverUserId)
                    .HasColumnName("ReceiverUserID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.RemovedFromPop3).HasDefaultValueSql("(0)");

                entity.Property(e => e.RemovedFromPop3Date).HasColumnType("datetime");

                entity.Property(e => e.RemoverFromPop3RoleId)
                    .HasColumnName("RemoverFromPop3RoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.RemoverFromPop3UserId)
                    .HasColumnName("RemoverFromPop3UserID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.SenderEmailAddress)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.SenderName)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.SentByFarzin).HasDefaultValueSql("(0)");

                entity.Property(e => e.Subject)
                    .IsRequired()
                    .HasMaxLength(4000)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Visible).HasDefaultValueSql("(1)");

                entity.HasOne(d => d.MailBox)
                    .WithMany(p => p.EmailMngReceives)
                    .HasForeignKey(d => d.MailBoxId)
                    .HasConstraintName("FK_EmailMng_Receives_EmailMng_MailBox");
            });

            modelBuilder.Entity<EmailMngSendAgain>(entity =>
            {
                entity.ToTable("EmailMng_SendAgain");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.RequestDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RequesterRoleId).HasColumnName("RequesterRoleID");

                entity.Property(e => e.RequesterUserId).HasColumnName("RequesterUserID");

                entity.Property(e => e.SendId).HasColumnName("SendID");

                entity.HasOne(d => d.Send)
                    .WithMany(p => p.EmailMngSendAgain)
                    .HasForeignKey(d => d.SendId)
                    .HasConstraintName("FK_EmailMng_SendAgain_EmailMng_Sends");
            });

            modelBuilder.Entity<EmailMngSendDocs>(entity =>
            {
                entity.ToTable("EmailMng_SendDocs");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Ec)
                    .HasColumnName("EC")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Etc)
                    .HasColumnName("ETC")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportEntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IsEce)
                    .HasColumnName("IsECE")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SendId)
                    .HasColumnName("SendID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.SitadMessageId)
                    .HasColumnName("SitadMessageID")
                    .HasMaxLength(2048);

                entity.Property(e => e.SitadReceiveMessageId)
                    .HasColumnName("SitadReceiveMessageID")
                    .HasMaxLength(2048);

                entity.HasOne(d => d.Send)
                    .WithMany(p => p.EmailMngSendDocs)
                    .HasForeignKey(d => d.SendId)
                    .HasConstraintName("FK_EmailMng_SendDocs_EmailMng_Sends");
            });

            modelBuilder.Entity<EmailMngSendEceReceipts>(entity =>
            {
                entity.ToTable("EmailMng_SendECE_Receipts");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportEc).HasColumnName("ImportEC");

                entity.Property(e => e.ImportEntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000);

                entity.Property(e => e.ImportEtc).HasColumnName("ImportETC");

                entity.Property(e => e.SendId).HasColumnName("SendID");

                entity.Property(e => e.SitadMessageId)
                    .HasColumnName("SitadMessageID")
                    .HasMaxLength(2048);

                entity.Property(e => e.SitadReceiveMessageId)
                    .HasColumnName("SitadReceiveMessageID")
                    .HasMaxLength(2048);
            });

            modelBuilder.Entity<EmailMngSendFileAttachments>(entity =>
            {
                entity.ToTable("EmailMng_SendFileAttachments");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Crc)
                    .HasColumnName("CRC")
                    .HasColumnType("char(40)");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.EntityTypeCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LastEditionDate).HasColumnType("datetime");

                entity.Property(e => e.PhysicalPath)
                    .HasMaxLength(4000)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SendId).HasColumnName("SendID");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.HasOne(d => d.Send)
                    .WithMany(p => p.EmailMngSendFileAttachments)
                    .HasForeignKey(d => d.SendId)
                    .HasConstraintName("FK_EmailMng_SendFileAttachment_EmailMng_Send");
            });

            modelBuilder.Entity<EmailMngSendReceivers>(entity =>
            {
                entity.ToTable("EmailMng_SendReceivers");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Crc)
                    .HasColumnName("CRC")
                    .HasColumnType("char(40)");

                entity.Property(e => e.EmailAddress)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.LastEditionDate).HasColumnType("datetime");

                entity.Property(e => e.ReceiveType)
                    .IsRequired()
                    .HasMaxLength(5)
                    .HasDefaultValueSql("('To')");

                entity.Property(e => e.ReceiverRoleId).HasColumnName("ReceiverRoleID");

                entity.Property(e => e.SendId).HasColumnName("SendID");

                entity.Property(e => e.SpecifyDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.Send)
                    .WithMany(p => p.EmailMngSendReceivers)
                    .HasForeignKey(d => d.SendId)
                    .HasConstraintName("FK_EmailMng_SendReceivers_EmailMng_Sends");
            });

            modelBuilder.Entity<EmailMngSends>(entity =>
            {
                entity.ToTable("EmailMng_Sends");

                entity.HasIndex(e => e.Id)
                    .HasName("IX_EmailMng_Sends_1");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Body)
                    .IsRequired()
                    .HasColumnType("ntext");

                entity.Property(e => e.BodyEncoding)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('utf8')");

                entity.Property(e => e.BodyFormat)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('html')");

                entity.Property(e => e.Crc)
                    .HasColumnName("CRC")
                    .HasColumnType("char(40)");

                entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");

                entity.Property(e => e.From).HasDefaultValueSql("((-1))");

                entity.Property(e => e.IndicatorId)
                    .HasColumnName("IndicatorID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LastChangeStateDate).HasColumnType("datetime");

                entity.Property(e => e.LastEditDate).HasColumnType("datetime");

                entity.Property(e => e.LastEditorRoleId)
                    .HasColumnName("LastEditorRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LastEditorUserId)
                    .HasColumnName("LastEditorUserID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LastSendAgainRequestDate).HasColumnType("datetime");

                entity.Property(e => e.LastSendAgainRequesterRoleId)
                    .HasColumnName("LastSendAgainRequesterRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LastSendAgainRequesterUserId)
                    .HasColumnName("LastSendAgainRequesterUserID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LastState)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('NoSend')");

                entity.Property(e => e.LastStateChangerRoleId)
                    .HasColumnName("LastStateChangerRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LastStateChangerUserId)
                    .HasColumnName("LastStateChangerUserID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LastTrierRoleId)
                    .HasColumnName("LastTrierRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LastTrierUserId)
                    .HasColumnName("LastTrierUserID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LastTryDate).HasColumnType("datetime");

                entity.Property(e => e.LastTryTechnicalResult)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.LastTryViewResult)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Priority)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.RequestDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RequesterRoleId)
                    .HasColumnName("RequesterRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.RequesterUserId)
                    .HasColumnName("RequesterUserID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.SecureSend).HasDefaultValueSql("(0)");

                entity.Property(e => e.SendCount).HasDefaultValueSql("(0)");

                entity.Property(e => e.Subject)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .HasDefaultValueSql("(N'')");

                entity.Property(e => e.TryCount).HasDefaultValueSql("(0)");

                entity.Property(e => e.Visible).HasDefaultValueSql("(1)");

                entity.HasOne(d => d.FromNavigation)
                    .WithMany(p => p.EmailMngSends)
                    .HasForeignKey(d => d.From)
                    .HasConstraintName("FK_EmailMng_Sends_EmailMng_MailBox");
            });

            modelBuilder.Entity<EmailMngSendStates>(entity =>
            {
                entity.ToTable("EmailMng_SendStates");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChangeDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ChangerRoleId)
                    .HasColumnName("ChangerRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.ChangerUserId)
                    .HasColumnName("ChangerUserID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.SendId).HasColumnName("SendID");

                entity.Property(e => e.State)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('NoSend')");

                entity.HasOne(d => d.Send)
                    .WithMany(p => p.EmailMngSendStates)
                    .HasForeignKey(d => d.SendId)
                    .HasConstraintName("FK_EmailMng_SendStates_EmailMng_Sends");
            });

            modelBuilder.Entity<EmailMngSendTrying>(entity =>
            {
                entity.ToTable("EmailMng_SendTrying");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.SendId).HasColumnName("SendID");

                entity.Property(e => e.TechnicalResult)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TrierRoleId)
                    .HasColumnName("TrierRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.TrierUserId)
                    .HasColumnName("TrierUserID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.TryDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ViewResult)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .HasDefaultValueSql("('')");

                entity.HasOne(d => d.Send)
                    .WithMany(p => p.EmailMngSendTrying)
                    .HasForeignKey(d => d.SendId)
                    .HasConstraintName("FK_EmailMng_SendTrying_EmailMng_Sends");
            });

            modelBuilder.Entity<EmailMngSmtp>(entity =>
            {
                entity.ToTable("EmailMng_SMTP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Active).HasDefaultValueSql("((1))");

                entity.Property(e => e.Address)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreatorUserId)
                    .HasColumnName("CreatorUserID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");

                entity.Property(e => e.Desc).HasMaxLength(1000);

                entity.Property(e => e.LastEditionDate).HasColumnType("datetime");

                entity.Property(e => e.LastEditorRoleId).HasColumnName("LastEditorRoleID");

                entity.Property(e => e.LastEditorUserId).HasColumnName("LastEditorUserID");

                entity.Property(e => e.Port).HasDefaultValueSql("((25))");

                entity.Property(e => e.Spalogon).HasColumnName("SPALogon");

                entity.Property(e => e.Sslrequisition).HasColumnName("SSLRequisition");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(250);
            });

            modelBuilder.Entity<Entity1>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_1");

                entity.HasIndex(e => e.EntityNumber)
                    .HasName("IX_Entity_11");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FbVerifyRole)
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("Letter_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.PhysicalNo).HasColumnName("Physical_No");

                entity.Property(e => e.PhysicalYes).HasColumnName("Physical_Yes");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ServerName)
                    .HasColumnName("Server_name")
                    .HasMaxLength(50);

                entity.Property(e => e.Snapshot).HasMaxLength(50);

                entity.Property(e => e.TimeDateSnap)
                    .HasColumnName("timeDateSnap")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.UpdateList)
                    .HasColumnName("Update_list")
                    .HasMaxLength(500);

                entity.Property(e => e.UpdateTime)
                    .HasColumnName("Update_Time")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.VirtualNo).HasColumnName("Virtual_No");

                entity.Property(e => e.VirtualYes).HasColumnName("Virtual_yes");
            });

            modelBuilder.Entity<Entity1Copies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_1_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityActivityPermissionSezForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Activity_Permission_SEZ_Form");

                entity.HasIndex(e => new { e.CompanyName, e.ApplicantName, e.ActivitySubject, e.ContractNum, e.EntityNumber })
                    .HasName("IX_Entity_Activity_Permission_SEZ_Form1");

                entity.Property(e => e.ActivitySubject)
                    .HasColumnName("Activity_Subject")
                    .HasMaxLength(50);

                entity.Property(e => e.ApplicantName)
                    .HasColumnName("Applicant_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.BeginDate)
                    .HasColumnName("Begin_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CompanyName)
                    .HasColumnName("Company_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.CompanyNameCopy)
                    .HasColumnName("Company_NameCopy")
                    .HasMaxLength(50);

                entity.Property(e => e.ContractDate)
                    .HasColumnName("Contract_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ContractNum)
                    .HasColumnName("Contract_Num")
                    .HasMaxLength(50);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Credibility).HasColumnType("smalldatetime");

                entity.Property(e => e.DateIssue)
                    .HasColumnName("Date_Issue")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Description).HasMaxLength(500);

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FeffortSign)
                    .HasColumnName("FEffortSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FverifyRole)
                    .HasColumnName("FVerifyRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FverifySign)
                    .HasColumnName("FVerifySign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDoc)
                    .HasColumnName("Letter_Doc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.ManagerName)
                    .HasColumnName("Manager_Name")
                    .HasMaxLength(20);

                entity.Property(e => e.NationalCode)
                    .HasColumnName("National_Code")
                    .HasMaxLength(30);

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ShenasnamehNum)
                    .HasColumnName("Shenasnameh_Num")
                    .HasMaxLength(10);

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityActivityPermissionSezFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Activity_Permission_SEZ_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityAddressBook>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_AddressBook");

                entity.HasIndex(e => new { e.OrganName, e.RoleName, e.Name, e.Family, e.HomeTelephoneNumber, e.Email, e.Address, e.WebPageAddress, e.DisplayAs, e.Description, e.BusinessTelephoneNumber, e.FaxTelephoneNumber, e.MobileTelephoneNumber, e.Category, e.EntityNumber, e.DocKeywords })
                    .HasName("IX_Entity_AddressBook1");

                entity.Property(e => e.Address).HasMaxLength(400);

                entity.Property(e => e.BusinessTelephoneNumber)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Category).HasColumnType("MultiCategory");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Description).HasMaxLength(100);

                entity.Property(e => e.DisplayAs).HasMaxLength(100);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.Email)
                    .HasColumnName("EMail")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.Family).HasMaxLength(100);

                entity.Property(e => e.FaxTelephoneNumber)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(255);

                entity.Property(e => e.Grade).HasDefaultValueSql("(1)");

                entity.Property(e => e.HomeTelephoneNumber)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsPreNote).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsPrivateSearch).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsSigned).HasDefaultValueSql("(0)");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");

                entity.Property(e => e.MobileTelephoneNumber)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Name).HasMaxLength(100);

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(255);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("(1)");

                entity.Property(e => e.OrganName).HasMaxLength(400);

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("(0)");

                entity.Property(e => e.RoleName).HasMaxLength(400);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.To).HasMaxLength(255);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.WebPageAddress).HasMaxLength(200);
            });

            modelBuilder.Entity<EntityAddressBookCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_AddressBook_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("(1)");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<EntityAntiVirusForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_AntiVirus_form");

                entity.HasIndex(e => new { e.LastUpdateVersion, e.SystemOutofdate, e.WithoutAgentNo, e.EntityNumber })
                    .HasName("IX_Entity_AntiVirus_form1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.Events)
                    .HasColumnType("FILE")
                    .HasMaxLength(4000);

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastAgentVersion)
                    .HasColumnName("last_Agent_version")
                    .HasMaxLength(10);

                entity.Property(e => e.LastDlpNum)
                    .HasColumnName("last_DLP_Num")
                    .HasMaxLength(10);

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LastUpdateVersion)
                    .HasColumnName("Last_Update_version")
                    .HasMaxLength(10);

                entity.Property(e => e.LetterDate)
                    .HasColumnName("letter_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NoAgentFile)
                    .HasColumnName("no_Agent_file")
                    .HasColumnType("FILE")
                    .HasMaxLength(4000);

                entity.Property(e => e.NoUpdateFile)
                    .HasColumnName("no_update_file")
                    .HasColumnType("FILE")
                    .HasMaxLength(4000);

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OldAgentFile)
                    .HasColumnName("Old_agent_file")
                    .HasColumnType("FILE")
                    .HasMaxLength(4000);

                entity.Property(e => e.OldAgentNum)
                    .HasColumnName("old_agent_Num")
                    .HasMaxLength(20);

                entity.Property(e => e.OldDlpFile)
                    .HasColumnName("old_DLP_file")
                    .HasColumnType("FILE")
                    .HasMaxLength(4000);

                entity.Property(e => e.OldDlpNum)
                    .HasColumnName("old_DLP_num")
                    .HasMaxLength(20);

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.Root1).HasMaxLength(50);

                entity.Property(e => e.Root10).HasMaxLength(50);

                entity.Property(e => e.Root2).HasMaxLength(50);

                entity.Property(e => e.Root3).HasMaxLength(50);

                entity.Property(e => e.Root4).HasMaxLength(50);

                entity.Property(e => e.Root5).HasMaxLength(50);

                entity.Property(e => e.Root6).HasMaxLength(50);

                entity.Property(e => e.Root7).HasMaxLength(50);

                entity.Property(e => e.Root8).HasMaxLength(50);

                entity.Property(e => e.Root9).HasMaxLength(50);

                entity.Property(e => e.RootCause1)
                    .HasColumnName("Root Cause_1")
                    .HasColumnType("ntext");

                entity.Property(e => e.RootCause10)
                    .HasColumnName("Root Cause_10")
                    .HasMaxLength(50);

                entity.Property(e => e.RootCause2)
                    .HasColumnName("Root Cause_2")
                    .HasMaxLength(50);

                entity.Property(e => e.RootCause3)
                    .HasColumnName("Root Cause_3")
                    .HasMaxLength(50);

                entity.Property(e => e.RootCause4)
                    .HasColumnName("Root Cause_4")
                    .HasMaxLength(50);

                entity.Property(e => e.RootCause5)
                    .HasColumnName("Root Cause_5")
                    .HasMaxLength(50);

                entity.Property(e => e.RootCause6)
                    .HasColumnName("Root Cause_6")
                    .HasMaxLength(50);

                entity.Property(e => e.RootCause7)
                    .HasColumnName("Root Cause_7")
                    .HasMaxLength(50);

                entity.Property(e => e.RootCause8)
                    .HasColumnName("Root Cause_8")
                    .HasMaxLength(50);

                entity.Property(e => e.RootCause9)
                    .HasColumnName("Root Cause_9")
                    .HasMaxLength(50);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SystemOutofdate)
                    .HasColumnName("system_outofdate")
                    .HasMaxLength(20);

                entity.Property(e => e.Target1).HasMaxLength(50);

                entity.Property(e => e.Target10).HasMaxLength(50);

                entity.Property(e => e.Target2).HasMaxLength(50);

                entity.Property(e => e.Target3).HasMaxLength(50);

                entity.Property(e => e.Target4).HasMaxLength(50);

                entity.Property(e => e.Target5).HasMaxLength(50);

                entity.Property(e => e.Target6).HasMaxLength(50);

                entity.Property(e => e.Target7).HasMaxLength(50);

                entity.Property(e => e.Target8).HasMaxLength(50);

                entity.Property(e => e.Target9).HasMaxLength(50);

                entity.Property(e => e.TargetHost1)
                    .HasColumnName("Target Host_1")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TargetHost10)
                    .HasColumnName("Target Host_10")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TargetHost2)
                    .HasColumnName("Target Host_2")
                    .HasMaxLength(50);

                entity.Property(e => e.TargetHost3)
                    .HasColumnName("Target Host_3")
                    .HasMaxLength(50);

                entity.Property(e => e.TargetHost4)
                    .HasColumnName("Target Host_4")
                    .HasMaxLength(50);

                entity.Property(e => e.TargetHost5)
                    .HasColumnName("Target Host_5")
                    .HasMaxLength(50);

                entity.Property(e => e.TargetHost6)
                    .HasColumnName("Target Host_6")
                    .HasMaxLength(50);

                entity.Property(e => e.TargetHost7)
                    .HasColumnName("Target Host_7")
                    .HasMaxLength(50);

                entity.Property(e => e.TargetHost8)
                    .HasColumnName("Target Host_8")
                    .HasMaxLength(50);

                entity.Property(e => e.TargetHost9)
                    .HasColumnName("Target Host_9")
                    .HasMaxLength(50);

                entity.Property(e => e.Threat1).HasMaxLength(50);

                entity.Property(e => e.Threat10).HasMaxLength(50);

                entity.Property(e => e.Threat2).HasMaxLength(50);

                entity.Property(e => e.Threat3).HasMaxLength(50);

                entity.Property(e => e.Threat4).HasMaxLength(50);

                entity.Property(e => e.Threat5).HasMaxLength(50);

                entity.Property(e => e.Threat6).HasMaxLength(50);

                entity.Property(e => e.Threat7).HasMaxLength(50);

                entity.Property(e => e.Threat8).HasMaxLength(50);

                entity.Property(e => e.Threat9).HasMaxLength(50);

                entity.Property(e => e.ThreatName1)
                    .HasColumnName("Threat Name_1")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ThreatName10)
                    .HasColumnName("Threat Name_10")
                    .HasMaxLength(50);

                entity.Property(e => e.ThreatName2)
                    .HasColumnName("Threat Name_2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ThreatName3)
                    .HasColumnName("Threat Name_3")
                    .HasMaxLength(50);

                entity.Property(e => e.ThreatName4)
                    .HasColumnName("Threat Name_4")
                    .HasMaxLength(50);

                entity.Property(e => e.ThreatName5)
                    .HasColumnName("Threat Name_5")
                    .HasMaxLength(50);

                entity.Property(e => e.ThreatName6)
                    .HasColumnName("Threat Name_6")
                    .HasMaxLength(50);

                entity.Property(e => e.ThreatName7)
                    .HasColumnName("Threat Name_7")
                    .HasMaxLength(50);

                entity.Property(e => e.ThreatName8)
                    .HasColumnName("Threat Name_8")
                    .HasMaxLength(20);

                entity.Property(e => e.ThreatName9)
                    .HasColumnName("Threat Name_9")
                    .HasMaxLength(50);

                entity.Property(e => e.Total).HasMaxLength(2000);

                entity.Property(e => e.Total2).HasMaxLength(20);

                entity.Property(e => e.Tozihat).HasMaxLength(500);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.WithoutAgentNo)
                    .HasColumnName("without_agent_No")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<EntityAntiVirusFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_AntiVirus_form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityArchiveFolder>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_ArchiveFolder");

                entity.HasIndex(e => e.EntityNumber)
                    .HasName("IX_EntityNumber");

                entity.HasIndex(e => e.FirstEntityCode)
                    .HasName("IX_FirstEntityCode");

                entity.HasIndex(e => new { e.FolderCode, e.FolderName })
                    .HasName("IX_Entity_ArchiveFolder1");

                entity.HasIndex(e => new { e.IsPreNote, e.CreatorRoleId })
                    .HasName("IX_IsPreNote_CreatorRoleID");

                entity.Property(e => e.ArchiveId).HasColumnName("ArchiveID");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExpireDateTime).HasColumnType("datetime");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.FolderCode).HasMaxLength(100);

                entity.Property(e => e.FolderDescription).HasMaxLength(512);

                entity.Property(e => e.FolderName).HasMaxLength(255);

                entity.Property(e => e.From).HasMaxLength(255);

                entity.Property(e => e.Grade).HasDefaultValueSql("(1)");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsPreNote).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsPrivateSearch).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsSigned).HasDefaultValueSql("(0)");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(255);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("(1)");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("(0)");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityArchiveFolderCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_ArchiveFolder_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("(1)");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<EntityAssetIsmsForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Asset_ISMS_Form");

                entity.HasIndex(e => new { e.AssetType, e.AssetName, e.Code, e.EntityNumber })
                    .HasName("IX_Entity_Asset_ISMS_Form1");

                entity.Property(e => e.AssetName)
                    .HasColumnName("Asset_name")
                    .HasMaxLength(50);

                entity.Property(e => e.AssetType)
                    .HasColumnName("Asset_Type")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Code)
                    .HasColumnName("code")
                    .HasMaxLength(50);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityAssetIsmsFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Asset_ISMS_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityBankGuarantee>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Bank_Guarantee");

                entity.HasIndex(e => new { e.OfficerName, e.Bank, e.OfAction, e.EntityNumber })
                    .HasName("IX_Entity_Bank_Guarantee1");

                entity.Property(e => e.Bank)
                    .HasColumnName("bank")
                    .HasMaxLength(100);

                entity.Property(e => e.BazPardakht).HasColumnName("Baz_pardakht");

                entity.Property(e => e.Branch)
                    .HasColumnName("branch")
                    .HasMaxLength(50);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Confimed)
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.ConfimedSign)
                    .HasColumnName("Confimed_sign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Contract).HasColumnName("contract");

                entity.Property(e => e.ContractType)
                    .HasColumnName("Contract_Type")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Date)
                    .HasColumnName("date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.Employe).HasColumnName("employe");

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.ForGuarantee)
                    .HasColumnName("for_guarantee")
                    .HasMaxLength(50);

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Max)
                    .HasColumnName("max")
                    .HasMaxLength(20);

                entity.Property(e => e.MonthlySalary).HasColumnName("monthly_salary");

                entity.Property(e => e.Mostamarri).HasColumnName("mostamarri");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OfAction)
                    .HasColumnName("OF_Action")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.OfActionSign)
                    .HasColumnName("Of_action_sign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.OfficerName)
                    .HasColumnName("officer_name")
                    .HasMaxLength(50);

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.Relation).HasColumnType("nchar(20)");

                entity.Property(e => e.Salary)
                    .HasColumnName("salary")
                    .HasColumnType("nchar(10)");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.VamMax).HasColumnName("vam_max");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.Worker).HasColumnName("worker");

                entity.Property(e => e.Working).HasColumnName("working");
            });

            modelBuilder.Entity<EntityBankGuaranteeCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Bank_Guarantee_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityBaseForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Base_Form");

                entity.HasIndex(e => new { e.Code, e.Value, e.Activation, e.EntityNumber })
                    .HasName("IX_Entity_Base_Form1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Code)
                    .HasColumnName("code")
                    .HasMaxLength(50);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Value)
                    .HasColumnName("value")
                    .HasMaxLength(100);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityBaseFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Base_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityBcpOperationTestForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_BCP_Operation_Test_Form");

                entity.HasIndex(e => new { e.ServiceName, e.EntityNumber })
                    .HasName("IX_Entity_BCP_Operation_Test_Form1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExpertForOperation)
                    .HasColumnName("Expert_For_Operation")
                    .HasMaxLength(50);

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FbVerifyRole)
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.Lettercode)
                    .HasColumnName("lettercode")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.PreOperation)
                    .HasColumnName("Pre_Operation")
                    .HasMaxLength(500);

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.ResultOperation)
                    .HasColumnName("Result_Operation")
                    .HasMaxLength(500);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ServiceName)
                    .HasColumnName("Service_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityBcpOperationTestFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_BCP_Operation_Test_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityCarRequest>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Car_Request");

                entity.HasIndex(e => new { e.Sender, e.EntityNumber })
                    .HasName("IX_Entity_Car_Request1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.City).HasColumnName("city");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId).HasColumnName("CreatorID");

                entity.Property(e => e.CreatorRoleId).HasColumnName("CreatorRoleID");

                entity.Property(e => e.Destination)
                    .HasColumnName("destination")
                    .HasMaxLength(50);

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EndDate)
                    .HasColumnName("end_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.EndHour)
                    .HasColumnName("end_hour")
                    .HasMaxLength(20);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.Etc)
                    .HasColumnName("etc")
                    .HasMaxLength(600);

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasMaxLength(255)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId).HasColumnName("ExportIndicatorID");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportRegisterId).HasColumnName("ExportRegisterID");

                entity.Property(e => e.ExportRegisterRoleId).HasColumnName("ExportRegisterRoleID");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasMaxLength(255)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId).HasColumnName("ImportIndicatorID");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportRegisterId).HasColumnName("ImportRegisterID");

                entity.Property(e => e.ImportRegisterRoleId).HasColumnName("ImportRegisterRoleID");

                entity.Property(e => e.Into).HasColumnName("into");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("letter_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Mamorin)
                    .HasColumnName("mamorin")
                    .HasMaxLength(500);

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.Number)
                    .HasColumnName("number")
                    .HasMaxLength(50);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Out).HasColumnName("out");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode).HasDefaultValueSql("((1))");

                entity.Property(e => e.Sender)
                    .HasColumnName("sender")
                    .HasMaxLength(50);

                entity.Property(e => e.Source)
                    .HasColumnName("source")
                    .HasMaxLength(50);

                entity.Property(e => e.StartDate)
                    .HasColumnName("start_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.StartHour)
                    .HasColumnName("start_hour")
                    .HasMaxLength(20);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityCarRequestCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Car_Request_Copies");

                entity.Property(e => e.CopyCode).ValueGeneratedNever();

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EntityCategories>(entity =>
            {
                entity.HasKey(e => e.CategoryCode);

                entity.ToTable("Entity_Categories");

                entity.HasIndex(e => new { e.CategoryCode, e.CategoryEtc })
                    .HasName("IX_Entity_Categories");

                entity.Property(e => e.CategoryEtc).HasColumnName("CategoryETC");

                entity.Property(e => e.CategoryName)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Description).HasMaxLength(512);

                entity.Property(e => e.EditionDate).HasColumnType("datetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<EntityChangeCreateDoc>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_change_create_doc");

                entity.HasIndex(e => new { e.ProcessTittle, e.RequestType, e.FeforrtRole, e.FverifyRole, e.EntityNumber })
                    .HasName("IX_Entity_change_create_doc1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FeffortSign)
                    .HasColumnName("FEffortSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FverifyRole)
                    .HasColumnName("FVerifyRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FverifySign)
                    .HasColumnName("FVerifySign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("Letter_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.ProcessTittle)
                    .HasColumnName("process_Tittle")
                    .HasMaxLength(80);

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.RequestType)
                    .HasColumnName("Request_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Text).HasColumnType("Editor");

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityChangeCreateDocCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_change_create_doc_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityChangeManagementForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Change_Management_Form");

                entity.HasIndex(e => new { e.Tittle, e.FeforrtRole, e.ChangeTimeDate, e.LetterDoc, e.EntityNumber })
                    .HasName("IX_Entity_Change_Management_Form1");

                entity.Property(e => e.AnnouncementNo).HasColumnName("announcement_no");

                entity.Property(e => e.AnnouncementYes).HasColumnName("announcement_yes");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.ChangeTimeDate)
                    .HasColumnName("Change_Time_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DescriptionChange)
                    .HasColumnName("Description_change")
                    .HasColumnType("ntext");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FbVerifyRole)
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FberifySign)
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FverifySign)
                    .HasColumnName("FVerifySign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDoc)
                    .HasColumnName("Letter_Doc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Prerequisite).HasColumnType("ntext");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PriorityImmediate).HasColumnName("Priority_Immediate");

                entity.Property(e => e.PriorityMedium).HasColumnName("Priority_Medium");

                entity.Property(e => e.PriorityNormal).HasColumnName("Priority_normal");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReasonChange)
                    .HasColumnName("Reason_change")
                    .HasColumnType("ntext");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TestReport)
                    .HasColumnName("Test_Report")
                    .HasColumnType("ntext");

                entity.Property(e => e.Tittle).HasMaxLength(75);

                entity.Property(e => e.TrainingNo).HasColumnName("Training_No");

                entity.Property(e => e.TrainingYes).HasColumnName("Training_Yes");

                entity.Property(e => e.TypeChangeNet).HasColumnName("Type_change_net");

                entity.Property(e => e.TypeChangeService).HasColumnName("Type_change_service");

                entity.Property(e => e.TypeChangeSoftware).HasColumnName("Type_change_software");

                entity.Property(e => e.UnsuccessfulReason)
                    .HasColumnName("Unsuccessful_Reason")
                    .HasColumnType("ntext");

                entity.Property(e => e.UpadteDoc).HasColumnName("Upadte_Doc");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityChangeManagementFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Change_Management_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityChangeMngFromNewVersion>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Change_Mng_From_NewVersion");

                entity.HasIndex(e => e.EntityNumber)
                    .HasName("IX_Entity_Change_Mng_From_NewVersion1");

                entity.Property(e => e.AntivisusTest).HasColumnName("Antivisus_Test");

                entity.Property(e => e.ApplayDate)
                    .HasColumnName("Applay_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ApplayRes)
                    .HasColumnName("Applay_Res")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.ChangeRange)
                    .HasColumnName("Change_range")
                    .HasMaxLength(50);

                entity.Property(e => e.ChangeResulat)
                    .HasColumnName("change_Resulat")
                    .HasMaxLength(50);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.DoingBy)
                    .HasColumnName("Doing_by")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExecutePredictTime)
                    .HasColumnName("Execute_Predict_Time")
                    .HasColumnType("Time");

                entity.Property(e => e.ExecutionReport)
                    .HasColumnName("Execution_Report")
                    .HasColumnType("ntext");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FailureReason)
                    .HasColumnName("Failure_Reason")
                    .HasColumnType("ntext");

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FverifyRole)
                    .HasColumnName("FVerifyRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LanWanTest).HasColumnName("LAN_WAN_Test");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("Letter_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.MngName)
                    .HasColumnName("Mng_Name")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.MngTestName)
                    .HasColumnName("Mng_Test_Name")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.NafarSaat).HasColumnName("Nafar_Saat");

                entity.Property(e => e.NameOfRiskChange)
                    .HasColumnName("NameOf_Risk_Change")
                    .HasColumnType("ntext");

                entity.Property(e => e.NetworkPolicyTest).HasColumnName("Network_Policy_Test");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OpretionTest).HasColumnName("opretion_Test");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Posibility).HasMaxLength(50);

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReasonRequset)
                    .HasColumnName("Reason_requset")
                    .HasColumnType("ntext");

                entity.Property(e => e.ReportApplay)
                    .HasColumnName("Report_Applay")
                    .HasColumnType("ntext");

                entity.Property(e => e.ReqDiscription)
                    .HasColumnName("Req_Discription")
                    .HasColumnType("ntext");

                entity.Property(e => e.RequestDate)
                    .HasColumnName("Request_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Resource).HasColumnType("ntext");

                entity.Property(e => e.RiskSize)
                    .HasColumnName("Risk_Size")
                    .HasMaxLength(50);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ServiceName)
                    .HasColumnName("Service_Name")
                    .HasMaxLength(100);

                entity.Property(e => e.Task).HasColumnType("ntext");

                entity.Property(e => e.TestReport)
                    .HasColumnName("Test_Report")
                    .HasColumnType("ntext");

                entity.Property(e => e.TimeTest)
                    .HasColumnName("Time_Test")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.UpdateDoc)
                    .HasColumnName("Update_Doc")
                    .HasColumnType("ntext");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityChangeMngFromNewVersionCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Change_Mng_From_NewVersion_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityCheckCompany>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Check_Company");

                entity.HasIndex(e => new { e.BankTitle, e.CheckNumber, e.CheckDate, e.FromAccount, e.Subject, e.EntityNumber })
                    .HasName("IX_Entity_Check_Company1");

                entity.Property(e => e.BankTitle)
                    .HasColumnName("Bank_Title")
                    .HasMaxLength(150);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CheckCash)
                    .HasColumnName("Check_Cash")
                    .HasMaxLength(50);

                entity.Property(e => e.CheckCashNum1)
                    .HasColumnName("Check_Cash_num1")
                    .HasMaxLength(50);

                entity.Property(e => e.CheckCashNum2)
                    .HasColumnName("Check_Cash_num2")
                    .HasMaxLength(50);

                entity.Property(e => e.CheckCashNum3)
                    .HasColumnName("Check_Cash_num3")
                    .HasMaxLength(50);

                entity.Property(e => e.CheckCashNum4)
                    .HasColumnName("Check_Cash_num4")
                    .HasMaxLength(50);

                entity.Property(e => e.CheckDate)
                    .HasColumnName("Check_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CheckNumNum1)
                    .HasColumnName("Check_Num_num1")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("CREATE DEFAULT [check Number] AS '2110101612007'");

                entity.Property(e => e.CheckNumber)
                    .HasColumnName("Check_Number")
                    .HasMaxLength(20);

                entity.Property(e => e.CopyChashNum1)
                    .HasColumnName("Copy_Chash_num1")
                    .HasMaxLength(20);

                entity.Property(e => e.CopyDateNum1)
                    .HasColumnName("Copy_Date_num1")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CopyNum2)
                    .HasColumnName("Copy_num2")
                    .HasMaxLength(200);

                entity.Property(e => e.CopyNum3)
                    .HasColumnName("Copy_num3")
                    .HasMaxLength(200);

                entity.Property(e => e.CopyNum4)
                    .HasColumnName("Copy_num4")
                    .HasMaxLength(300);

                entity.Property(e => e.CopyNum5)
                    .HasColumnName("Copy_num5")
                    .HasMaxLength(300);

                entity.Property(e => e.CopyNum6)
                    .HasColumnName("Copy_num6")
                    .HasMaxLength(300);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FromAccount)
                    .HasColumnName("From_Account")
                    .HasMaxLength(20);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.Insurance).HasMaxLength(50);

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("Letter_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.Num5).HasMaxLength(200);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Singature)
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Subject).HasMaxLength(100);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityCheckCompanyCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Check_Company_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityCheckPerson>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Check_Person");

                entity.HasIndex(e => new { e.BankTitle, e.CheckNumber, e.FromAccount, e.Subject, e.EntityNumber })
                    .HasName("IX_Entity_Check_Person1");

                entity.Property(e => e.BankTitle)
                    .HasColumnName("Bank_Title")
                    .HasMaxLength(50);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CheckCash)
                    .HasColumnName("Check_Cash")
                    .HasMaxLength(50);

                entity.Property(e => e.CheckDate)
                    .HasColumnName("Check_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CheckNumber)
                    .HasColumnName("Check_Number")
                    .HasMaxLength(75);

                entity.Property(e => e.CopyChashNum1)
                    .HasColumnName("Copy_Chash_num1")
                    .HasMaxLength(20);

                entity.Property(e => e.CopyDateNum1)
                    .HasColumnName("Copy_Date_num1")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CopyNum2)
                    .HasColumnName("Copy_num2")
                    .HasMaxLength(250);

                entity.Property(e => e.CopyNum3)
                    .HasColumnName("Copy_num3")
                    .HasMaxLength(250);

                entity.Property(e => e.CopyNum4)
                    .HasColumnName("Copy_num4")
                    .HasMaxLength(250);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DepositAccount)
                    .HasColumnName("Deposit_account")
                    .HasMaxLength(100);

                entity.Property(e => e.DescNum1)
                    .HasColumnName("Desc_num1")
                    .HasMaxLength(150);

                entity.Property(e => e.DescNum2)
                    .HasColumnName("Desc_num2")
                    .HasMaxLength(150);

                entity.Property(e => e.DescNum3)
                    .HasColumnName("Desc_num3")
                    .HasMaxLength(150);

                entity.Property(e => e.DescNum4)
                    .HasColumnName("Desc_num4")
                    .HasMaxLength(150);

                entity.Property(e => e.DescNum5)
                    .HasColumnName("Desc_num5")
                    .HasMaxLength(150);

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FromAccount)
                    .HasColumnName("From_Account")
                    .HasMaxLength(20);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("Letter_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Singature)
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Subject).HasMaxLength(75);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityCheckPersonCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Check_Person_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityConfirmWarrantyForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Confirm_Warranty_Form");

                entity.HasIndex(e => new { e.Bank, e.WarrantyType, e.WarrantyNumber, e.EntityNumber, e.ExportEntityNumber })
                    .HasName("IX_Entity_Confirm_Warranty_Form1");

                entity.Property(e => e.Bank).HasMaxLength(150);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Company).HasMaxLength(100);

                entity.Property(e => e.Copy1)
                    .HasColumnName("Copy_1")
                    .HasMaxLength(200);

                entity.Property(e => e.CopyWarranty)
                    .HasColumnName("copy_Warranty")
                    .HasMaxLength(150);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("Letter_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Singature)
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.WarrantyCash)
                    .HasColumnName("Warranty_Cash")
                    .HasMaxLength(25);

                entity.Property(e => e.WarrantyCashNew).HasColumnName("Warranty_Cash_NEW");

                entity.Property(e => e.WarrantyDate)
                    .HasColumnName("Warranty_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.WarrantyNumber)
                    .HasColumnName("Warranty_Number")
                    .HasMaxLength(50);

                entity.Property(e => e.WarrantyType)
                    .HasColumnName("Warranty_Type")
                    .HasMaxLength(75);
            });

            modelBuilder.Entity<EntityConfirmWarrantyFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Confirm_Warranty_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityCoordinationMeetingsForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Coordination_Meetings_Form");

                entity.HasIndex(e => new { e.MeetingLocation, e.EntityNumber })
                    .HasName("IX_Entity_Coordination_Meetings_Form1");

                entity.Property(e => e.Aksmabda)
                    .HasColumnName("aksmabda")
                    .HasMaxLength(50);

                entity.Property(e => e.Akssaat)
                    .HasColumnName("akssaat")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.Akstamaghsad)
                    .HasColumnName("akstamaghsad")
                    .HasMaxLength(50);

                entity.Property(e => e.ArmyMusic).HasColumnName("Army_Music");

                entity.Property(e => e.Atbaekhareji).HasColumnName("atbaekhareji");

                entity.Property(e => e.AudioTools).HasColumnName("Audio_tools");

                entity.Property(e => e.Azsaate)
                    .HasColumnName("azsaate")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.Broshor).HasColumnName("broshor");

                entity.Property(e => e.BroshornO)
                    .HasColumnName("broshornO")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CdFrInvitees)
                    .HasColumnName("CD_Fr_Invitees")
                    .HasMaxLength(7);

                entity.Property(e => e.Cdkhamm).HasColumnName("cdkhamm");

                entity.Property(e => e.Cellphone).HasColumnType("nchar(20)");

                entity.Property(e => e.ConfrenceTools).HasColumnName("Confrence_tools");

                entity.Property(e => e.Cordinator)
                    .HasColumnName("cordinator")
                    .HasMaxLength(50);

                entity.Property(e => e.Countryflag).HasColumnName("countryflag");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Dailytedad)
                    .HasColumnName("dailytedad")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.Darb)
                    .HasColumnName("darb")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Dategard)
                    .HasColumnName("dategard")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.Eskantedad)
                    .HasColumnName("eskantedad")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FaniOthers).HasMaxLength(50);

                entity.Property(e => e.FbVerifyRole)
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FberifySign)
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FilmPort).HasColumnName("Film_Port");

                entity.Property(e => e.FilmRecording).HasColumnName("Film_recording");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Fmeeting)
                    .HasColumnName("FMeeting")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FverifySign)
                    .HasColumnName("FVerifySign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Gift).HasMaxLength(7);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.GroupSong).HasColumnName("Group_Song");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.Innercall)
                    .HasColumnName("innercall")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.Interpreter).HasColumnName("interpreter");

                entity.Property(e => e.Invitees).HasMaxLength(7);

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Mabda)
                    .HasColumnName("mabda")
                    .HasMaxLength(50);

                entity.Property(e => e.MeetingBeginning)
                    .HasColumnName("Meeting_beginning")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.MeetingEnd)
                    .HasColumnName("Meeting_end")
                    .HasColumnType("Time");

                entity.Property(e => e.MeetingLocation)
                    .HasColumnName("meeting_location")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.MeetingSubject)
                    .HasColumnName("Meeting_Subject")
                    .HasMaxLength(500);

                entity.Property(e => e.MeetingTime)
                    .HasColumnName("Meeting_time")
                    .HasColumnType("Time");

                entity.Property(e => e.Mehmankhas).HasColumnName("mehmankhas");

                entity.Property(e => e.MobileMicrophone).HasColumnName("Mobile_microphone");

                entity.Property(e => e.Modirkol).HasColumnName("modirkol");

                entity.Property(e => e.MusicGroup).HasColumnName("Music_Group");

                entity.Property(e => e.Nocd)
                    .HasColumnName("nocd")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.NomicWireless)
                    .HasColumnName("nomicWireless")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.Numcdkham)
                    .HasColumnName("numcdkham")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.OneEvening).HasColumnName("One_evening");

                entity.Property(e => e.OneMorning).HasColumnName("One_morning");

                entity.Property(e => e.OpticPencil).HasColumnName("optic_pencil");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.OtehrAdministrative)
                    .HasColumnName("Otehr_Administrative")
                    .HasMaxLength(50);

                entity.Property(e => e.OtherInformatics)
                    .HasColumnName("Other_Informatics")
                    .HasMaxLength(50);

                entity.Property(e => e.OtherPrelations)
                    .HasColumnName("Other_PRelations")
                    .HasMaxLength(50);

                entity.Property(e => e.Paziraei).HasColumnName("paziraei");

                entity.Property(e => e.Paziraeii).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PhotoRecording).HasColumnName("Photo_recording");

                entity.Property(e => e.Pishnahadi)
                    .HasColumnName("pishnahadi")
                    .HasMaxLength(50);

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.RohaniTime)
                    .HasColumnName("Rohani_time")
                    .HasMaxLength(7);

                entity.Property(e => e.Saatemabda)
                    .HasColumnName("saatemabda")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Smeeting)
                    .HasColumnName("SMeeting")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Softeware).HasColumnName("softeware");

                entity.Property(e => e.Tamaghsad)
                    .HasColumnName("tamaghsad")
                    .HasMaxLength(50);

                entity.Property(e => e.Tedadhedie)
                    .HasColumnName("tedadhedie")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.TowEvening).HasColumnName("Tow_evening");

                entity.Property(e => e.Tozihsoft)
                    .HasColumnName("tozihsoft")
                    .HasMaxLength(50);

                entity.Property(e => e.TwoMorning).HasColumnName("Two_morning");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.Versionnn)
                    .HasColumnName("versionnn")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.VideoTools).HasColumnName("Video_tools");

                entity.Property(e => e.WhitePaper).HasColumnName("White_paper");

                entity.Property(e => e.WiFiMicrophone).HasColumnName("WiFi_microphone");

                entity.Property(e => e.Wielessmouse).HasColumnName("wielessmouse");

                entity.Property(e => e.Wirelesshand).HasColumnName("wirelesshand");
            });

            modelBuilder.Entity<EntityCoordinationMeetingsFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Coordination_Meetings_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityCorrectivePreventiveActionsForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Corrective_preventive_actions_Form");

                entity.HasIndex(e => new { e.ProcessRequest, e.Tittle, e.NameRequest, e.LetterDoc, e.EntityNumber })
                    .HasName("IX_Entity_Corrective_preventive_actions_Form1");

                entity.Property(e => e.Action1).HasColumnType("ntext");

                entity.Property(e => e.Action2).HasColumnType("ntext");

                entity.Property(e => e.Action3).HasColumnType("ntext");

                entity.Property(e => e.Action4).HasColumnType("ntext");

                entity.Property(e => e.ActionDone).HasColumnName("Action_Done");

                entity.Property(e => e.ActionNotDone).HasColumnName("Action_not_Done");

                entity.Property(e => e.Behbod).HasColumnName("behbod");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DateAction)
                    .HasColumnName("Date_Action")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DateEffective)
                    .HasColumnName("Date_effective")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasColumnType("ntext");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.Effective).HasColumnName("effective");

                entity.Property(e => e.Effective1).HasColumnName("effective1");

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.Eslah).HasColumnName("eslah");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Follow1).HasColumnType("ntext");

                entity.Property(e => e.Follow2).HasColumnType("ntext");

                entity.Property(e => e.Follow3).HasColumnType("ntext");

                entity.Property(e => e.Follow4).HasColumnType("ntext");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDoc)
                    .HasColumnName("letter_doc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.MangEnvironment).HasColumnName("mang_environment");

                entity.Property(e => e.MangIt).HasColumnName("mang_IT");

                entity.Property(e => e.MangQuality).HasColumnName("mang_quality");

                entity.Property(e => e.MangeSafety).HasColumnName("mange_safety");

                entity.Property(e => e.MaxTime1)
                    .HasColumnName("Max_time1")
                    .HasColumnType("ntext");

                entity.Property(e => e.MaxTime2)
                    .HasColumnName("Max_time2")
                    .HasColumnType("ntext");

                entity.Property(e => e.MaxTime3)
                    .HasColumnName("Max_time3")
                    .HasColumnType("ntext");

                entity.Property(e => e.MaxTime4)
                    .HasColumnName("Max_time4")
                    .HasColumnType("ntext");

                entity.Property(e => e.NameAssistant)
                    .HasColumnName("name_assistant")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.NameRequest)
                    .HasColumnName("Name_Request")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OpinionAssistant)
                    .HasColumnName("opinion_assistant")
                    .HasColumnType("ntext");

                entity.Property(e => e.OpinionManager)
                    .HasColumnName("opinion_manager")
                    .HasColumnType("ntext");

                entity.Property(e => e.OpinionSupporter)
                    .HasColumnName("opinion_supporter")
                    .HasColumnType("ntext");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Pishgiri).HasColumnName("pishgiri");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Process)
                    .HasColumnName("process")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessRequest)
                    .HasColumnName("process_request")
                    .HasMaxLength(75);

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReasonMoghayerat)
                    .HasColumnName("reason_moghayerat")
                    .HasColumnType("ntext");

                entity.Property(e => e.RuleSupporter)
                    .HasColumnName("rule_supporter")
                    .HasColumnType("ntext");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SendProcess).HasColumnName("send_process");

                entity.Property(e => e.Suggestion)
                    .HasColumnName("suggestion")
                    .HasColumnType("ntext");

                entity.Property(e => e.Tittle).HasMaxLength(75);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.Yes).HasColumnName("yes");

                entity.Property(e => e.Yes1).HasColumnName("yes1");
            });

            modelBuilder.Entity<EntityCorrectivePreventiveActionsFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Corrective_preventive_actions_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityCorrectivePreventiveActionsIsmsForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Corrective_preventive_actions_ISMS_Form");

                entity.HasIndex(e => new { e.LetterDoc, e.Tiitle, e.EntityNumber })
                    .HasName("IX_Entity_Corrective_preventive_actions_ISMS_Form1");

                entity.Property(e => e.AdaptationDes)
                    .HasColumnName("Adaptation_Des")
                    .HasColumnType("ntext");

                entity.Property(e => e.AdaptationReasonDes)
                    .HasColumnName("Adaptation_reason_Des")
                    .HasColumnType("ntext");

                entity.Property(e => e.BossOpinion)
                    .HasColumnName("Boss_Opinion")
                    .HasMaxLength(100);

                entity.Property(e => e.CandPDes1)
                    .HasColumnName("CandP_Des1")
                    .HasColumnType("ntext");

                entity.Property(e => e.CandPDes2)
                    .HasColumnName("CandP_Des2")
                    .HasColumnType("ntext");

                entity.Property(e => e.CandPDes3)
                    .HasColumnName("CandP_Des3")
                    .HasColumnType("ntext");

                entity.Property(e => e.CandPDes4)
                    .HasColumnName("CandP_Des4")
                    .HasColumnType("ntext");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CorrectiveAction).HasColumnName("Corrective_Action");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Deadline1).HasMaxLength(50);

                entity.Property(e => e.Deadline2).HasMaxLength(50);

                entity.Property(e => e.Deadline3).HasMaxLength(50);

                entity.Property(e => e.Deadline4).HasMaxLength(50);

                entity.Property(e => e.DescriptionActivity)
                    .HasColumnName("Description_activity")
                    .HasColumnType("ntext");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.Effective).HasColumnName("effective");

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FbVerifyRole)
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FberifySign)
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FverifySign)
                    .HasColumnName("FVerifySign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDoc)
                    .HasColumnName("Letter_doc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NonEffective).HasColumnName("non_effective");

                entity.Property(e => e.NonEffectiveReason)
                    .HasColumnName("Non_Effective_reason")
                    .HasColumnType("ntext");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NotDone).HasColumnName("not_Done");

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.PreventiveAction).HasColumnName("Preventive_Action");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.ProcessExecutive)
                    .HasColumnName("Process Executive")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessNo).HasColumnName("process_no");

                entity.Property(e => e.ProcessYes).HasColumnName("process_yes");

                entity.Property(e => e.ProposedImprovement).HasColumnName("Proposed_improvement");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.Responsible1).HasMaxLength(50);

                entity.Property(e => e.Responsible2).HasMaxLength(50);

                entity.Property(e => e.Responsible3).HasMaxLength(50);

                entity.Property(e => e.Responsible4).HasMaxLength(50);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tiitle).HasMaxLength(100);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityCorrectivePreventiveActionsIsmsFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Corrective_preventive_actions_ISMS_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityDailyMissionRequest>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_DailyMissionRequest");

                entity.HasIndex(e => new { e.FormDate, e.FullName, e.HeadOfficeName, e.MissionSubject, e.Source, e.Destination, e.Route1, e.To1, e.Route2, e.To2, e.FromTheDate, e.Untill, e.Transport, e.MissionLocation, e.EntityNumber })
                    .HasName("IX_Entity_DailyMissionRequest1");

                entity.Property(e => e.BirthDate1).HasColumnType("smalldatetime");

                entity.Property(e => e.BirthDate2).HasColumnType("smalldatetime");

                entity.Property(e => e.BirthDate3).HasColumnType("smalldatetime");

                entity.Property(e => e.BirthDate4).HasColumnType("smalldatetime");

                entity.Property(e => e.BirthDate5).HasColumnType("smalldatetime");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DeputyName).HasColumnType("PointerRelatedField");

                entity.Property(e => e.DeputySign)
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Destination).HasColumnType("PointerRelatedField");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EmploymentType1).HasColumnType("PointerRelatedField");

                entity.Property(e => e.EmploymentType2).HasColumnType("PointerRelatedField");

                entity.Property(e => e.EmploymentType3).HasColumnType("PointerRelatedField");

                entity.Property(e => e.EmploymentType4).HasColumnType("PointerRelatedField");

                entity.Property(e => e.EmploymentType5).HasColumnType("PointerRelatedField");

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FinCode1).HasMaxLength(10);

                entity.Property(e => e.FinCode2).HasMaxLength(10);

                entity.Property(e => e.FinCode3).HasMaxLength(10);

                entity.Property(e => e.FinCode4).HasMaxLength(10);

                entity.Property(e => e.FinCode5).HasMaxLength(10);

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.FnameLname1)
                    .HasColumnName("FNameLName1")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.FnameLname2)
                    .HasColumnName("FNameLName2")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.FnameLname3)
                    .HasColumnName("FNameLName3")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.FnameLname4)
                    .HasColumnName("FNameLName4")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.FnameLname5)
                    .HasColumnName("FNameLName5")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.FormDate).HasColumnType("smalldatetime");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FromTheDate).HasColumnType("smalldatetime");

                entity.Property(e => e.FullName).HasColumnType("PointerRelatedField");

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.HeadOfficeName).HasMaxLength(255);

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.MissionLocation).HasColumnType("PointerRelatedField");

                entity.Property(e => e.MissionSubject).HasMaxLength(255);

                entity.Property(e => e.NationalId1)
                    .HasColumnName("NationalID1")
                    .HasColumnType("nchar(10)");

                entity.Property(e => e.NationalId2)
                    .HasColumnName("NationalID2")
                    .HasColumnType("nchar(10)");

                entity.Property(e => e.NationalId3)
                    .HasColumnName("NationalID3")
                    .HasColumnType("nchar(10)");

                entity.Property(e => e.NationalId4)
                    .HasColumnName("NationalID4")
                    .HasColumnType("nchar(10)");

                entity.Property(e => e.NationalId5)
                    .HasColumnName("NationalID5")
                    .HasColumnType("nchar(10)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OfficeHeadName).HasColumnType("PointerRelatedField");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Pelak).HasMaxLength(15);

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.RequesterMobileNumber1).HasColumnType("nchar(11)");

                entity.Property(e => e.RequesterMobileNumber2).HasColumnType("nchar(11)");

                entity.Property(e => e.RequesterMobileNumber3).HasColumnType("nchar(11)");

                entity.Property(e => e.RequesterMobileNumber4).HasColumnType("nchar(11)");

                entity.Property(e => e.RequesterMobileNumber5).HasColumnType("nchar(11)");

                entity.Property(e => e.ResponsibleExpertName).HasColumnType("PointerRelatedField");

                entity.Property(e => e.Route).HasMaxLength(150);

                entity.Property(e => e.Route1).HasColumnType("PointerRelatedField");

                entity.Property(e => e.Route2).HasColumnType("PointerRelatedField");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Source).HasColumnType("PointerRelatedField");

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.To1).HasColumnType("PointerRelatedField");

                entity.Property(e => e.To2).HasColumnType("PointerRelatedField");

                entity.Property(e => e.Transport).HasColumnType("PointerRelatedField");

                entity.Property(e => e.UnitDeputyName).HasColumnType("PointerRelatedField");

                entity.Property(e => e.Untill).HasColumnType("smalldatetime");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityDailyMissionRequestCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_DailyMissionRequest_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityDarkhastkharid>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_darkhastkharid");

                entity.HasIndex(e => new { e.Codeetebari9, e.Darkhast, e.Ghesmat, e.Raisedare, e.Mavanvahed, e.EntityNumber })
                    .HasName("IX_Entity_darkhastkharid5");

                entity.HasIndex(e => new { e.Arzesh9, e.Sumkh2, e.Sumkh3, e.Sumkh4, e.Sumkh5, e.Sumkh6, e.Sumkh7, e.Sumkh8, e.Sumkh9, e.Codeetebari2, e.Codeetebari3, e.Codeetebari4, e.Codeetebari5, e.Codeetebari6, e.Codeetebari7, e.Codeetebari8 })
                    .HasName("IX_Entity_darkhastkharid4");

                entity.HasIndex(e => new { e.Khradif1, e.Khsharh1, e.Meghdar1, e.Vehedkh1, e.Arzesh2, e.Sumkh1, e.Moredeniaz, e.Jamkol, e.Codeetebari1, e.Khradif2, e.Khradif3, e.Khradif4, e.Khradif5, e.Khradif6, e.Khradif7, e.Khradif8 })
                    .HasName("IX_Entity_darkhastkharid1");

                entity.HasIndex(e => new { e.Khradif9, e.Khsharh2, e.Khsharh3, e.Khsharh4, e.Khsharh5, e.Khsharh6, e.Khsharh7, e.Khsharh8, e.Khsharh9, e.Meghdar2, e.Meghdar3, e.Meghdar4, e.Meghdar5, e.Meghdar6, e.Meghdar7, e.Meghdar8 })
                    .HasName("IX_Entity_darkhastkharid2");

                entity.HasIndex(e => new { e.Meghdar9, e.Vehedkh2, e.Vehedkh3, e.Vehedkh4, e.Vehedkh5, e.Vehedkh6, e.Vehedkh7, e.Vehedkh8, e.Vehedkh9, e.Arzesh1, e.Arzesh3, e.Arzesh4, e.Arzesh5, e.Arzesh6, e.Arzesh7, e.Arzesh8 })
                    .HasName("IX_Entity_darkhastkharid3");

                entity.Property(e => e.Arzesh1)
                    .HasColumnName("arzesh1")
                    .HasMaxLength(50);

                entity.Property(e => e.Arzesh10)
                    .HasColumnName("arzesh10")
                    .HasMaxLength(50);

                entity.Property(e => e.Arzesh2)
                    .HasColumnName("arzesh2")
                    .HasMaxLength(50);

                entity.Property(e => e.Arzesh3)
                    .HasColumnName("arzesh3")
                    .HasMaxLength(50);

                entity.Property(e => e.Arzesh4)
                    .HasColumnName("arzesh4")
                    .HasMaxLength(50);

                entity.Property(e => e.Arzesh5)
                    .HasColumnName("arzesh5")
                    .HasMaxLength(50);

                entity.Property(e => e.Arzesh6)
                    .HasColumnName("arzesh6")
                    .HasMaxLength(50);

                entity.Property(e => e.Arzesh7)
                    .HasColumnName("arzesh7")
                    .HasMaxLength(50);

                entity.Property(e => e.Arzesh8)
                    .HasColumnName("arzesh8")
                    .HasMaxLength(50);

                entity.Property(e => e.Arzesh9)
                    .HasColumnName("arzesh9")
                    .HasMaxLength(50);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Codeetebari1)
                    .HasColumnName("codeetebari1")
                    .HasMaxLength(20);

                entity.Property(e => e.Codeetebari10)
                    .HasColumnName("codeetebari10")
                    .HasMaxLength(20);

                entity.Property(e => e.Codeetebari2)
                    .HasColumnName("codeetebari2")
                    .HasMaxLength(20);

                entity.Property(e => e.Codeetebari3)
                    .HasColumnName("codeetebari3")
                    .HasMaxLength(20);

                entity.Property(e => e.Codeetebari4)
                    .HasColumnName("codeetebari4")
                    .HasMaxLength(20);

                entity.Property(e => e.Codeetebari5)
                    .HasColumnName("codeetebari5")
                    .HasMaxLength(20);

                entity.Property(e => e.Codeetebari6)
                    .HasColumnName("codeetebari6")
                    .HasMaxLength(20);

                entity.Property(e => e.Codeetebari7)
                    .HasColumnName("codeetebari7")
                    .HasMaxLength(20);

                entity.Property(e => e.Codeetebari8)
                    .HasColumnName("codeetebari8")
                    .HasMaxLength(20);

                entity.Property(e => e.Codeetebari9)
                    .HasColumnName("codeetebari9")
                    .HasMaxLength(20);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Darkhast)
                    .HasColumnName("darkhast")
                    .HasMaxLength(50);

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.Emzadarkhast)
                    .HasColumnName("emzadarkhast")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Emzamasolghesmat)
                    .HasColumnName("emzamasolghesmat")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Emzamavenedare)
                    .HasColumnName("emzamavenedare")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Emzaraisedare)
                    .HasColumnName("emzaraisedare")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Ghesmat)
                    .HasColumnName("ghesmat")
                    .HasMaxLength(50);

                entity.Property(e => e.Grade).HasDefaultValueSql("(1)");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsPreNote).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsPrivateSearch).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsSigned).HasDefaultValueSql("(0)");

                entity.Property(e => e.Jamkol)
                    .HasColumnName("jamkol")
                    .HasMaxLength(50);

                entity.Property(e => e.Khradif1)
                    .HasColumnName("khradif1")
                    .HasMaxLength(20);

                entity.Property(e => e.Khradif10)
                    .HasColumnName("khradif10")
                    .HasMaxLength(20);

                entity.Property(e => e.Khradif2)
                    .HasColumnName("khradif2")
                    .HasMaxLength(20);

                entity.Property(e => e.Khradif3)
                    .HasColumnName("khradif3")
                    .HasMaxLength(20);

                entity.Property(e => e.Khradif4)
                    .HasColumnName("khradif4")
                    .HasMaxLength(20);

                entity.Property(e => e.Khradif5)
                    .HasColumnName("khradif5")
                    .HasMaxLength(20);

                entity.Property(e => e.Khradif6)
                    .HasColumnName("khradif6")
                    .HasMaxLength(20);

                entity.Property(e => e.Khradif7)
                    .HasColumnName("khradif7")
                    .HasMaxLength(20);

                entity.Property(e => e.Khradif8)
                    .HasColumnName("khradif8")
                    .HasMaxLength(20);

                entity.Property(e => e.Khradif9)
                    .HasColumnName("khradif9")
                    .HasMaxLength(20);

                entity.Property(e => e.Khsharh1)
                    .HasColumnName("khsharh1")
                    .HasMaxLength(50);

                entity.Property(e => e.Khsharh10)
                    .HasColumnName("khsharh10")
                    .HasMaxLength(50);

                entity.Property(e => e.Khsharh2)
                    .HasColumnName("khsharh2")
                    .HasMaxLength(50);

                entity.Property(e => e.Khsharh3)
                    .HasColumnName("khsharh3")
                    .HasMaxLength(50);

                entity.Property(e => e.Khsharh4)
                    .HasColumnName("khsharh4")
                    .HasMaxLength(50);

                entity.Property(e => e.Khsharh5)
                    .HasColumnName("khsharh5")
                    .HasMaxLength(50);

                entity.Property(e => e.Khsharh6)
                    .HasColumnName("khsharh6")
                    .HasMaxLength(50);

                entity.Property(e => e.Khsharh7)
                    .HasColumnName("khsharh7")
                    .HasMaxLength(50);

                entity.Property(e => e.Khsharh8)
                    .HasColumnName("khsharh8")
                    .HasMaxLength(50);

                entity.Property(e => e.Khsharh9)
                    .HasColumnName("khsharh9")
                    .HasMaxLength(50);

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");

                entity.Property(e => e.Mavanvahed)
                    .HasColumnName("mavanvahed")
                    .HasMaxLength(50);

                entity.Property(e => e.Meghdar1)
                    .HasColumnName("meghdar1")
                    .HasMaxLength(20);

                entity.Property(e => e.Meghdar10)
                    .HasColumnName("meghdar10")
                    .HasMaxLength(20);

                entity.Property(e => e.Meghdar2)
                    .HasColumnName("meghdar2")
                    .HasMaxLength(20);

                entity.Property(e => e.Meghdar3)
                    .HasColumnName("meghdar3")
                    .HasMaxLength(20);

                entity.Property(e => e.Meghdar4)
                    .HasColumnName("meghdar4")
                    .HasMaxLength(20);

                entity.Property(e => e.Meghdar5)
                    .HasColumnName("meghdar5")
                    .HasMaxLength(20);

                entity.Property(e => e.Meghdar6)
                    .HasColumnName("meghdar6")
                    .HasMaxLength(20);

                entity.Property(e => e.Meghdar7)
                    .HasColumnName("meghdar7")
                    .HasMaxLength(20);

                entity.Property(e => e.Meghdar8)
                    .HasColumnName("meghdar8")
                    .HasMaxLength(20);

                entity.Property(e => e.Meghdar9)
                    .HasColumnName("meghdar9")
                    .HasMaxLength(20);

                entity.Property(e => e.Moredeniaz)
                    .HasColumnName("moredeniaz")
                    .HasMaxLength(50);

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("(1)");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Raisedare)
                    .HasColumnName("raisedare")
                    .HasMaxLength(50);

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("(0)");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.Sumkh1)
                    .HasColumnName("sumkh1")
                    .HasMaxLength(50);

                entity.Property(e => e.Sumkh10)
                    .HasColumnName("sumkh10")
                    .HasMaxLength(50);

                entity.Property(e => e.Sumkh2)
                    .HasColumnName("sumkh2")
                    .HasMaxLength(50);

                entity.Property(e => e.Sumkh3)
                    .HasColumnName("sumkh3")
                    .HasMaxLength(50);

                entity.Property(e => e.Sumkh4)
                    .HasColumnName("sumkh4")
                    .HasMaxLength(50);

                entity.Property(e => e.Sumkh5)
                    .HasColumnName("sumkh5")
                    .HasMaxLength(50);

                entity.Property(e => e.Sumkh6)
                    .HasColumnName("sumkh6")
                    .HasMaxLength(50);

                entity.Property(e => e.Sumkh7)
                    .HasColumnName("sumkh7")
                    .HasMaxLength(50);

                entity.Property(e => e.Sumkh8)
                    .HasColumnName("sumkh8")
                    .HasMaxLength(50);

                entity.Property(e => e.Sumkh9)
                    .HasColumnName("sumkh9")
                    .HasMaxLength(50);

                entity.Property(e => e.Vehedkh1)
                    .HasColumnName("vehedkh1")
                    .HasMaxLength(50);

                entity.Property(e => e.Vehedkh10)
                    .HasColumnName("vehedkh10")
                    .HasMaxLength(50);

                entity.Property(e => e.Vehedkh2)
                    .HasColumnName("vehedkh2")
                    .HasMaxLength(50);

                entity.Property(e => e.Vehedkh3)
                    .HasColumnName("vehedkh3")
                    .HasMaxLength(50);

                entity.Property(e => e.Vehedkh4)
                    .HasColumnName("vehedkh4")
                    .HasMaxLength(50);

                entity.Property(e => e.Vehedkh5)
                    .HasColumnName("vehedkh5")
                    .HasMaxLength(50);

                entity.Property(e => e.Vehedkh6)
                    .HasColumnName("vehedkh6")
                    .HasMaxLength(50);

                entity.Property(e => e.Vehedkh7)
                    .HasColumnName("vehedkh7")
                    .HasMaxLength(50);

                entity.Property(e => e.Vehedkh8)
                    .HasColumnName("vehedkh8")
                    .HasMaxLength(50);

                entity.Property(e => e.Vehedkh9)
                    .HasColumnName("vehedkh9")
                    .HasMaxLength(50);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityDarkhastkharidCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_darkhastkharid_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("(1)");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<EntityDarkhasttamir>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_darkhasttamir");

                entity.HasIndex(e => new { e.Tarikh, e.Raisedareh, e.Raisedarehtamirat, e.EntityNumber })
                    .HasName("IX_Entity_darkhasttamir2");

                entity.HasIndex(e => new { e.Tavizyeragh, e.Rangamizi, e.Eslahehpardeh, e.Tamirkelid, e.Nasbpartition, e.Tamirdarbkomod, e.Nasbkomod, e.Nasbtablo, e.Tamirpomp, e.Besharhezil, e.Olaviate1, e.Olaviate2, e.Olaviate3, e.Tasisatmekaniki1, e.Tasisatbarghi1, e.Abnieh1 })
                    .HasName("IX_Entity_darkhasttamir1");

                entity.Property(e => e.Abnieh)
                    .HasColumnName("abnieh")
                    .HasColumnType("ntext");

                entity.Property(e => e.Abnieh1).HasColumnName("abnieh1");

                entity.Property(e => e.Besharhezil).HasColumnName("besharhezil");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.Edarehmotaghazi)
                    .HasColumnName("edarehmotaghazi")
                    .HasMaxLength(512);

                entity.Property(e => e.Emzaraisedare)
                    .HasColumnName("emzaraisedare")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Emzaraisetamirat)
                    .HasColumnName("emzaraisetamirat")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.Eslahehpardeh).HasColumnName("eslahehpardeh");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("(1)");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsPreNote).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsPrivateSearch).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsSigned).HasDefaultValueSql("(0)");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");

                entity.Property(e => e.Mahaletamirat)
                    .HasColumnName("mahaletamirat")
                    .HasMaxLength(512);

                entity.Property(e => e.Mozo)
                    .HasColumnName("mozo")
                    .HasMaxLength(512);

                entity.Property(e => e.Mozotamir)
                    .HasColumnName("mozotamir")
                    .HasMaxLength(512);

                entity.Property(e => e.Nasbkomod).HasColumnName("nasbkomod");

                entity.Property(e => e.Nasbpartition).HasColumnName("nasbpartition");

                entity.Property(e => e.Nasbtablo).HasColumnName("nasbtablo");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("(1)");

                entity.Property(e => e.Olaviate1).HasColumnName("olaviate1");

                entity.Property(e => e.Olaviate2).HasColumnName("olaviate2");

                entity.Property(e => e.Olaviate3).HasColumnName("olaviate3");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Raisedareh)
                    .HasColumnName("raisedareh")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Raisedarehtamirat)
                    .HasColumnName("raisedarehtamirat")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("(0)");

                entity.Property(e => e.Rangamizi).HasColumnName("rangamizi");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.Tamirdarbkomod).HasColumnName("tamirdarbkomod");

                entity.Property(e => e.Tamirkelid).HasColumnName("tamirkelid");

                entity.Property(e => e.Tamirpomp).HasColumnName("tamirpomp");

                entity.Property(e => e.Tarikh)
                    .HasColumnName("tarikh")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Tasisatbarghi)
                    .HasColumnName("tasisatbarghi")
                    .HasColumnType("ntext");

                entity.Property(e => e.Tasisatbarghi1).HasColumnName("tasisatbarghi1");

                entity.Property(e => e.Tasisatmekaniki)
                    .HasColumnName("tasisatmekaniki")
                    .HasColumnType("ntext");

                entity.Property(e => e.Tasisatmekaniki1).HasColumnName("tasisatmekaniki1");

                entity.Property(e => e.Tavizyeragh).HasColumnName("tavizyeragh");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityDarkhasttamirat1>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_darkhasttamirat1");

                entity.Property(e => e.Abnieh)
                    .HasColumnName("abnieh")
                    .HasColumnType("ntext");

                entity.Property(e => e.Abnieh1).HasColumnName("abnieh1");

                entity.Property(e => e.Besharhezil).HasColumnName("besharhezil");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.Edarehmotaghazi1)
                    .HasColumnName("edarehmotaghazi1")
                    .HasMaxLength(50);

                entity.Property(e => e.Emzaraisedare)
                    .HasColumnName("emzaraisedare")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Emzaraisetamirat)
                    .HasColumnName("emzaraisetamirat")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.Eslahehpardeh).HasColumnName("eslahehpardeh");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("(1)");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsPreNote).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsPrivateSearch).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsSigned).HasDefaultValueSql("(0)");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");

                entity.Property(e => e.Mahaletamirat)
                    .HasColumnName("mahaletamirat")
                    .HasMaxLength(50);

                entity.Property(e => e.Mozo)
                    .HasColumnName("mozo")
                    .HasMaxLength(80);

                entity.Property(e => e.Mozotamir)
                    .HasColumnName("mozotamir")
                    .HasMaxLength(80);

                entity.Property(e => e.Nasbkomod).HasColumnName("nasbkomod");

                entity.Property(e => e.Nasbpartition).HasColumnName("nasbpartition");

                entity.Property(e => e.Nasbtablo).HasColumnName("nasbtablo");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("(1)");

                entity.Property(e => e.Olaviate1).HasColumnName("olaviate1");

                entity.Property(e => e.Olaviate2).HasColumnName("olaviate2");

                entity.Property(e => e.Olaviate3).HasColumnName("olaviate3");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Raisedareh)
                    .HasColumnName("raisedareh")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Raisedarehtamirat)
                    .HasColumnName("raisedarehtamirat")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("(0)");

                entity.Property(e => e.Rangamizi).HasColumnName("rangamizi");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.Tamirdarbkomod).HasColumnName("tamirdarbkomod");

                entity.Property(e => e.Tamirkelid).HasColumnName("tamirkelid");

                entity.Property(e => e.Tamirpomp).HasColumnName("tamirpomp");

                entity.Property(e => e.Tarikh)
                    .HasColumnName("tarikh")
                    .HasColumnType("datetime");

                entity.Property(e => e.Tasisatbarghi)
                    .HasColumnName("tasisatbarghi")
                    .HasColumnType("ntext");

                entity.Property(e => e.Tasisatbarghi1).HasColumnName("tasisatbarghi1");

                entity.Property(e => e.Tasisatmekaniki)
                    .HasColumnName("tasisatmekaniki")
                    .HasColumnType("ntext");

                entity.Property(e => e.Tasisatmekaniki1).HasColumnName("tasisatmekaniki1");

                entity.Property(e => e.Tavizyeragh).HasColumnName("tavizyeragh");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityDarkhasttamirat1Copies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_darkhasttamirat1_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("(1)");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<EntityDarkhasttamirCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_darkhasttamir_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("(1)");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<EntityDataTypes>(entity =>
            {
                entity.HasKey(e => e.DataTypeCode);

                entity.ToTable("Entity_DataTypes");

                entity.HasIndex(e => new { e.DataTypeCode, e.FarsiName })
                    .HasName("IX_Entity_DataTypes");

                entity.Property(e => e.DataTypeCode).ValueGeneratedNever();

                entity.Property(e => e.AllowNull)
                    .HasColumnName("AllowNULL")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.EnglishName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FarsiName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.OtherIsAvailable).HasDefaultValueSql("(0)");

                entity.Property(e => e.PriorityId).HasColumnName("PriorityID");

                entity.Property(e => e.Related).HasDefaultValueSql("(0)");

                entity.Property(e => e.RelatedFields)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.RelatedTable)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SpecialType).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<EntityDataTypesDefaults>(entity =>
            {
                entity.HasKey(e => e.DefaultCode);

                entity.ToTable("Entity_DataTypes_Defaults");

                entity.HasIndex(e => new { e.DefaultCode, e.DefaultFarsiName })
                    .HasName("IX_Entity_DataTypes_Defaults");

                entity.Property(e => e.DefType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('SQL')");

                entity.Property(e => e.DefaultEnglishName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.DefaultFarsiName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.Value).IsRequired();
            });

            modelBuilder.Entity<EntityDependency>(entity =>
            {
                entity.HasKey(e => e.DependencyId);

                entity.ToTable("Entity_Dependency");

                entity.HasIndex(e => new { e.Ec, e.Etc, e.DependencyType })
                    .HasName("IX_Entity_Dependency_1");

                entity.HasIndex(e => new { e.DependencyId, e.Etc, e.Ec, e.DependencyEtc, e.DependencyEc, e.DependencyType, e.UserId, e.RoleId })
                    .HasName("IX_Entity_Dependency");

                entity.Property(e => e.DependencyId).HasColumnName("DependencyID");

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.DependencyEc).HasColumnName("DependencyEC");

                entity.Property(e => e.DependencyEtc).HasColumnName("DependencyETC");

                entity.Property(e => e.Description).HasMaxLength(1024);

                entity.Property(e => e.Ec).HasColumnName("EC");

                entity.Property(e => e.Etc).HasColumnName("ETC");

                entity.Property(e => e.ModifyFlag).HasDefaultValueSql("(1)");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.SignatureDate).HasColumnType("datetime");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<EntityDirectForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Direct_Form");

                entity.HasIndex(e => new { e.FeforrtRole, e.EntityNumber })
                    .HasName("IX_Entity_Direct_Form1");

                entity.Property(e => e.Agent)
                    .HasColumnName("agent")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.AgreeDate)
                    .HasColumnName("agree_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AgreeNumber)
                    .HasColumnName("agree_number")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.ArrivalDate)
                    .HasColumnName("arrival_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.BlItem)
                    .HasColumnName("bl_item")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Booking).HasColumnType("char(50)");

                entity.Property(e => e.BookingDate)
                    .HasColumnName("booking_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Company)
                    .HasColumnName("company")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DateForm)
                    .HasColumnName("date_form")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.Etc)
                    .HasColumnName("etc")
                    .HasMaxLength(200);

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FeffortSign)
                    .HasColumnName("FEffortSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.GoodNumber)
                    .HasColumnName("good_number")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Goods)
                    .HasColumnName("goods")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Manager)
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Package)
                    .HasColumnName("package")
                    .HasMaxLength(50);

                entity.Property(e => e.Person)
                    .HasColumnName("person")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.RequestDate)
                    .HasColumnName("request_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.RequestNumber)
                    .HasColumnName("request_number")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Serial)
                    .HasColumnName("serial")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Sign)
                    .HasColumnName("sign")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.Vessel)
                    .HasColumnName("vessel")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.VoyageNumber)
                    .HasColumnName("voyage_number")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Weight).HasColumnName("weight");
            });

            modelBuilder.Entity<EntityDirectFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Direct_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityDraftMissionForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Draft_mission_form");

                entity.HasIndex(e => new { e.OfficerName, e.FromDate, e.LetterDate, e.EntityNumber })
                    .HasName("IX_Entity_Draft_mission_form1");

                entity.Property(e => e.BossName)
                    .HasColumnName("Boss_name")
                    .HasMaxLength(200);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DepartueDate1)
                    .HasColumnName("Departue_date1")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.For).HasColumnType("ntext");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FromDate)
                    .HasColumnName("From_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("Letter_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.MissionLocation1)
                    .HasColumnName("Mission_location1")
                    .HasMaxLength(50);

                entity.Property(e => e.MissionLocation2)
                    .HasColumnName("Mission_location2")
                    .HasMaxLength(50);

                entity.Property(e => e.MissionLocation3)
                    .HasColumnName("Mission_location3")
                    .HasMaxLength(50);

                entity.Property(e => e.NationalNum)
                    .HasColumnName("National_Num")
                    .HasColumnType("nchar(10)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OfficerName)
                    .HasColumnName("officer_name")
                    .HasMaxLength(75);

                entity.Property(e => e.OfficerNo).HasColumnName("officer_no");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Path).HasMaxLength(50);

                entity.Property(e => e.Period).HasColumnType("nchar(20)");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReturnDate1)
                    .HasColumnName("Return_date1")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Signature)
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.TravelType)
                    .HasColumnName("travel_type")
                    .HasMaxLength(50);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.With).HasMaxLength(300);
            });

            modelBuilder.Entity<EntityDraftMissionFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Draft_mission_form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityDrillingPermission>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Drilling_Permission");

                entity.HasIndex(e => new { e.ElectricalInstallations, e.WaterInstallations, e.Communication, e.OpticFiber, e.PipeFire, e.FeforrtRole, e.EntityNumber })
                    .HasName("IX_Entity_Drilling_Permission1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Company)
                    .HasColumnName("company")
                    .HasMaxLength(50);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DepthAndWidth).HasMaxLength(20);

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.ElectricalInstallations).HasColumnName("Electrical_installations");

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.Indate)
                    .HasColumnName("indate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDoc)
                    .HasColumnName("Letter_doc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OpticFiber).HasColumnName("Optic_fiber");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Other).HasColumnName("other");

                entity.Property(e => e.PipeFire).HasColumnName("Pipe_Fire");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.WaterInstallations).HasColumnName("Water_installations");
            });

            modelBuilder.Entity<EntityDrillingPermissionCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Drilling_Permission_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityElectricalInstallations>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_electrical_installations");

                entity.HasIndex(e => e.EntityNumber)
                    .HasName("IX_Entity_electrical_installations1");

                entity.Property(e => e.A1)
                    .HasColumnName("a1")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.A2)
                    .HasColumnName("a2")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.A3)
                    .HasColumnName("a3")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.A4)
                    .HasColumnName("a4")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.A5)
                    .HasColumnName("a5")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.AgendumDate)
                    .HasColumnName("agendum_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AgendumNo)
                    .HasColumnName("agendum_no")
                    .HasMaxLength(50);

                entity.Property(e => e.Baha).HasColumnName("baha");

                entity.Property(e => e.Boss).HasColumnName("boss");

                entity.Property(e => e.Bossname)
                    .HasColumnName("bossname")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.ContractorName)
                    .HasColumnName("contractor_name")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Dastgahnezarat)
                    .HasColumnName("dastgahnezarat")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.DateEnd)
                    .HasColumnName("date_end")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DateStart)
                    .HasColumnName("date_start")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Deadline)
                    .HasColumnName("deadline")
                    .HasMaxLength(50);

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.Emergency).HasColumnName("emergency");

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.Expertname)
                    .HasColumnName("expertname")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.Factor).HasColumnName("factor");

                entity.Property(e => e.FamilyBoss)
                    .HasColumnName("family_boss")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FamilyReq)
                    .HasColumnName("family_req")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDoc)
                    .HasColumnName("letter_Doc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.M1)
                    .HasColumnName("m1")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.M2)
                    .HasColumnName("m2")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.M3)
                    .HasColumnName("m3")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.M4)
                    .HasColumnName("m4")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.M5)
                    .HasColumnName("m5")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.MasoleBargh)
                    .HasColumnName("masole_bargh")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.N1)
                    .HasColumnName("n1")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.N2)
                    .HasColumnName("n2")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.N3)
                    .HasColumnName("n3")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.N4)
                    .HasColumnName("n4")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.N5)
                    .HasColumnName("n5")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.Normal).HasColumnName("normal");

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.P1)
                    .HasColumnName("p1")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.P2)
                    .HasColumnName("p2")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.P3)
                    .HasColumnName("p3")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.P4)
                    .HasColumnName("p4")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.P5)
                    .HasColumnName("p5")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Place)
                    .HasColumnName("place")
                    .HasMaxLength(50);

                entity.Property(e => e.PmOperator)
                    .HasColumnName("pm_operator")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Problem)
                    .HasColumnName("problem")
                    .HasMaxLength(500);

                entity.Property(e => e.ProjectManager)
                    .HasColumnName("project_manager")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.Remain)
                    .HasColumnName("remain")
                    .HasMaxLength(20);

                entity.Property(e => e.RemainBaha)
                    .HasColumnName("remain_baha")
                    .HasMaxLength(20);

                entity.Property(e => e.Repairexpert)
                    .HasColumnName("repairexpert")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Requesttaeed)
                    .HasColumnName("requesttaeed")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Resuester)
                    .HasColumnName("resuester")
                    .HasMaxLength(50);

                entity.Property(e => e.Rials)
                    .HasColumnName("rials")
                    .HasMaxLength(20);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.T1)
                    .HasColumnName("t1")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.T2)
                    .HasColumnName("t2")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.T3)
                    .HasColumnName("t3")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.T4)
                    .HasColumnName("t4")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.T5)
                    .HasColumnName("t5")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.TeoryExpert)
                    .HasColumnName("teory_expert")
                    .HasMaxLength(50);

                entity.Property(e => e.TheoryBarghExpert)
                    .HasColumnName("theory_bargh_expert")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.TheoryBoss)
                    .HasColumnName("theory_boss")
                    .HasMaxLength(50);

                entity.Property(e => e.TimeDo)
                    .HasColumnName("time_do")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.TypeRepair)
                    .HasColumnName("type_repair")
                    .HasMaxLength(50);

                entity.Property(e => e.Typereq)
                    .HasColumnName("typereq")
                    .HasMaxLength(50);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.WorkDetails)
                    .HasColumnName("Work_details")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<EntityElectricityCostForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Electricity_Cost_Form");

                entity.HasIndex(e => e.EntityNumber)
                    .HasName("IX_Entity_Electricity_Cost_Form1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.EntranceDate)
                    .HasColumnName("entrance_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.GoodsOwner)
                    .HasColumnName("goods_owner")
                    .HasMaxLength(30);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("letter_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.PortNumber)
                    .HasColumnName("port_number")
                    .HasMaxLength(30);

                entity.Property(e => e.Price)
                    .HasColumnName("price")
                    .HasMaxLength(50);

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ShipName)
                    .HasColumnName("ship_name")
                    .HasMaxLength(30);

                entity.Property(e => e.ShipingName)
                    .HasColumnName("shiping_name")
                    .HasMaxLength(30);

                entity.Property(e => e.ShipmentName)
                    .HasColumnName("shipment_name")
                    .HasMaxLength(30);

                entity.Property(e => e.Signature)
                    .HasColumnName("signature")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.SignaturePortMng)
                    .HasColumnName("Signature_PortMNG")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Tonnage).HasMaxLength(30);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityElectricityCostFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Electricity_Cost_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityExecuteForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Execute_Form");

                entity.HasIndex(e => new { e.Request, e.Execute, e.Complete, e.Date3, e.Tittle, e.EntityNumber })
                    .HasName("IX_Entity_Execute_Form1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Complete)
                    .HasColumnName("complete")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Date1)
                    .HasColumnName("date1")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Date2)
                    .HasColumnName("date2")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Date3)
                    .HasColumnName("date3")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocNum)
                    .HasColumnName("Doc_num")
                    .HasMaxLength(50);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.Effective1).HasColumnName("effective1");

                entity.Property(e => e.Effective2).HasColumnName("effective2");

                entity.Property(e => e.Effective3).HasColumnName("effective3");

                entity.Property(e => e.Effective4).HasColumnName("effective4");

                entity.Property(e => e.Eghdam4).HasColumnType("ntext");

                entity.Property(e => e.Eghdam5).HasMaxLength(200);

                entity.Property(e => e.Eghdam6).HasMaxLength(200);

                entity.Property(e => e.Eghdam7).HasMaxLength(200);

                entity.Property(e => e.Eghdam8).HasMaxLength(200);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.Execute).HasMaxLength(50);

                entity.Property(e => e.Explain1)
                    .HasColumnName("explain1")
                    .HasMaxLength(200);

                entity.Property(e => e.Explain2)
                    .HasColumnName("explain2")
                    .HasMaxLength(200);

                entity.Property(e => e.Explain3)
                    .HasColumnName("explain3")
                    .HasMaxLength(200);

                entity.Property(e => e.Explain4)
                    .HasColumnName("explain4")
                    .HasMaxLength(200);

                entity.Property(e => e.ExplainProblem1)
                    .HasColumnName("explain_problem1")
                    .HasMaxLength(200);

                entity.Property(e => e.ExplainProblem2)
                    .HasColumnName("explain_problem2")
                    .HasMaxLength(200);

                entity.Property(e => e.ExplainProblem3)
                    .HasColumnName("explain_problem3")
                    .HasMaxLength(200);

                entity.Property(e => e.ExplainProblem4)
                    .HasColumnName("explain_problem4")
                    .HasMaxLength(200);

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.MoreExplain)
                    .HasColumnName("More_explain")
                    .HasColumnType("ntext");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.NonEffective1).HasColumnName("non_effective1");

                entity.Property(e => e.NonEffective2).HasColumnName("non_effective2");

                entity.Property(e => e.NonEffective3).HasColumnName("non_effective3");

                entity.Property(e => e.NonEffective4).HasColumnName("non_effective4");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.Request).HasMaxLength(50);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tittle).HasMaxLength(50);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.Yes1).HasColumnName("yes1");

                entity.Property(e => e.Yes2).HasColumnName("yes2");

                entity.Property(e => e.Yes3).HasColumnName("yes3");

                entity.Property(e => e.Yes4).HasColumnName("yes4");
            });

            modelBuilder.Entity<EntityExecuteFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Execute_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityExportLastIndicator>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_export_last_indicator");

                entity.HasIndex(e => new { e.EntityNumber, e.ImportMethod, e.ImportDesc, e.ExportEntityNumber, e.ExportDate, e.ExportMethod, e.ExportDesc, e.DocKeywords, e.ExportPriority, e.CreationDate })
                    .HasName("IX_Entity_export_last_indicator1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.F1).HasMaxLength(50);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.FlowHistory)
                    .HasColumnType("Editor")
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("(1)");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsPreNote).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsPrivateSearch).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsSigned).HasDefaultValueSql("(0)");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("(1)");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("(0)");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityExportLastIndicatorCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_export_last_indicator_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("(1)");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<EntityExtendedWarrantyForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Extended_Warranty_Form");

                entity.HasIndex(e => new { e.Bank, e.WarrantyNumber, e.WarrantyDate, e.Company, e.EntityNumber, e.ExportEntityNumber })
                    .HasName("IX_Entity_Extended_Warranty_Form1");

                entity.Property(e => e.Bank).HasMaxLength(150);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Company).HasMaxLength(150);

                entity.Property(e => e.Copy1)
                    .HasColumnName("Copy_1")
                    .HasMaxLength(200);

                entity.Property(e => e.CopyWarranty)
                    .HasColumnName("copy_Warranty")
                    .HasMaxLength(150);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("Letter_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OfDate)
                    .HasColumnName("of_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.PeriodTime)
                    .HasColumnName("period_time")
                    .HasMaxLength(50);

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Singature)
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.WarrantyCash)
                    .HasColumnName("Warranty_Cash")
                    .HasMaxLength(50);

                entity.Property(e => e.WarrantyCashNew).HasColumnName("Warranty_Cash_NEW");

                entity.Property(e => e.WarrantyDate)
                    .HasColumnName("Warranty_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.WarrantyNumber)
                    .HasColumnName("Warranty_Number")
                    .HasMaxLength(50);

                entity.Property(e => e.WarrantyType)
                    .HasColumnName("Warranty_type")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<EntityExtendedWarrantyFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Extended_Warranty_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityFiltering>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_filtering");

                entity.HasIndex(e => e.EntityNumber)
                    .HasName("IX_Entity_filtering1");

                entity.Property(e => e.Amvali)
                    .HasColumnName("amvali")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Contractor)
                    .HasColumnName("contractor")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DateReq)
                    .HasColumnName("date_req")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DetailReq)
                    .HasColumnName("detail_req")
                    .HasMaxLength(50);

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.Filter1).HasColumnName("filter1");

                entity.Property(e => e.Filter23).HasColumnName("filter23");

                entity.Property(e => e.Filter456).HasColumnName("filter456");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.Hse)
                    .HasColumnName("hse")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.HseDetail)
                    .HasColumnName("hse_detail")
                    .HasMaxLength(50);

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("letter_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Moavenat)
                    .HasColumnName("moavenat")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.NoDevice)
                    .HasColumnName("no_device")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.Office)
                    .HasColumnName("office")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Position)
                    .HasColumnName("position")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.TotalFilter).HasColumnName("total_filter");

                entity.Property(e => e.User)
                    .HasColumnName("user")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityFinancialPerformance>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_financial_performance");

                entity.HasIndex(e => new { e.Company, e.EntityNumber })
                    .HasName("IX_Entity_financial_performance1");

                entity.Property(e => e.Bosssign)
                    .HasColumnName("bosssign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CompaneSub)
                    .HasColumnName("compane_sub")
                    .HasMaxLength(50);

                entity.Property(e => e.Company)
                    .HasColumnName("company")
                    .HasMaxLength(50);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DateReturn)
                    .HasColumnName("date_return")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.Expert)
                    .HasColumnName("expert")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.Fdate)
                    .HasColumnName("FDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FinanceTable)
                    .HasColumnName("finance_table")
                    .HasColumnType("Editor");

                entity.Property(e => e.Finyear)
                    .HasColumnName("finyear")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.Issue)
                    .HasColumnName("issue")
                    .HasMaxLength(50);

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReturnNo)
                    .HasColumnName("return_no")
                    .HasMaxLength(50);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Thebossf)
                    .HasColumnName("thebossf")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.ToCompany)
                    .HasColumnName("to_company")
                    .HasMaxLength(50);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityFinancialPerformanceCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_financial_performance_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityFirstAid>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_first_aid");

                entity.HasIndex(e => e.EntityNumber)
                    .HasName("IX_Entity_first_aid1");

                entity.Property(e => e.Band).HasColumnName("band");

                entity.Property(e => e.Betadin).HasColumnName("betadin");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Chasb).HasColumnName("chasb");

                entity.Property(e => e.Contractor)
                    .HasColumnName("contractor")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DateReq)
                    .HasColumnName("date_req")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DetailReq)
                    .HasColumnName("detail_req")
                    .HasMaxLength(50);

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.Eyewash).HasColumnName("eyewash");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Firstaid).HasColumnName("firstaid");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Gaz).HasColumnName("gaz");

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.HseDetail)
                    .HasColumnName("hse_detail")
                    .HasMaxLength(50);

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.Lekoplast).HasColumnName("lekoplast");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("letter_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Moavenat)
                    .HasColumnName("moavenat")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.Office)
                    .HasColumnName("office")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Panbe).HasColumnName("panbe");

                entity.Property(e => e.Pomad).HasColumnName("pomad");

                entity.Property(e => e.Pomadzakhm).HasColumnName("pomadzakhm");

                entity.Property(e => e.Postition)
                    .HasColumnName("postition")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Serom).HasColumnName("serom");

                entity.Property(e => e.Taeedeuser)
                    .HasColumnName("taeedeuser")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Taeedhse)
                    .HasColumnName("taeedhse")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityGatepassLetter>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_gatepass_letter");

                entity.HasIndex(e => e.EntityNumber)
                    .HasName("IX_Entity_gatepass_letter1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.Jahat)
                    .HasColumnName("jahat")
                    .HasMaxLength(50);

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Mr)
                    .HasColumnName("mr")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Trackno)
                    .HasColumnName("trackno")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityGatepassLetterCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_gatepass_letter_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityGovahi>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_govahi");

                entity.HasIndex(e => new { e.OfficerName, e.EntityNumber })
                    .HasName("IX_Entity_govahi1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Confimed)
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.ContractType)
                    .HasColumnName("Contract_Type")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Date)
                    .HasColumnName("date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FeffortSign)
                    .HasColumnName("FEffortSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.ForPresentation)
                    .HasColumnName("for_presentation")
                    .HasMaxLength(50);

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FverifySign)
                    .HasColumnName("FVerifySign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("letter_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OfAction)
                    .HasColumnName("Of_Action")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.OfficerName)
                    .HasColumnName("officer_name")
                    .HasMaxLength(50);

                entity.Property(e => e.Organization)
                    .HasColumnName("organization")
                    .HasMaxLength(50);

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityGovahiCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_govahi_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityHavaleanbar>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_havaleanbar");

                entity.HasIndex(e => new { e.Tedadtahvilhav2, e.Tedadtahvilhav3, e.Tedadtahvilhav4, e.Tedadtahvilhav5, e.Tedadtahvilhav6, e.Tedadtahvilhav7, e.Tedadtahvilhav8, e.Tedadtahvilhav9, e.Moredeniazhav, e.Namedarkhast, e.Nemaemasol, e.Namerais, e.Namemoaven, e.EntityNumber })
                    .HasName("IX_Entity_havaleanbar5");

                entity.HasIndex(e => new { e.Numcode6, e.Numcode7, e.Numcode8, e.Numcode9, e.Meghdarhav1, e.Meghdarhav2, e.Meghdarhav3, e.Meghdarhav4, e.Meghdarhav5, e.Meghdarhav6, e.Meghdarhav7, e.Meghdarhav8, e.Meghdarhav9, e.Vahedhav1, e.Vahedhav2, e.Vahedhav3 })
                    .HasName("IX_Entity_havaleanbar3");

                entity.HasIndex(e => new { e.Radifhav1, e.Radifhav2, e.Radifhav3, e.Radifhav4, e.Radifhav5, e.Radifhav6, e.Radifhav7, e.Radifhav8, e.Radifhav9, e.Sharhhav1, e.Sharhhav2, e.Sharhhav3, e.Sharhhav4, e.Sharhhav5, e.Sharhhav6, e.Sharhhav7 })
                    .HasName("IX_Entity_havaleanbar1");

                entity.HasIndex(e => new { e.Sharhhav8, e.Sharhhav9, e.Numfanihav1, e.Numfanihav2, e.Numfanihav3, e.Numfanihav4, e.Numfanihav5, e.Numfanihav6, e.Numfanihav7, e.Numfanihav8, e.Numfanihav9, e.Numcode1, e.Numcode2, e.Numcode3, e.Numcode4, e.Numcode5 })
                    .HasName("IX_Entity_havaleanbar2");

                entity.HasIndex(e => new { e.Vahedhav4, e.Vahedhav5, e.Vahedhav6, e.Vahedhav7, e.Vahedhav8, e.Vahedhav9, e.Arzeshhav1, e.Arzeshhav2, e.Arzeshhav3, e.Arzeshhav4, e.Arzeshhav5, e.Arzeshhav6, e.Arzeshhav7, e.Arzeshhav8, e.Arzeshhav9, e.Tedadtahvilhav1 })
                    .HasName("IX_Entity_havaleanbar4");

                entity.Property(e => e.Arzeshhav1)
                    .HasColumnName("arzeshhav1")
                    .HasMaxLength(50);

                entity.Property(e => e.Arzeshhav10)
                    .HasColumnName("arzeshhav10")
                    .HasMaxLength(50);

                entity.Property(e => e.Arzeshhav2)
                    .HasColumnName("arzeshhav2")
                    .HasMaxLength(50);

                entity.Property(e => e.Arzeshhav3)
                    .HasColumnName("arzeshhav3")
                    .HasMaxLength(50);

                entity.Property(e => e.Arzeshhav4)
                    .HasColumnName("arzeshhav4")
                    .HasMaxLength(50);

                entity.Property(e => e.Arzeshhav5)
                    .HasColumnName("arzeshhav5")
                    .HasMaxLength(50);

                entity.Property(e => e.Arzeshhav6)
                    .HasColumnName("arzeshhav6")
                    .HasMaxLength(50);

                entity.Property(e => e.Arzeshhav7)
                    .HasColumnName("arzeshhav7")
                    .HasMaxLength(50);

                entity.Property(e => e.Arzeshhav8)
                    .HasColumnName("arzeshhav8")
                    .HasMaxLength(50);

                entity.Property(e => e.Arzeshhav9)
                    .HasColumnName("arzeshhav9")
                    .HasMaxLength(50);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Darkhasthav)
                    .HasColumnName("darkhasthav")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.Emzadarkhasthav)
                    .HasColumnName("emzadarkhasthav")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Emzamasolghesmathav)
                    .HasColumnName("emzamasolghesmathav")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Emzamavenedarehav)
                    .HasColumnName("emzamavenedarehav")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Emzaraisedarehav)
                    .HasColumnName("emzaraisedarehav")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Ghesmathav)
                    .HasColumnName("ghesmathav")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("(1)");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsPreNote).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsPrivateSearch).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsSigned).HasDefaultValueSql("(0)");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");

                entity.Property(e => e.Mavanvahedhav)
                    .HasColumnName("mavanvahedhav")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Meghdarhav1)
                    .HasColumnName("meghdarhav1")
                    .HasMaxLength(20);

                entity.Property(e => e.Meghdarhav10)
                    .HasColumnName("meghdarhav10")
                    .HasMaxLength(20);

                entity.Property(e => e.Meghdarhav2)
                    .HasColumnName("meghdarhav2")
                    .HasMaxLength(20);

                entity.Property(e => e.Meghdarhav3)
                    .HasColumnName("meghdarhav3")
                    .HasMaxLength(20);

                entity.Property(e => e.Meghdarhav4)
                    .HasColumnName("meghdarhav4")
                    .HasMaxLength(20);

                entity.Property(e => e.Meghdarhav5)
                    .HasColumnName("meghdarhav5")
                    .HasMaxLength(20);

                entity.Property(e => e.Meghdarhav6)
                    .HasColumnName("meghdarhav6")
                    .HasMaxLength(20);

                entity.Property(e => e.Meghdarhav7)
                    .HasColumnName("meghdarhav7")
                    .HasMaxLength(20);

                entity.Property(e => e.Meghdarhav8)
                    .HasColumnName("meghdarhav8")
                    .HasMaxLength(20);

                entity.Property(e => e.Meghdarhav9)
                    .HasColumnName("meghdarhav9")
                    .HasMaxLength(20);

                entity.Property(e => e.Moredeniazhav)
                    .HasColumnName("moredeniazhav")
                    .HasMaxLength(50);

                entity.Property(e => e.Namedarkhast)
                    .HasColumnName("namedarkhast")
                    .HasMaxLength(50);

                entity.Property(e => e.Namemoaven)
                    .HasColumnName("namemoaven")
                    .HasMaxLength(50);

                entity.Property(e => e.Namerais)
                    .HasColumnName("namerais")
                    .HasMaxLength(50);

                entity.Property(e => e.Nemaemasol)
                    .HasColumnName("nemaemasol")
                    .HasMaxLength(50);

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("(1)");

                entity.Property(e => e.Numcode1)
                    .HasColumnName("numcode1")
                    .HasMaxLength(50);

                entity.Property(e => e.Numcode10)
                    .HasColumnName("numcode10")
                    .HasMaxLength(50);

                entity.Property(e => e.Numcode2)
                    .HasColumnName("numcode2")
                    .HasMaxLength(50);

                entity.Property(e => e.Numcode3)
                    .HasColumnName("numcode3")
                    .HasMaxLength(50);

                entity.Property(e => e.Numcode4)
                    .HasColumnName("numcode4")
                    .HasMaxLength(50);

                entity.Property(e => e.Numcode5)
                    .HasColumnName("numcode5")
                    .HasMaxLength(50);

                entity.Property(e => e.Numcode6)
                    .HasColumnName("numcode6")
                    .HasMaxLength(50);

                entity.Property(e => e.Numcode7)
                    .HasColumnName("numcode7")
                    .HasMaxLength(50);

                entity.Property(e => e.Numcode8)
                    .HasColumnName("numcode8")
                    .HasMaxLength(50);

                entity.Property(e => e.Numcode9)
                    .HasColumnName("numcode9")
                    .HasMaxLength(50);

                entity.Property(e => e.Numfanihav1)
                    .HasColumnName("numfanihav1")
                    .HasMaxLength(20);

                entity.Property(e => e.Numfanihav10)
                    .HasColumnName("numfanihav10")
                    .HasMaxLength(20);

                entity.Property(e => e.Numfanihav2)
                    .HasColumnName("numfanihav2")
                    .HasMaxLength(20);

                entity.Property(e => e.Numfanihav3)
                    .HasColumnName("numfanihav3")
                    .HasMaxLength(20);

                entity.Property(e => e.Numfanihav4)
                    .HasColumnName("numfanihav4")
                    .HasMaxLength(20);

                entity.Property(e => e.Numfanihav5)
                    .HasColumnName("numfanihav5")
                    .HasMaxLength(20);

                entity.Property(e => e.Numfanihav6)
                    .HasColumnName("numfanihav6")
                    .HasMaxLength(20);

                entity.Property(e => e.Numfanihav7)
                    .HasColumnName("numfanihav7")
                    .HasMaxLength(20);

                entity.Property(e => e.Numfanihav8)
                    .HasColumnName("numfanihav8")
                    .HasMaxLength(20);

                entity.Property(e => e.Numfanihav9)
                    .HasColumnName("numfanihav9")
                    .HasMaxLength(20);

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Radifhav1)
                    .HasColumnName("radifhav1")
                    .HasMaxLength(20);

                entity.Property(e => e.Radifhav10)
                    .HasColumnName("radifhav10")
                    .HasMaxLength(20);

                entity.Property(e => e.Radifhav2)
                    .HasColumnName("radifhav2")
                    .HasMaxLength(20);

                entity.Property(e => e.Radifhav3)
                    .HasColumnName("radifhav3")
                    .HasMaxLength(20);

                entity.Property(e => e.Radifhav4)
                    .HasColumnName("radifhav4")
                    .HasMaxLength(20);

                entity.Property(e => e.Radifhav5)
                    .HasColumnName("radifhav5")
                    .HasMaxLength(20);

                entity.Property(e => e.Radifhav6)
                    .HasColumnName("radifhav6")
                    .HasMaxLength(20);

                entity.Property(e => e.Radifhav7)
                    .HasColumnName("radifhav7")
                    .HasMaxLength(20);

                entity.Property(e => e.Radifhav8)
                    .HasColumnName("radifhav8")
                    .HasMaxLength(20);

                entity.Property(e => e.Radifhav9)
                    .HasColumnName("radifhav9")
                    .HasMaxLength(20);

                entity.Property(e => e.Raisedare)
                    .HasColumnName("raisedare")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("(0)");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.Sharhhav1)
                    .HasColumnName("sharhhav1")
                    .HasMaxLength(50);

                entity.Property(e => e.Sharhhav10)
                    .HasColumnName("sharhhav10")
                    .HasMaxLength(50);

                entity.Property(e => e.Sharhhav2)
                    .HasColumnName("sharhhav2")
                    .HasMaxLength(50);

                entity.Property(e => e.Sharhhav3)
                    .HasColumnName("sharhhav3")
                    .HasMaxLength(50);

                entity.Property(e => e.Sharhhav4)
                    .HasColumnName("sharhhav4")
                    .HasMaxLength(50);

                entity.Property(e => e.Sharhhav5)
                    .HasColumnName("sharhhav5")
                    .HasMaxLength(50);

                entity.Property(e => e.Sharhhav6)
                    .HasColumnName("sharhhav6")
                    .HasMaxLength(50);

                entity.Property(e => e.Sharhhav7)
                    .HasColumnName("sharhhav7")
                    .HasMaxLength(50);

                entity.Property(e => e.Sharhhav8)
                    .HasColumnName("sharhhav8")
                    .HasMaxLength(50);

                entity.Property(e => e.Sharhhav9)
                    .HasColumnName("sharhhav9")
                    .HasMaxLength(50);

                entity.Property(e => e.Tedadtahvilhav1)
                    .HasColumnName("tedadtahvilhav1")
                    .HasMaxLength(20);

                entity.Property(e => e.Tedadtahvilhav10)
                    .HasColumnName("tedadtahvilhav10")
                    .HasMaxLength(20);

                entity.Property(e => e.Tedadtahvilhav2)
                    .HasColumnName("tedadtahvilhav2")
                    .HasMaxLength(20);

                entity.Property(e => e.Tedadtahvilhav3)
                    .HasColumnName("tedadtahvilhav3")
                    .HasMaxLength(20);

                entity.Property(e => e.Tedadtahvilhav4)
                    .HasColumnName("tedadtahvilhav4")
                    .HasMaxLength(20);

                entity.Property(e => e.Tedadtahvilhav5)
                    .HasColumnName("tedadtahvilhav5")
                    .HasMaxLength(20);

                entity.Property(e => e.Tedadtahvilhav6)
                    .HasColumnName("tedadtahvilhav6")
                    .HasMaxLength(20);

                entity.Property(e => e.Tedadtahvilhav7)
                    .HasColumnName("tedadtahvilhav7")
                    .HasMaxLength(20);

                entity.Property(e => e.Tedadtahvilhav8)
                    .HasColumnName("tedadtahvilhav8")
                    .HasMaxLength(20);

                entity.Property(e => e.Tedadtahvilhav9)
                    .HasColumnName("tedadtahvilhav9")
                    .HasMaxLength(20);

                entity.Property(e => e.Vahedhav1)
                    .HasColumnName("vahedhav1")
                    .HasMaxLength(50);

                entity.Property(e => e.Vahedhav10)
                    .HasColumnName("vahedhav10")
                    .HasMaxLength(50);

                entity.Property(e => e.Vahedhav2)
                    .HasColumnName("vahedhav2")
                    .HasMaxLength(50);

                entity.Property(e => e.Vahedhav3)
                    .HasColumnName("vahedhav3")
                    .HasMaxLength(50);

                entity.Property(e => e.Vahedhav4)
                    .HasColumnName("vahedhav4")
                    .HasMaxLength(50);

                entity.Property(e => e.Vahedhav5)
                    .HasColumnName("vahedhav5")
                    .HasMaxLength(50);

                entity.Property(e => e.Vahedhav6)
                    .HasColumnName("vahedhav6")
                    .HasMaxLength(50);

                entity.Property(e => e.Vahedhav7)
                    .HasColumnName("vahedhav7")
                    .HasMaxLength(50);

                entity.Property(e => e.Vahedhav8)
                    .HasColumnName("vahedhav8")
                    .HasMaxLength(50);

                entity.Property(e => e.Vahedhav9)
                    .HasColumnName("vahedhav9")
                    .HasMaxLength(50);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityHavaleanbarCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_havaleanbar_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("(1)");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<EntityHotelReservation>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Hotel_Reservation");

                entity.HasIndex(e => new { e.CurrentTimeRequest, e.LetterDoc, e.Location, e.EntityNumber })
                    .HasName("IX_Entity_Hotel_Reservation1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.CurrentTimeRequest)
                    .HasColumnName("Current_Time_Request")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.Family1).HasMaxLength(50);

                entity.Property(e => e.Family2).HasMaxLength(50);

                entity.Property(e => e.Family3).HasMaxLength(50);

                entity.Property(e => e.Family4).HasMaxLength(50);

                entity.Property(e => e.Family5).HasMaxLength(50);

                entity.Property(e => e.Family6).HasMaxLength(50);

                entity.Property(e => e.Family7).HasMaxLength(50);

                entity.Property(e => e.Family8).HasMaxLength(50);

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDoc)
                    .HasColumnName("letter_Doc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Location).HasColumnType("PointerRelatedField");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Name1)
                    .HasColumnName("name1")
                    .HasMaxLength(50);

                entity.Property(e => e.Name2)
                    .HasColumnName("name2")
                    .HasMaxLength(50);

                entity.Property(e => e.Name3)
                    .HasColumnName("name3")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Name4)
                    .HasColumnName("name4")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Name5)
                    .HasColumnName("name5")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Name6)
                    .HasColumnName("name6")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Name7)
                    .HasColumnName("name7")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.Relation1).HasMaxLength(50);

                entity.Property(e => e.Relation2).HasMaxLength(50);

                entity.Property(e => e.Relation3).HasMaxLength(50);

                entity.Property(e => e.Relation4).HasMaxLength(50);

                entity.Property(e => e.Relation5).HasMaxLength(50);

                entity.Property(e => e.Relation6).HasMaxLength(50);

                entity.Property(e => e.Relation7).HasMaxLength(50);

                entity.Property(e => e.Relation8).HasMaxLength(50);

                entity.Property(e => e.RequestDate)
                    .HasColumnName("Request_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.RequestName)
                    .HasColumnName("Request_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TimeUse)
                    .HasColumnName("Time_Use")
                    .HasColumnType("numeric(, 0)");

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityHotelReservationCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Hotel_Reservation_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityHouse>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_House");

                entity.HasIndex(e => e.EntityNumber)
                    .HasName("IX_Entity_House1");

                entity.Property(e => e.Attach)
                    .HasColumnName("attach")
                    .HasMaxLength(50);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.Fdate)
                    .HasColumnName("FDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Feditor)
                    .HasColumnName("FEditor")
                    .HasColumnType("Editor");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Frole)
                    .HasColumnName("FRole")
                    .HasMaxLength(256);

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Fsubject).HasMaxLength(512);

                entity.Property(e => e.Fto)
                    .HasColumnName("FTo")
                    .HasColumnType("ntext");

                entity.Property(e => e.FverifyRole)
                    .HasColumnName("FVerifyRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FverifySign)
                    .HasColumnName("FVerifySign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityHouseCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_House_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityImportLastIndicator>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_IMPORT_LAST_INDICATOR");

                entity.HasIndex(e => new { e.EntityNumber, e.ImportEntityNumber, e.ImportDate, e.ImportMethod, e.ImportDesc, e.ImportOriginNo, e.ImportOriginDate, e.DocType, e.DocKeywords, e.ImportPriority })
                    .HasName("IX_Entity_IMPORT_LAST_INDICATOR1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.F1).HasMaxLength(50);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.FlowHistory)
                    .HasColumnType("Editor")
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("(1)");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsPreNote).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsPrivateSearch).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsSigned).HasDefaultValueSql("(0)");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("(1)");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("(0)");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityImportLastIndicatorCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_IMPORT_LAST_INDICATOR_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("(1)");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<EntityIncidentMngNewVersian>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Incident_Mng_NewVersian");

                entity.HasIndex(e => e.EntityNumber)
                    .HasName("IX_Entity_Incident_Mng_NewVersian1");

                entity.Property(e => e.ActionDesription)
                    .HasColumnName("Action_Desription")
                    .HasColumnType("ntext");

                entity.Property(e => e.ActionPelan)
                    .HasColumnName("Action_Pelan")
                    .HasMaxLength(50);

                entity.Property(e => e.ActionTimeout)
                    .HasColumnName("Action_Timeout")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AssetName)
                    .HasColumnName("Asset_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.AssetType)
                    .HasColumnName("Asset_Type")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.BasisReason)
                    .HasColumnName("Basis_Reason")
                    .HasColumnType("ntext");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CommitteeReport)
                    .HasColumnName("Committee_Report")
                    .HasColumnType("ntext");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.FrequencyDetail)
                    .HasColumnName("Frequency_Detail")
                    .HasMaxLength(50);

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FunctorName)
                    .HasColumnName("Functor_Name")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.IdentifyDate)
                    .HasColumnName("Identify_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.Impressment).HasColumnType("PointerRelatedField");

                entity.Property(e => e.IncidentDiscription)
                    .HasColumnName("Incident_Discription")
                    .HasColumnType("ntext");

                entity.Property(e => e.IncidentFrequency)
                    .HasColumnName("Incident_Frequency")
                    .HasMaxLength(50);

                entity.Property(e => e.IncidentPriority)
                    .HasColumnName("Incident_Priority")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.IncidentStatus)
                    .HasColumnName("Incident_Status")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.IncidentType)
                    .HasColumnName("Incident_type")
                    .HasMaxLength(50);

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDoc)
                    .HasColumnName("Letter_Doc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.MoratoriumTime)
                    .HasColumnName("Moratorium_Time")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReporterName)
                    .HasColumnName("Reporter_Name")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Resolution).HasMaxLength(50);

                entity.Property(e => e.ResponsibleAction)
                    .HasColumnName("Responsible_Action")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.ReviewDate)
                    .HasColumnName("Review_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SolvingTime)
                    .HasColumnName("Solving_Time")
                    .HasMaxLength(50);

                entity.Property(e => e.SuccessBcp)
                    .HasColumnName("Success_BCP")
                    .HasMaxLength(50);

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Urgency).HasColumnType("PointerRelatedField");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityIncidentMngNewVersianCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Incident_Mng_NewVersian_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityInLetterDoc1>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_InLetterDoc1");

                entity.HasIndex(e => new { e.EntityNumber, e.ImportEntityNumber, e.ImportDate, e.ImportMethod, e.ImportDesc, e.ImportOriginNo, e.ImportOriginDate, e.DocType, e.DocKeywords, e.ImportPriority })
                    .HasName("IX_Entity_InLetterDoc11");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.F1).HasMaxLength(50);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.FlowHistory).HasColumnType("Editor");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("(1)");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsPreNote).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsPrivateSearch).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsSigned).HasDefaultValueSql("(0)");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("(1)");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("(0)");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityInLetterDoc1Copies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_InLetterDoc1_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("(1)");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<EntityInLetterDoc2>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_InLetterDoc2");

                entity.HasIndex(e => new { e.EntityNumber, e.ImportEntityNumber, e.ImportDate, e.ImportMethod, e.ImportDesc, e.ImportOriginNo, e.ImportOriginDate, e.DocType, e.DocKeywords, e.ImportPriority })
                    .HasName("IX_Entity_InLetterDoc21");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.F1).HasMaxLength(50);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.FlowHistory).HasColumnType("Editor");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("(1)");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsPreNote).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsPrivateSearch).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsSigned).HasDefaultValueSql("(0)");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("(1)");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("(0)");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityInLetterDoc2Copies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_InLetterDoc2_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("(1)");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<EntityInvalidateWarrantyForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Invalidate_Warranty_Form");

                entity.HasIndex(e => new { e.Bank, e.WarrantyNumber, e.WarrantyDate, e.Company, e.EntityNumber, e.ExportEntityNumber })
                    .HasName("IX_Entity_Invalidate_Warranty_Form1");

                entity.Property(e => e.Appendix).HasMaxLength(50);

                entity.Property(e => e.Bank).HasMaxLength(150);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Company).HasMaxLength(150);

                entity.Property(e => e.Copy1)
                    .HasColumnName("Copy_1")
                    .HasMaxLength(200);

                entity.Property(e => e.CopyWarranty)
                    .HasColumnName("copy_Warranty")
                    .HasMaxLength(150);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("Letter_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Singature)
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.WarrantyCash)
                    .HasColumnName("Warranty_Cash")
                    .HasMaxLength(50);

                entity.Property(e => e.WarrantyCashNew).HasColumnName("Warranty_Cash_NEW");

                entity.Property(e => e.WarrantyDate)
                    .HasColumnName("Warranty_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.WarrantyNumber)
                    .HasColumnName("Warranty_Number")
                    .HasMaxLength(50);

                entity.Property(e => e.WarrantyType)
                    .HasColumnName("Warranty_Type")
                    .HasMaxLength(75);
            });

            modelBuilder.Entity<EntityInvalidateWarrantyFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Invalidate_Warranty_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityInvestmentLetterDoc>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Investment_Letter_Doc");

                entity.HasIndex(e => e.EntityNumber)
                    .HasName("IX_EntityNumber");

                entity.HasIndex(e => e.FirstEntityCode)
                    .HasName("IX_FirstEntityCode");

                entity.HasIndex(e => new { e.IsPreNote, e.CreatorRoleId })
                    .HasName("IX_IsPreNote_CreatorRoleID");

                entity.HasIndex(e => new { e.Fdate, e.SignerName, e.SignerRole, e.FeffortRole, e.FverifyRole, e.EntityNumber, e.ExportEntityNumber, e.ExportDate })
                    .HasName("IX_Entity_Investment_Letter_Doc1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.Fdate)
                    .HasColumnName("FDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FeffortRole)
                    .HasColumnName("FEffortRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeffortSign)
                    .HasColumnName("FEffortSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Frole)
                    .HasColumnName("FRole")
                    .HasMaxLength(2048);

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Fsubject)
                    .HasColumnName("FSubject")
                    .HasMaxLength(1024);

                entity.Property(e => e.Fto)
                    .HasColumnName("FTo")
                    .HasColumnType("ntext");

                entity.Property(e => e.FverifyRole)
                    .HasColumnName("FVerifyRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FverifySign)
                    .HasColumnName("FVerifySign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.Refto).HasMaxLength(4000);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SignerName).HasMaxLength(100);

                entity.Property(e => e.SignerRole).HasMaxLength(100);

                entity.Property(e => e.Text)
                    .HasColumnName("text")
                    .HasMaxLength(4000);

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityInvestmentLetterDocCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Investment_Letter_Doc_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityInvestmentLetterDocVersion>(entity =>
            {
                entity.HasKey(e => e.XId);

                entity.ToTable("Entity_Investment_Letter_Doc_Version");

                entity.Property(e => e.XId).HasColumnName("xID");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000);

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000);

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.Fdate)
                    .HasColumnName("FDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FeffortRole)
                    .HasColumnName("FEffortRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeffortSign)
                    .HasColumnName("FEffortSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Frole)
                    .HasColumnName("FRole")
                    .HasMaxLength(2048);

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Fsubject)
                    .HasColumnName("FSubject")
                    .HasMaxLength(1024);

                entity.Property(e => e.Fto)
                    .HasColumnName("FTo")
                    .HasColumnType("ntext");

                entity.Property(e => e.FverifyRole)
                    .HasColumnName("FVerifyRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FverifySign)
                    .HasColumnName("FVerifySign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000);

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate).HasColumnType("datetime");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.Refto).HasMaxLength(4000);

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SessionId)
                    .IsRequired()
                    .HasColumnName("SessionID")
                    .HasMaxLength(255);

                entity.Property(e => e.SignerName).HasMaxLength(100);

                entity.Property(e => e.SignerRole).HasMaxLength(100);

                entity.Property(e => e.Text)
                    .HasColumnName("text")
                    .HasMaxLength(4000);

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityInviteMeeting>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_InviteMeeting");

                entity.HasIndex(e => new { e.BoosMeeting, e.SecretaryMeeting, e.Location, e.DateMeeting, e.StartTime, e.FinishTime, e.GenerationDate, e.EntityNumber })
                    .HasName("IX_Entity_InviteMeeting1");

                entity.Property(e => e.BoosMeeting)
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DateMeeting).HasColumnType("smalldatetime");

                entity.Property(e => e.Description).HasColumnType("ntext");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FinishTime).HasColumnType("Time");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.GenerationDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Grade).HasDefaultValueSql("(1)");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsPreNote).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsPrivateSearch).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsSigned).HasDefaultValueSql("(0)");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Location)
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("(1)");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("(0)");

                entity.Property(e => e.SecretaryMeeting)
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.StartTime).HasColumnType("Time");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityInviteMeetingCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_InviteMeeting_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("(1)");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<EntityIssuanceWarrantyForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Issuance_Warranty_Form");

                entity.HasIndex(e => new { e.IssuanceWarranty, e.Company, e.LetterDate, e.ContractNum, e.ContractSubject, e.EntityNumber, e.ExportEntityNumber })
                    .HasName("IX_Entity_Issuance_Warranty_Form1");

                entity.Property(e => e.Bank).HasMaxLength(150);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Company).HasMaxLength(50);

                entity.Property(e => e.ContractNum)
                    .HasColumnName("Contract_num")
                    .HasColumnType("nchar(30)");

                entity.Property(e => e.ContractSubject)
                    .HasColumnName("Contract_subject")
                    .HasMaxLength(150);

                entity.Property(e => e.Copy1)
                    .HasColumnName("Copy_1")
                    .HasMaxLength(200);

                entity.Property(e => e.CopyWarranty)
                    .HasColumnName("copy_Warranty")
                    .HasMaxLength(150);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.IssuanceWarranty)
                    .HasColumnName("Issuance_warranty")
                    .HasMaxLength(50);

                entity.Property(e => e.IssueDate)
                    .HasColumnName("issue_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("Letter_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OfDate)
                    .HasColumnName("of_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.PeriodTime)
                    .HasColumnName("period_time")
                    .HasMaxLength(50);

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Singature)
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.SubContract)
                    .HasColumnName("sub_contract")
                    .HasMaxLength(50);

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.WarrantyCash)
                    .HasColumnName("Warranty_Cash")
                    .HasMaxLength(50);

                entity.Property(e => e.WarrantyCashNew).HasColumnName("Warranty_Cash_New");

                entity.Property(e => e.WarrantyDate)
                    .HasColumnName("Warranty_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<EntityIssuanceWarrantyFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Issuance_Warranty_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityItRequest>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_IT_request");

                entity.HasIndex(e => new { e.Unit, e.Location, e.Reason, e.Name, e.DocumentDate, e.EntityNumber })
                    .HasName("IX_Entity_IT_request1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.ContactNumber)
                    .HasColumnName("Contact_Number")
                    .HasColumnType("nchar(5)");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.DocumentDate)
                    .HasColumnName("document_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.EquList)
                    .HasColumnName("equ_list")
                    .HasColumnType("Editor");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Location)
                    .HasColumnName("location")
                    .HasMaxLength(50);

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Name).HasMaxLength(30);

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.Reason)
                    .HasColumnName("reason")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Sender)
                    .HasColumnName("sender")
                    .HasMaxLength(50);

                entity.Property(e => e.Unit)
                    .HasColumnName("unit")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityItRequestCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_IT_request_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityLanguages>(entity =>
            {
                entity.HasKey(e => e.LanguageCode);

                entity.ToTable("Entity_Languages");

                entity.Property(e => e.Direction)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.LanguageFarsiName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.LanguageName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EntityLetter>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Letter");

                entity.HasIndex(e => new { e.Mozo, e.Tarikh, e.EntityNumber })
                    .HasName("IX_Entity_Letter1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.FlowHistory)
                    .HasColumnType("Editor")
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("(1)");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsPreNote).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsPrivateSearch).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsSigned).HasDefaultValueSql("(0)");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");

                entity.Property(e => e.Matn).HasColumnType("Editor");

                entity.Property(e => e.Mozo).HasMaxLength(50);

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("(1)");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("(0)");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.Sharh).HasColumnType("Editor");

                entity.Property(e => e.Tarikh).HasColumnType("datetime");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityLetterCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Letter_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("(1)");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<EntityLetterD0cAsaluye>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Letter_D0c_Asaluye");

                entity.HasIndex(e => e.EntityNumber)
                    .HasName("IX_EntityNumber");

                entity.HasIndex(e => e.FirstEntityCode)
                    .HasName("IX_FirstEntityCode");

                entity.HasIndex(e => new { e.IsPreNote, e.CreatorRoleId })
                    .HasName("IX_IsPreNote_CreatorRoleID");

                entity.HasIndex(e => new { e.Frole, e.FeforrtRole, e.FverifyRole, e.Fdate, e.EntityNumber, e.ExportEntityNumber })
                    .HasName("IX_Entity_Letter_D0c_Asaluye1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.Fdate)
                    .HasColumnName("FDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FdltRole)
                    .HasColumnName("FDltRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FdltSign)
                    .HasColumnName("FDltSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Feditor)
                    .HasColumnName("FEditor")
                    .HasColumnType("Editor");

                entity.Property(e => e.FeffortSign)
                    .HasColumnName("FEffortSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Frole)
                    .HasColumnName("FRole")
                    .HasMaxLength(256);

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Fsubject).HasMaxLength(512);

                entity.Property(e => e.Fto)
                    .HasColumnName("FTo")
                    .HasColumnType("ntext");

                entity.Property(e => e.FverifyRole)
                    .HasColumnName("FVerifyRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FverifySign)
                    .HasColumnName("FVerifySign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityLetterD0cAsaluyeCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Letter_D0c_Asaluye_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityLetterD0cAsaluyeVersion>(entity =>
            {
                entity.HasKey(e => e.XId);

                entity.ToTable("Entity_Letter_D0c_Asaluye_Version");

                entity.Property(e => e.XId).HasColumnName("xID");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000);

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000);

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.Fdate)
                    .HasColumnName("FDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FdltRole)
                    .HasColumnName("FDltRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FdltSign)
                    .HasColumnName("FDltSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Feditor)
                    .HasColumnName("FEditor")
                    .HasColumnType("Editor")
                    .HasDefaultValueSql("(N'سلام عليكم')");

                entity.Property(e => e.FeffortSign)
                    .HasColumnName("FEffortSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Frole)
                    .HasColumnName("FRole")
                    .HasMaxLength(256);

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Fsubject).HasMaxLength(512);

                entity.Property(e => e.Fto)
                    .HasColumnName("FTo")
                    .HasColumnType("ntext");

                entity.Property(e => e.FverifyRole)
                    .HasColumnName("FVerifyRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FverifySign)
                    .HasColumnName("FVerifySign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000);

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate).HasColumnType("datetime");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SessionId)
                    .IsRequired()
                    .HasColumnName("SessionID")
                    .HasMaxLength(255);

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityLetterDoc>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Letter_Doc");

                entity.HasIndex(e => new { e.Fdate, e.FeffortRole, e.FverifyRole, e.EntityNumber, e.ExportEntityNumber })
                    .HasName("IX_Entity_Letter_Doc1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.Fdate)
                    .HasColumnName("FDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FdltRole)
                    .HasColumnName("FDltRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FdltSign)
                    .HasColumnName("FDltSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Feditor)
                    .HasColumnName("FEditor")
                    .HasColumnType("Editor");

                entity.Property(e => e.FeffortRole)
                    .HasColumnName("FEffortRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeffortSign)
                    .HasColumnName("FEffortSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Frole)
                    .HasColumnName("FRole")
                    .HasMaxLength(2048);

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Fsubject)
                    .HasColumnName("FSubject")
                    .HasMaxLength(1024);

                entity.Property(e => e.Fto)
                    .HasColumnName("FTo")
                    .HasColumnType("ntext");

                entity.Property(e => e.FverifyRole)
                    .HasColumnName("FVerifyRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FverifySign)
                    .HasColumnName("FVerifySign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SignerName).HasMaxLength(100);

                entity.Property(e => e.SignerRole).HasMaxLength(100);

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityLetterDocCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Letter_Doc_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("(1)");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<EntityLetterDocKharg>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Letter_Doc_Kharg");

                entity.HasIndex(e => e.EntityNumber)
                    .HasName("IX_EntityNumber");

                entity.HasIndex(e => e.FirstEntityCode)
                    .HasName("IX_FirstEntityCode");

                entity.HasIndex(e => new { e.IsPreNote, e.CreatorRoleId })
                    .HasName("IX_IsPreNote_CreatorRoleID");

                entity.HasIndex(e => new { e.Frole, e.FeforrtRole, e.FverifyRole, e.Fdate, e.EntityNumber, e.ExportEntityNumber })
                    .HasName("IX_Entity_Letter_Doc_Kharg1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.Fdate)
                    .HasColumnName("FDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FdltRole)
                    .HasColumnName("FDltRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FdltSign)
                    .HasColumnName("FDltSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Feditor)
                    .HasColumnName("FEditor")
                    .HasColumnType("Editor");

                entity.Property(e => e.FeffortSign)
                    .HasColumnName("FEffortSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Frole)
                    .HasColumnName("FRole")
                    .HasMaxLength(256);

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Fsubject).HasMaxLength(512);

                entity.Property(e => e.Fto)
                    .HasColumnName("FTo")
                    .HasColumnType("ntext");

                entity.Property(e => e.FverifyRole)
                    .HasColumnName("FVerifyRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FverifySign)
                    .HasColumnName("FVerifySign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityLetterDocKhargCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Letter_Doc_Kharg_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityLetterDocKhargVersion>(entity =>
            {
                entity.HasKey(e => e.XId);

                entity.ToTable("Entity_Letter_Doc_Kharg_Version");

                entity.HasIndex(e => new { e.EntityCode, e.SessionId, e.RoleId })
                    .HasName("_dta_index_Entity_Letter_Doc_Kharg_Version_7_655548548__K2_K3_K4");

                entity.Property(e => e.XId).HasColumnName("xID");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000);

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000);

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.Fdate)
                    .HasColumnName("FDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FdltRole)
                    .HasColumnName("FDltRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FdltSign)
                    .HasColumnName("FDltSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Feditor)
                    .HasColumnName("FEditor")
                    .HasColumnType("Editor")
                    .HasDefaultValueSql("(N'سلام عليكم')");

                entity.Property(e => e.FeffortSign)
                    .HasColumnName("FEffortSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Frole)
                    .HasColumnName("FRole")
                    .HasMaxLength(256);

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Fsubject).HasMaxLength(512);

                entity.Property(e => e.Fto)
                    .HasColumnName("FTo")
                    .HasColumnType("ntext");

                entity.Property(e => e.FverifyRole)
                    .HasColumnName("FVerifyRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FverifySign)
                    .HasColumnName("FVerifySign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000);

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate).HasColumnType("datetime");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SessionId)
                    .IsRequired()
                    .HasColumnName("SessionID")
                    .HasMaxLength(255);

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityLetterDocVersion>(entity =>
            {
                entity.HasKey(e => e.XId);

                entity.ToTable("Entity_Letter_Doc_Version");

                entity.HasIndex(e => new { e.XId, e.SessionId, e.EntityCode, e.RoleId })
                    .HasName("_dta_index_Entity_Letter_Doc_Version_7_187302806__K3_K2_K4_1");

                entity.Property(e => e.XId).HasColumnName("xID");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000);

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000);

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.Fdate)
                    .HasColumnName("FDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FdltRole)
                    .HasColumnName("FDltRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FdltSign)
                    .HasColumnName("FDltSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Feditor)
                    .HasColumnName("FEditor")
                    .HasColumnType("Editor")
                    .HasDefaultValueSql("(N'hellobushehr')");

                entity.Property(e => e.FeffortRole)
                    .HasColumnName("FEffortRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeffortSign)
                    .HasColumnName("FEffortSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Frole)
                    .HasColumnName("FRole")
                    .HasMaxLength(2048);

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Fsubject)
                    .HasColumnName("FSubject")
                    .HasMaxLength(1024);

                entity.Property(e => e.Fto)
                    .HasColumnName("FTo")
                    .HasColumnType("ntext");

                entity.Property(e => e.FverifyRole)
                    .HasColumnName("FVerifyRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FverifySign)
                    .HasColumnName("FVerifySign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000);

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate).HasColumnType("datetime");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SessionId)
                    .IsRequired()
                    .HasColumnName("SessionID")
                    .HasMaxLength(255);

                entity.Property(e => e.SignerName).HasMaxLength(100);

                entity.Property(e => e.SignerRole).HasMaxLength(100);

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityLoan>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Loan");

                entity.HasIndex(e => new { e.LetterDoc, e.EntityNumber })
                    .HasName("IX_Entity_Loan1");

                entity.Property(e => e.Amount).HasMaxLength(20);

                entity.Property(e => e.Bank)
                    .HasColumnName("bank")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.Injaneb)
                    .HasColumnName("injaneb")
                    .HasMaxLength(50);

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.Karmand).HasColumnType("PointerRelatedField");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LawMonth)
                    .HasColumnName("lawMonth")
                    .HasMaxLength(20);

                entity.Property(e => e.LetterDoc)
                    .HasColumnName("letter_Doc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.Reson).HasMaxLength(50);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Signature)
                    .HasColumnName("signature")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Vam)
                    .HasColumnName("vam")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityLoanCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Loan_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityLocalLock>(entity =>
            {
                entity.ToTable("Entity_LocalLock");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EntityTypeName).HasMaxLength(255);

                entity.Property(e => e.LockDate).HasColumnType("datetime");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<EntityMarineTransportationOfBrokeragefirms>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_MarineTransportationOfBrokeragefirms");

                entity.HasIndex(e => e.EntityNumber)
                    .HasName("IX_Entity_MarineTransportationOfBrokeragefirms1");

                entity.Property(e => e.AutoSign)
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.AutoSignerName).HasMaxLength(50);

                entity.Property(e => e.Body).HasColumnType("Editor");

                entity.Property(e => e.BranchManager).HasMaxLength(100);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Cc).HasMaxLength(4000);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Fto)
                    .HasColumnName("FTo")
                    .HasMaxLength(500);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Mobile).HasMaxLength(100);

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Signer)
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.SignerName).HasMaxLength(200);

                entity.Property(e => e.SignerRole).HasMaxLength(200);

                entity.Property(e => e.Subject).HasMaxLength(500);

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityMarineTransportationOfBrokeragefirmsCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_MarineTransportationOfBrokeragefirms_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityMedicalLeaveForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Medical_Leave_Form");

                entity.HasIndex(e => new { e.OfficerName, e.RoleName, e.DateBegin, e.DateEnd, e.LetterDate, e.EntityNumber })
                    .HasName("IX_Entity_Medical_Leave_Form1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DateBegin)
                    .HasColumnName("date_begin")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DateEnd)
                    .HasColumnName("date_end")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FbVerifyRole)
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("Letter_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.MedicalDate)
                    .HasColumnName("medical_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.MedicalNum)
                    .HasColumnName("medical_num")
                    .HasMaxLength(25);

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.Office)
                    .HasColumnName("office")
                    .HasMaxLength(75);

                entity.Property(e => e.OfficerName)
                    .HasColumnName("officer_name")
                    .HasMaxLength(75);

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Period)
                    .HasColumnName("period")
                    .HasMaxLength(5);

                entity.Property(e => e.Portion)
                    .HasColumnName("portion")
                    .HasMaxLength(75);

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.RoleName)
                    .HasColumnName("role_name")
                    .HasMaxLength(75);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Signature)
                    .HasColumnName("signature")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.Vname)
                    .HasColumnName("VName")
                    .HasMaxLength(75);
            });

            modelBuilder.Entity<EntityMedicalLeaveFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Medical_Leave_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityMetadata>(entity =>
            {
                entity.HasKey(e => e.EntityTypeCode);

                entity.ToTable("Entity_Metadata");

                entity.HasIndex(e => e.FormType)
                    .HasName("_dta_index_Entity_Metadata_7_1110085724__K29");

                entity.HasIndex(e => new { e.EntityTypeCode, e.EntityTypeName })
                    .HasName("IX_Entity_Metadata");

                entity.HasIndex(e => new { e.EntityTypeCode, e.EntityTypeName, e.IconName, e.PictureTemplateAppName, e.LanguageCode, e.EntityNumberRule, e.IsOnline, e.IsEditable, e.ViewAfterDate, e.Description, e.IsActive, e.EntityTypeFarsiName })
                    .HasName("_dta_index_Entity_Metadata_7_1110085724__K3D_1_2_4_5_16_17_18_19_20_22_23");

                entity.Property(e => e.AccessControl).HasDefaultValueSql("(N'<ACL></ACL>')");

                entity.Property(e => e.AdvancedSearchMap)
                    .IsRequired()
                    .HasDefaultValueSql("('<AS_Map></AS_Map>')");

                entity.Property(e => e.BriefCitationFields)
                    .IsRequired()
                    .HasDefaultValueSql("(N'<Fields></Fields>')");

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.DataEntryFields)
                    .IsRequired()
                    .HasDefaultValueSql("(N'<Fields></Fields>')");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.EntityAbrName).HasMaxLength(255);

                entity.Property(e => e.EntityNumberIdentity).HasDefaultValueSql("((1))");

                entity.Property(e => e.EntityNumberRule).HasMaxLength(255);

                entity.Property(e => e.EntityTitleField)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("(N'Title')");

                entity.Property(e => e.EntityTypeFarsiName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.EntityTypeName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.FieldsNames)
                    .IsRequired()
                    .HasDefaultValueSql("(N'<Fields></Fields>')");

                entity.Property(e => e.FormType).HasDefaultValueSql("((-1))");

                entity.Property(e => e.FormTypeSetting).HasDefaultValueSql("('')");

                entity.Property(e => e.FullCitationFields)
                    .IsRequired()
                    .HasDefaultValueSql("(N'<Fields></Fields>')");

                entity.Property(e => e.Htmltemplate).HasColumnName("HTMLTemplate");

                entity.Property(e => e.IconName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.IndexFields)
                    .IsRequired()
                    .HasDefaultValueSql("(N'<Fields></Fields>')");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.MultiCategoryId).HasColumnName("MultiCategoryID");

                entity.Property(e => e.PictureTemplateAppName)
                    .HasColumnName("PictureTemplateApp_Name")
                    .HasMaxLength(255);

                entity.Property(e => e.RelatedServices).HasColumnType("xml");

                entity.Property(e => e.SimpleSearchFields)
                    .IsRequired()
                    .HasDefaultValueSql("(N'<Fields></Fields>')");

                entity.Property(e => e.StepEntityNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.ViewAfterDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<EntityMissionForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_mission_form");

                entity.HasIndex(e => new { e.OfficerName, e.For, e.DocDate, e.EntityNumber })
                    .HasName("IX_Entity_mission_form1");

                entity.Property(e => e.Airplane).HasColumnName("airplane");

                entity.Property(e => e.Assistant)
                    .HasColumnName("assistant")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.AssistantSign)
                    .HasColumnName("assistant_sign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Destination)
                    .HasColumnName("destination")
                    .HasMaxLength(50);

                entity.Property(e => e.DocDate)
                    .HasColumnName("Doc_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EndDate)
                    .HasColumnName("End_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.For)
                    .HasColumnName("for")
                    .HasMaxLength(100);

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Manager)
                    .HasColumnName("manager")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.ManagerSign)
                    .HasColumnName("manager_sign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.Num1)
                    .HasColumnName("num1")
                    .HasMaxLength(50);

                entity.Property(e => e.Num2)
                    .HasColumnName("num2")
                    .HasMaxLength(50);

                entity.Property(e => e.Num3)
                    .HasColumnName("num3")
                    .HasMaxLength(50);

                entity.Property(e => e.Num4)
                    .HasColumnName("num4")
                    .HasMaxLength(50);

                entity.Property(e => e.Num5)
                    .HasColumnName("num5")
                    .HasMaxLength(50);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OfficalVehicle).HasColumnName("offical_vehicle");

                entity.Property(e => e.OfficerName)
                    .HasColumnName("officer_name")
                    .HasMaxLength(50);

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReturnDate)
                    .HasColumnName("return_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.StartDate)
                    .HasColumnName("Start_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Taxi).HasColumnName("taxi");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityMissionFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_mission_form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityMissionVerification>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_MissionVerification");

                entity.HasIndex(e => new { e.FormDate, e.FullName, e.HeadOfficeName, e.MissionSubject, e.FromTheDate1, e.Untill1, e.Destination1, e.StatementNumber, e.AutoInsert, e.EntityNumber, e.ExportEntityNumber, e.ExportDate })
                    .HasName("IX_Entity_MissionVerification1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DeputyName).HasColumnType("PointerRelatedField");

                entity.Property(e => e.DeputySign)
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Destination1).HasColumnType("PointerRelatedField");

                entity.Property(e => e.Destination2).HasColumnType("PointerRelatedField");

                entity.Property(e => e.Destination3).HasColumnType("PointerRelatedField");

                entity.Property(e => e.Destination4).HasColumnType("PointerRelatedField");

                entity.Property(e => e.Destination5).HasColumnType("PointerRelatedField");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FinCode1).HasMaxLength(10);

                entity.Property(e => e.FinCode2).HasMaxLength(10);

                entity.Property(e => e.FinCode3).HasMaxLength(10);

                entity.Property(e => e.FinCode4).HasMaxLength(10);

                entity.Property(e => e.FinCode5).HasMaxLength(10);

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.FnameLname1)
                    .HasColumnName("FNameLName1")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.FnameLname2)
                    .HasColumnName("FNameLName2")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.FnameLname3)
                    .HasColumnName("FNameLName3")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.FnameLname4)
                    .HasColumnName("FNameLName4")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.FnameLname5)
                    .HasColumnName("FNameLName5")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.FormDate).HasColumnType("smalldatetime");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FromTheDate1).HasColumnType("smalldatetime");

                entity.Property(e => e.FromTheDate2).HasColumnType("smalldatetime");

                entity.Property(e => e.FromTheDate3).HasColumnType("smalldatetime");

                entity.Property(e => e.FromTheDate4).HasColumnType("smalldatetime");

                entity.Property(e => e.FromTheDate5).HasColumnType("smalldatetime");

                entity.Property(e => e.FullName).HasColumnType("PointerRelatedField");

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.HeadOfficeName).HasMaxLength(255);

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.MissionReport).HasColumnType("Editor");

                entity.Property(e => e.MissionSubject).HasMaxLength(255);

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.StatementDate).HasColumnType("smalldatetime");

                entity.Property(e => e.StatementNumber).HasMaxLength(50);

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Transport).HasColumnType("PointerRelatedField");

                entity.Property(e => e.Untill1).HasColumnType("smalldatetime");

                entity.Property(e => e.Untill2).HasColumnType("smalldatetime");

                entity.Property(e => e.Untill3).HasColumnType("smalldatetime");

                entity.Property(e => e.Untill4).HasColumnType("smalldatetime");

                entity.Property(e => e.Untill5).HasColumnType("smalldatetime");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityMissionVerificationCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_MissionVerification_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityNewMissionForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_New_Mission_Form");

                entity.HasIndex(e => new { e.AgentName, e.LetterDate, e.EntityNumber })
                    .HasName("IX_Entity_New_Mission_Form1");

                entity.Property(e => e.AgentName)
                    .HasColumnName("Agent_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.ContractType)
                    .HasColumnName("contract_type")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Destination)
                    .HasColumnName("destination")
                    .HasMaxLength(50);

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("letter_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.PersonalId)
                    .HasColumnName("Personal_ID")
                    .HasColumnType("nchar(4)");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.Reson)
                    .HasColumnName("reson")
                    .HasMaxLength(500);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Signature)
                    .HasColumnName("signature")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Sugg)
                    .HasColumnName("sugg")
                    .HasMaxLength(200);

                entity.Property(e => e.Text).HasColumnType("Editor");

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityNewsForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_news_form");

                entity.HasIndex(e => new { e.NameReporter, e.NewsTitle, e.EntityNumber })
                    .HasName("IX_Entity_news_form1");

                entity.Property(e => e.AssistanceScope)
                    .HasColumnName("assistance_scope")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Boss)
                    .HasColumnName("boss")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExpertOpinion)
                    .HasColumnName("expert_opinion")
                    .HasMaxLength(500);

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.ImportanceReason)
                    .HasColumnName("importance_reason")
                    .HasMaxLength(250);

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("letter_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Manager)
                    .HasColumnName("manager")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.NameReporter)
                    .HasColumnName("name_reporter")
                    .HasMaxLength(100);

                entity.Property(e => e.NewsDetails)
                    .HasColumnName("news_details")
                    .HasMaxLength(2000);

                entity.Property(e => e.NewsTitle)
                    .HasColumnName("news_title")
                    .HasColumnType("nchar(100)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OfficeScope)
                    .HasColumnName("office_scope")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.RelationshipBoss)
                    .HasColumnName("relationship_boss")
                    .HasMaxLength(400);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TelNo)
                    .HasColumnName("tel_no")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityNewsGeneral>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_News_General");

                entity.HasIndex(e => e.Title)
                    .HasName("IX_Entity_News_General1");

                entity.Property(e => e.AttachmentfileFive)
                    .HasColumnName("attachmentfileFive")
                    .HasColumnType("FILE")
                    .HasMaxLength(4000);

                entity.Property(e => e.AttachmentfileFour)
                    .HasColumnName("attachmentfileFour")
                    .HasColumnType("FILE")
                    .HasMaxLength(4000);

                entity.Property(e => e.AttachmentfileOne)
                    .HasColumnName("attachmentfileOne")
                    .HasColumnType("FILE")
                    .HasMaxLength(4000);

                entity.Property(e => e.AttachmentfileSeven)
                    .HasColumnName("attachmentfileSeven")
                    .HasColumnType("FILE")
                    .HasMaxLength(4000);

                entity.Property(e => e.AttachmentfileSix)
                    .HasColumnName("attachmentfileSix")
                    .HasColumnType("FILE")
                    .HasMaxLength(4000);

                entity.Property(e => e.AttachmentfileThree)
                    .HasColumnName("attachmentfileThree")
                    .HasColumnType("FILE")
                    .HasMaxLength(4000);

                entity.Property(e => e.AttachmentfileTwo)
                    .HasColumnName("attachmentfileTwo")
                    .HasColumnType("FILE")
                    .HasMaxLength(4000);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Date).HasColumnType("smalldatetime");

                entity.Property(e => e.Detail).HasColumnType("Editor");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("(1)");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsPreNote).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsPrivateSearch).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsSigned).HasDefaultValueSql("(0)");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("(1)");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("(0)");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.Subject)
                    .HasColumnName("subject")
                    .HasMaxLength(50);

                entity.Property(e => e.Title).HasMaxLength(4000);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityNewsGeneralCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_News_General_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("(1)");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<EntityOcupationRequest>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Ocupation_Request");

                entity.HasIndex(e => new { e.OfficerName, e.EntityNumber })
                    .HasName("IX_Entity_Ocupation_Request1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Confimed)
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Contract).HasColumnName("contract");

                entity.Property(e => e.ContractType)
                    .HasColumnName("Contract_Type")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Date)
                    .HasColumnName("date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.Employe).HasColumnName("employe");

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FeffortSign)
                    .HasColumnName("FEffortSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.ForPresentation)
                    .HasColumnName("for_presentation")
                    .HasMaxLength(100);

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FverifySign)
                    .HasColumnName("FVerifySign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.MonthlySalary).HasColumnName("Monthly_Salary");

                entity.Property(e => e.NationalCode)
                    .HasColumnName("National_code")
                    .HasColumnType("nchar(10)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OfAction)
                    .HasColumnName("Of_Action")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.OfficerName)
                    .HasColumnName("officer_name")
                    .HasMaxLength(50);

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.Salary)
                    .HasColumnName("salary")
                    .HasMaxLength(40);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.Worker).HasColumnName("worker");

                entity.Property(e => e.Working).HasColumnName("working");
            });

            modelBuilder.Entity<EntityOcupationRequestCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Ocupation_Request_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityOutLetterDoc1>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_OutLetterDoc1");

                entity.HasIndex(e => new { e.EntityNumber, e.ImportMethod, e.ImportDesc, e.ExportEntityNumber, e.ExportDate, e.ExportMethod, e.ExportDesc, e.DocKeywords, e.ExportPriority, e.CreationDate })
                    .HasName("IX_Entity_OutLetterDoc11");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.F1).HasMaxLength(50);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.FlowHistory).HasColumnType("Editor");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("(1)");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsPreNote).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsPrivateSearch).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsSigned).HasDefaultValueSql("(0)");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("(1)");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("(0)");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityOutLetterDoc1Copies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_OutLetterDoc1_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("(1)");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<EntityOutLetterDoc2>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_OutLetterDoc2");

                entity.HasIndex(e => new { e.EntityNumber, e.ImportMethod, e.ImportDesc, e.ExportEntityNumber, e.ExportDate, e.ExportMethod, e.ExportDesc, e.DocKeywords, e.ExportPriority, e.CreationDate })
                    .HasName("IX_Entity_OutLetterDoc21");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.F1).HasMaxLength(50);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.FlowHistory).HasColumnType("Editor");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("(1)");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsPreNote).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsPrivateSearch).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsSigned).HasDefaultValueSql("(0)");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("(1)");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("(0)");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityOutLetterDoc2Copies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_OutLetterDoc2_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("(1)");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<EntityPaymentForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Payment_Form");

                entity.HasIndex(e => new { e.Month, e.Year, e.AssistantName, e.FeforrtRole, e.EntityNumber })
                    .HasName("IX_Entity_Payment_Form1");

                entity.Property(e => e.AccountNumber)
                    .HasColumnName("Account_Number")
                    .HasMaxLength(20);

                entity.Property(e => e.AccountingBossSign)
                    .HasColumnName("Accounting_Boss_Sign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Activity).HasColumnType("ntext");

                entity.Property(e => e.AssistantName)
                    .HasColumnName("Assistant_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.AssistantSign)
                    .HasColumnName("Assistant_Sign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.BankName)
                    .HasColumnName("Bank_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.BossSign)
                    .HasColumnName("Boss_Sign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.ConfirmAccountingBoss)
                    .HasColumnName("Confirm_Accounting_Boss")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.ConfirmFinanceBoss)
                    .HasColumnName("Confirm_Finance_Boss")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.ConfirmMoavenat)
                    .HasColumnName("Confirm_Moavenat")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.ConfirmTopManager)
                    .HasColumnName("Confirm_Top_Manager")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.ConfrimFinanceMoavenat)
                    .HasColumnName("Confrim_Finance_Moavenat")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.ContractNumber)
                    .HasColumnName("Contract_Number")
                    .HasMaxLength(10);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FinanceBossSign)
                    .HasColumnName("Finance_Boss_Sign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FinanceMoavenatSign)
                    .HasColumnName("Finance_Moavenat_Sign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDoc)
                    .HasColumnName("Letter_Doc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.MoavebatSign)
                    .HasColumnName("Moavebat_Sign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Moavenat).HasMaxLength(35);

                entity.Property(e => e.Month).HasMaxLength(8);

                entity.Property(e => e.NnationalCode)
                    .HasColumnName("Nnational_Code")
                    .HasMaxLength(10);

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.RelatedBoss)
                    .HasColumnName("Related_Boss")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.TopManagerSign)
                    .HasColumnName("Top_Manager_Sign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityPaymentFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Payment_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityPeriodicReviewChecklistServerForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Periodic_review_checklist_Server_Form");

                entity.HasIndex(e => new { e.LetterDate, e.EntityNumber })
                    .HasName("IX_Entity_Periodic_review_checklist_Server_Form1");

                entity.Property(e => e.BossInformatic)
                    .HasColumnName("Boss_Informatic")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CompanyDes)
                    .HasColumnName("Company_des")
                    .HasColumnType("ntext");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("Letter_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Nazer)
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.NetAdmin)
                    .HasColumnName("Net_Admin")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.NetAdminDes)
                    .HasColumnName("NetAdmin_des")
                    .HasColumnType("ntext");

                entity.Property(e => e.NetExpertDes)
                    .HasColumnName("NetExpert_des")
                    .HasColumnType("ntext");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.PeriodRow1)
                    .HasColumnName("Period_Row1")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.PeriodRow2)
                    .HasColumnName("Period_Row2")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.PeriodRow3)
                    .HasColumnName("Period_Row3")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.PeriodRow4)
                    .HasColumnName("Period_Row4")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.PeriodRow5)
                    .HasColumnName("Period_Row5")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.PeriodRow6)
                    .HasColumnName("Period_Row6")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.PeriodRow7)
                    .HasColumnName("Period_Row7")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.Row1Item1).HasColumnName("Row1_Item1");

                entity.Property(e => e.Row1Item2).HasColumnName("Row1_Item2");

                entity.Property(e => e.Row1Item3).HasColumnName("Row1_Item3");

                entity.Property(e => e.Row1Item4).HasColumnName("Row1_Item4");

                entity.Property(e => e.Row2Item1).HasColumnName("Row2_Item1");

                entity.Property(e => e.Row2Item2).HasColumnName("Row2_Item2");

                entity.Property(e => e.Row2Item3).HasColumnName("Row2_Item3");

                entity.Property(e => e.Row2Item4).HasColumnName("Row2_Item4");

                entity.Property(e => e.Row3Item1).HasColumnName("Row3_Item1");

                entity.Property(e => e.Row3Item2).HasColumnName("Row3_Item2");

                entity.Property(e => e.Row4Item1).HasColumnName("Row4_Item1");

                entity.Property(e => e.Row4Item2).HasColumnName("Row4_Item2");

                entity.Property(e => e.Row4Item3).HasColumnName("Row4_Item3");

                entity.Property(e => e.Row7Item1).HasColumnName("Row7_Item1");

                entity.Property(e => e.Row7Item2).HasColumnName("Row7_Item2");

                entity.Property(e => e.Row7Item3).HasColumnName("Row7_Item3");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SupervisorDes)
                    .HasColumnName("Supervisor_des")
                    .HasColumnType("ntext");

                entity.Property(e => e.Title).HasMaxLength(70);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.VisitorRow1)
                    .HasColumnName("Visitor_Row1")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.VisitorRow2)
                    .HasColumnName("Visitor_Row2")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.VisitorRow3)
                    .HasColumnName("Visitor_Row3")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.VisitorRow4)
                    .HasColumnName("Visitor_Row4")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.VisitorRow5)
                    .HasColumnName("Visitor_Row5")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.VisitorRow6)
                    .HasColumnName("Visitor_Row6")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.VisitorRow7)
                    .HasColumnName("Visitor_Row7")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);
            });

            modelBuilder.Entity<EntityPeriodicReviewChecklistServerFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Periodic_review_checklist_Server_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityPermissionRequestForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Permission_request_Form");

                entity.HasIndex(e => new { e.Name, e.Reason, e.EntityNumber })
                    .HasName("IX_Entity_Permission_request_Form1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.ConAutomation).HasColumnName("Con_Automation");

                entity.Property(e => e.ConNetwork).HasColumnName("Con_network");

                entity.Property(e => e.ConSoftware)
                    .HasColumnName("Con_Software")
                    .HasMaxLength(50);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DateRequest)
                    .HasColumnName("Date_request")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FatherName)
                    .HasColumnName("Father_Name")
                    .HasColumnType("nchar(15)");

                entity.Property(e => e.FeffortSign)
                    .HasColumnName("FEffortSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FromWhere)
                    .HasColumnName("From_where")
                    .HasMaxLength(30);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.HerasatSign)
                    .HasColumnName("Herasat_Sign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.IdNumber)
                    .HasColumnName("ID_Number")
                    .HasColumnType("nchar(10)");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDoc)
                    .HasColumnName("Letter_Doc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Name).HasColumnType("nchar(25)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.OtherReason)
                    .HasColumnName("Other_Reason")
                    .HasColumnType("ntext");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.Reason).HasMaxLength(50);

                entity.Property(e => e.RoleName)
                    .HasColumnName("Role_Name")
                    .HasMaxLength(40);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Software).HasColumnType("nchar(50)");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityPermissionRequestFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Permission_request_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityPriorityList>(entity =>
            {
                entity.ToTable("Entity_PriorityList");

                entity.Property(e => e.Id).HasColumnName("ID");
            });

            modelBuilder.Entity<EntityPurchaseHardwareEquipmentForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Purchase_Hardware_equipment_Form");

                entity.HasIndex(e => new { e.DeviceName, e.LettetDoc, e.EntityNumber })
                    .HasName("IX_Entity_Purchase_Hardware_equipment_Form1");

                entity.Property(e => e.ApplicationType)
                    .HasColumnName("Application_type")
                    .HasMaxLength(50);

                entity.Property(e => e.AttachBuy).HasColumnName("Attach_Buy");

                entity.Property(e => e.AttachTechnical).HasColumnName("Attach_Technical");

                entity.Property(e => e.AttachTender).HasColumnName("Attach_Tender");

                entity.Property(e => e.Budget).HasMaxLength(50);

                entity.Property(e => e.BusinessLarge).HasColumnName("Business_Large");

                entity.Property(e => e.BusinessMedium).HasColumnName("Business_Medium");

                entity.Property(e => e.BusinessSmall).HasColumnName("Business_small");

                entity.Property(e => e.CapabilityDevice)
                    .HasColumnName("Capability_Device")
                    .HasColumnType("ntext");

                entity.Property(e => e.Cast).HasMaxLength(50);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DependenceDes)
                    .HasColumnName("Dependence_Des")
                    .HasColumnType("ntext");

                entity.Property(e => e.DependenceNo).HasColumnName("Dependence_No");

                entity.Property(e => e.DependenceYes).HasColumnName("Dependence_yes");

                entity.Property(e => e.DeviceName)
                    .HasColumnName("Device_name")
                    .HasMaxLength(50);

                entity.Property(e => e.DeviceTotal)
                    .HasColumnName("Device_Total")
                    .HasMaxLength(50);

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FbVerifyRole)
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FberifySign)
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FutureExpectationYes).HasColumnName("Future_expectation_yes");

                entity.Property(e => e.FutureExpectationsDes)
                    .HasColumnName("Future_expectations_Des")
                    .HasColumnType("ntext");

                entity.Property(e => e.FutureExpectationsNo).HasColumnName("Future_expectations_No");

                entity.Property(e => e.FverifySign)
                    .HasColumnName("FVerifySign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.Group).HasMaxLength(50);

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.ImprovementEffect)
                    .HasColumnName("Improvement_Effect")
                    .HasColumnType("ntext");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LettetDoc)
                    .HasColumnName("Lettet_Doc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SpecializationDes)
                    .HasColumnName("specialization_Des")
                    .HasColumnType("ntext");

                entity.Property(e => e.SpecializationNo).HasColumnName("specialization_No");

                entity.Property(e => e.SpecializationYes).HasColumnName("specialization_yes");

                entity.Property(e => e.SpecificitySecurity)
                    .HasColumnName("Specificity_Security")
                    .HasColumnType("ntext");

                entity.Property(e => e.StatusDescription)
                    .HasColumnName("Status_Description")
                    .HasColumnType("ntext");

                entity.Property(e => e.TechnicalSpecifications)
                    .HasColumnName("Technical Specifications")
                    .HasColumnType("ntext");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityPurchaseHardwareEquipmentFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Purchase_Hardware_equipment_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityRecoupmentAccountForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Recoupment_Account_Form");

                entity.HasIndex(e => new { e.SocialSecurity, e.Company, e.LetterDate, e.EntityNumber })
                    .HasName("IX_Entity_Recoupment_Account_Form1");

                entity.Property(e => e.Agreement)
                    .HasColumnName("agreement")
                    .HasMaxLength(20);

                entity.Property(e => e.Amount)
                    .HasColumnName("amount")
                    .HasMaxLength(15);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Company).HasMaxLength(50);

                entity.Property(e => e.Copy).HasColumnType("ntext");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EndDate)
                    .HasColumnName("End_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FeffortSign)
                    .HasColumnName("FEffortSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FverifyRole)
                    .HasColumnName("FVerifyRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.GrossAmount)
                    .HasColumnName("Gross_Amount")
                    .HasMaxLength(15);

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("Letter_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SocialSecurity)
                    .HasColumnName("Social_Security")
                    .HasMaxLength(50);

                entity.Property(e => e.StartDate)
                    .HasColumnName("Start_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityRecoupmentAccountFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Recoupment_Account_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityRecycle>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_recycle");

                entity.HasIndex(e => new { e.Moavenat, e.RequestExpert, e.EntityNumber })
                    .HasName("IX_Entity_recycle1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.Edare)
                    .HasColumnName("edare")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.ElecElectronicy).HasColumnName("elec_electronicy");

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.Fdate)
                    .HasColumnName("fdate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.HseExpert)
                    .HasColumnName("hse_expert")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.Lastdate1)
                    .HasColumnName("lastdate1")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Lastdate2)
                    .HasColumnName("lastdate2")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Moavenat)
                    .HasColumnName("moavenat")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Pasmand)
                    .HasColumnName("pasmand")
                    .HasMaxLength(50);

                entity.Property(e => e.Poss)
                    .HasColumnName("poss")
                    .HasMaxLength(50);

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.RecElec).HasColumnName("rec_elec");

                entity.Property(e => e.RegisterDate)
                    .HasColumnName("register_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Request)
                    .HasColumnName("request")
                    .HasMaxLength(500);

                entity.Property(e => e.RequestExpert)
                    .HasColumnName("request_expert")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Sharhekhadamat)
                    .HasColumnName("sharhekhadamat")
                    .HasMaxLength(500);

                entity.Property(e => e.SignHse)
                    .HasColumnName("sign_hse")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.SignReqexpert)
                    .HasColumnName("sign_reqexpert")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.Weight1)
                    .HasColumnName("weight1")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Weight2)
                    .HasColumnName("weight2")
                    .HasColumnType("nchar(50)");
            });

            modelBuilder.Entity<EntityRecycleCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_recycle_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityRegistry>(entity =>
            {
                entity.HasKey(e => e.RegistryCode);

                entity.ToTable("Entity_Registry");

                entity.HasIndex(e => new { e.RegistryCode, e.EntityTypeCode, e.EntityCode, e.EntityTypeName })
                    .HasName("IX_Entity_Registry");

                entity.Property(e => e.Deleted).HasDefaultValueSql("(0)");

                entity.Property(e => e.EntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000);

                entity.Property(e => e.EntityTitle).HasMaxLength(1024);

                entity.Property(e => e.EntityTypeName).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000);
            });

            modelBuilder.Entity<EntityRequestCarRentalForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Request_Car_Rental_Form");

                entity.HasIndex(e => new { e.Officer1, e.EntityNumber })
                    .HasName("IX_Entity_Request_Car_Rental_Form1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.ConfirmDistance)
                    .HasColumnName("Confirm_Distance")
                    .HasColumnType("nchar(5)");

                entity.Property(e => e.ConfirmTime)
                    .HasColumnName("Confirm_Time")
                    .HasColumnType("nchar(5)");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Destination).HasMaxLength(50);

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FeffortSign)
                    .HasColumnName("FEffortSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.For).HasMaxLength(50);

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FromDate)
                    .HasColumnName("From_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FverifyRole)
                    .HasColumnName("FVerifyRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FverifySign)
                    .HasColumnName("FVerifySign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDoc)
                    .HasColumnName("Letter_doc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.Officer1).HasMaxLength(50);

                entity.Property(e => e.Officer2).HasMaxLength(50);

                entity.Property(e => e.Officer3).HasMaxLength(50);

                entity.Property(e => e.Officer4).HasMaxLength(50);

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.PeriodTime)
                    .HasColumnName("Period_time")
                    .HasColumnType("nchar(5)");

                entity.Property(e => e.PhoneNumber).HasColumnType("nchar(11)");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Time).HasColumnType("nchar(5)");

                entity.Property(e => e.ToDate)
                    .HasColumnName("To_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityRequestCarRentalFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Request_Car_Rental_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityRequestForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Request_Form");

                entity.HasIndex(e => new { e.ProcessRequest, e.NameRequest, e.NameAssistant, e.Date, e.Tittle, e.EntityNumber })
                    .HasName("IX_Entity_Request_Form1");

                entity.Property(e => e.Behbod)
                    .HasColumnName("behbod")
                    .HasMaxLength(50);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Date)
                    .HasColumnName("date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.Eslah).HasColumnName("eslah");

                entity.Property(e => e.Explanation)
                    .HasColumnName("explanation")
                    .HasColumnType("Editor");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.File)
                    .HasColumnName("file")
                    .HasColumnType("FILE")
                    .HasMaxLength(4000);

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.MangEnvironment).HasColumnName("mang_environment");

                entity.Property(e => e.MangQuality).HasColumnName("mang_quality");

                entity.Property(e => e.MangeSafety).HasColumnName("mange_safety");

                entity.Property(e => e.NameAssistant)
                    .HasColumnName("name_assistant")
                    .HasMaxLength(50);

                entity.Property(e => e.NameRequest)
                    .HasColumnName("Name_Request")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.No).HasColumnName("no");

                entity.Property(e => e.No1).HasColumnName("no1");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.Num1)
                    .HasColumnName("num1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Num2)
                    .HasColumnName("num2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Num3)
                    .HasColumnName("num3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Num4)
                    .HasColumnName("num4")
                    .HasColumnType("ntext");

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OpinionAssistant)
                    .HasColumnName("opinion_assistant")
                    .HasColumnType("ntext");

                entity.Property(e => e.OpinionManager)
                    .HasColumnName("opinion_manager")
                    .HasColumnType("ntext");

                entity.Property(e => e.OpinionSupporter)
                    .HasColumnName("opinion_supporter")
                    .HasColumnType("ntext");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Paigiri1)
                    .HasColumnName("paigiri1")
                    .HasMaxLength(50);

                entity.Property(e => e.Paigiri2)
                    .HasColumnName("paigiri2")
                    .HasMaxLength(50);

                entity.Property(e => e.Paigiri3)
                    .HasColumnName("paigiri3")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Paigiri4)
                    .HasColumnName("paigiri4")
                    .HasColumnType("PersonnelPicture")
                    .HasMaxLength(4000);

                entity.Property(e => e.Peak1)
                    .HasColumnName("peak1")
                    .HasMaxLength(50);

                entity.Property(e => e.Peak2)
                    .HasColumnName("peak2")
                    .HasMaxLength(50);

                entity.Property(e => e.Peak3)
                    .HasColumnName("peak3")
                    .HasMaxLength(50);

                entity.Property(e => e.Peak4)
                    .HasColumnName("peak4")
                    .HasMaxLength(50);

                entity.Property(e => e.Pishgiri).HasColumnName("pishgiri");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Process)
                    .HasColumnName("process")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessRequest)
                    .HasColumnName("process request")
                    .HasMaxLength(50);

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.Reason).HasColumnType("ntext");

                entity.Property(e => e.ReasonMoghayerat)
                    .HasColumnName("reason_moghayerat")
                    .HasColumnType("ntext");

                entity.Property(e => e.RuleSupporter)
                    .HasColumnName("rule_supporter")
                    .HasColumnType("ntext");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SendProcess).HasColumnName("send_process");

                entity.Property(e => e.Test)
                    .HasColumnName("test")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Test1)
                    .HasColumnName("test1")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.Test2)
                    .HasColumnName("test2")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.Tittle).HasMaxLength(170);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.Yes).HasColumnName("yes");

                entity.Property(e => e.Yes1).HasColumnName("yes1");
            });

            modelBuilder.Entity<EntityRequestForm1>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Request_Form_1");

                entity.HasIndex(e => new { e.ProcessRequest, e.Tittle, e.NameRequest, e.NameAssistant, e.Date, e.EntityNumber })
                    .HasName("IX_Entity_Request_Form_11");

                entity.Property(e => e.Behbod).HasColumnName("behbod");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Date).HasColumnType("smalldatetime");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.Eslah).HasColumnName("eslah");

                entity.Property(e => e.Explanation)
                    .HasColumnName("explanation")
                    .HasColumnType("ntext");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.MangEnvironment).HasColumnName("mang_environment");

                entity.Property(e => e.MangQuality).HasColumnName("mang_quality");

                entity.Property(e => e.MangeSafety).HasColumnName("mange_safety");

                entity.Property(e => e.NameAssistant)
                    .HasColumnName("name_assistant")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.NameRequest)
                    .HasColumnName("Name_Request")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.Num1)
                    .HasColumnName("num1")
                    .HasColumnType("ntext");

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OpinionAssistant)
                    .HasColumnName("opinion_assistant")
                    .HasColumnType("ntext");

                entity.Property(e => e.OpinionManager)
                    .HasColumnName("opinion_manager")
                    .HasColumnType("ntext");

                entity.Property(e => e.OpinionSupporter)
                    .HasColumnName("opinion_supporter")
                    .HasColumnType("ntext");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Peak1)
                    .HasColumnName("peak1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Pishgiri).HasColumnName("pishgiri");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Process)
                    .HasColumnName("process")
                    .HasMaxLength(50);

                entity.Property(e => e.ProcessRequest)
                    .HasColumnName("process_request")
                    .HasMaxLength(50);

                entity.Property(e => e.Pursuit1)
                    .HasColumnName("pursuit1")
                    .HasColumnType("ntext");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.Reason).HasColumnType("ntext");

                entity.Property(e => e.ReasonMoghayerat)
                    .HasColumnName("reason_moghayerat")
                    .HasColumnType("ntext");

                entity.Property(e => e.RuleSupporter)
                    .HasColumnName("rule_supporter")
                    .HasColumnType("ntext");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SendProcess).HasColumnName("send_process");

                entity.Property(e => e.Tittle).HasMaxLength(65);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.Yes).HasColumnName("yes");
            });

            modelBuilder.Entity<EntityRequestForm1Copies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Request_Form_1_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityRequestFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Request_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityRestruntRequestForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Restrunt_Request_Form");

                entity.HasIndex(e => new { e.StartDate, e.EndDate, e.LetterDate, e.EntityNumber })
                    .HasName("IX_Entity_Restrunt_Request_Form1");

                entity.Property(e => e.Breakfast).HasColumnName("breakfast");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EmployeeName1)
                    .HasColumnName("Employee_name1")
                    .HasColumnType("ntext");

                entity.Property(e => e.EmployeeName2)
                    .HasColumnName("Employee_name2")
                    .HasColumnType("ntext");

                entity.Property(e => e.EmployeeName3)
                    .HasColumnName("Employee_name3")
                    .HasColumnType("ntext");

                entity.Property(e => e.EmployeeName4)
                    .HasColumnName("Employee_name4")
                    .HasColumnType("ntext");

                entity.Property(e => e.EmployeeName5)
                    .HasColumnName("Employee_name5")
                    .HasColumnType("ntext");

                entity.Property(e => e.EndDate)
                    .HasColumnName("End_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FeffortSign)
                    .HasColumnName("FEffortSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FverifyRole)
                    .HasColumnName("FVerifyRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FverifySign)
                    .HasColumnName("FVerifySign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.HeadOffice)
                    .HasColumnName("Head_Office")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.HeadSign)
                    .HasColumnName("Head_Sign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.Issue)
                    .HasColumnName("issue")
                    .HasMaxLength(50);

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("Letter_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Misdate)
                    .HasColumnName("misdate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Misnumber)
                    .HasColumnName("misnumber")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.Office).HasColumnType("ntext");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.Reason).HasMaxLength(65);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.StartDate)
                    .HasColumnName("Start_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityRestruntRequestFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Restrunt_Request_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityReturntoyard>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_returntoyard");

                entity.HasIndex(e => new { e.Delivery, e.EntityNumber })
                    .HasName("IX_Entity_returntoyard1");

                entity.Property(e => e.Aminamval)
                    .HasColumnName("aminamval")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Date)
                    .HasColumnName("date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Delivery)
                    .HasColumnName("delivery")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.Fdate)
                    .HasColumnName("fdate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.Keeper)
                    .HasColumnName("keeper")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Part)
                    .HasColumnName("part")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SignatureAmin)
                    .HasColumnName("signature_amin")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.SignatureKeeper)
                    .HasColumnName("signature_keeper")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Table)
                    .HasColumnName("table")
                    .HasColumnType("Editor");

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityReturntoyardCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_returntoyard_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityRevokeAccessForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Revoke_Access_Form");

                entity.HasIndex(e => new { e.OfficerName, e.OfficeOrganization, e.ChangeType, e.EntityNumber })
                    .HasName("IX_Entity_Revoke_Access_Form1");

                entity.Property(e => e.AdminUser).HasColumnName("Admin_User");

                entity.Property(e => e.BossInformatics)
                    .HasColumnName("Boss_Informatics")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.ChangeType)
                    .HasColumnName("Change_Type")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Discription).HasColumnType("ntext");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EmployeHardware)
                    .HasColumnName("Employe_Hardware")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.EmployeIsms)
                    .HasColumnName("Employe_ISMS")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.EmployeSoftware)
                    .HasColumnName("Employe_Software")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.GcomsSystem).HasColumnName("Gcoms_system");

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImasSystem).HasColumnName("Imas_System");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.InteranetMngUser).HasColumnName("Interanet_Mng_User");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDoc)
                    .HasColumnName("Letter_Doc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NamadSystem).HasColumnName("Namad_System");

                entity.Property(e => e.NetProfile).HasColumnName("Net_Profile");

                entity.Property(e => e.NetworkAdmin)
                    .HasColumnName("Network_Admin")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OfficeOrganization)
                    .HasColumnName("Office_organization")
                    .HasMaxLength(50);

                entity.Property(e => e.OfficerName)
                    .HasColumnName("Officer_name")
                    .HasMaxLength(50);

                entity.Property(e => e.OrganizationalEmail).HasColumnName("Organizational_email");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.OtherDoc)
                    .HasColumnName("Other_Doc")
                    .HasColumnType("ntext");

                entity.Property(e => e.OtherHardware)
                    .HasColumnName("Other_Hardware")
                    .HasColumnType("ntext");

                entity.Property(e => e.OtherSoftware)
                    .HasColumnName("Other_Software")
                    .HasColumnType("ntext");

                entity.Property(e => e.PersonalComputer).HasColumnName("Personal_Computer");

                entity.Property(e => e.PortClearance).HasColumnName("Port_Clearance");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SoftwareDoc).HasColumnName("Software_Doc");

                entity.Property(e => e.StatusReport).HasColumnName("Status_report");

                entity.Property(e => e.SuggestionSystem).HasColumnName("Suggestion_system");

                entity.Property(e => e.TechnicalDoc).HasColumnName("Technical_Doc");

                entity.Property(e => e.UsersHelp).HasColumnName("Users_Help");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.WebsiteUser).HasColumnName("website_user");
            });

            modelBuilder.Entity<EntityRevokeAccessFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Revoke_Access_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntitySam>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_sam");

                entity.HasIndex(e => e.EntityNumber)
                    .HasName("IX_Entity_sam1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Contractor)
                    .HasColumnName("contractor")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DateReq)
                    .HasColumnName("date_req")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Gaz).HasColumnName("gaz");

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.Hse)
                    .HasColumnName("hse")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.HseDetail)
                    .HasColumnName("hse_detail")
                    .HasMaxLength(50);

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("letter_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.M1)
                    .HasColumnName("m1")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.M2)
                    .HasColumnName("m2")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.M3)
                    .HasColumnName("m3")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.M4)
                    .HasColumnName("m4")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.Moavenat)
                    .HasColumnName("moavenat")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.Officce)
                    .HasColumnName("officce")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Position)
                    .HasColumnName("position")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReqDetail)
                    .HasColumnName("req_detail")
                    .HasMaxLength(50);

                entity.Property(e => e.Sampashi).HasColumnName("sampashi");

                entity.Property(e => e.Sampashiarea).HasColumnName("sampashiarea");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Tomegozari).HasColumnName("tomegozari");

                entity.Property(e => e.User)
                    .HasColumnName("user")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntitySecurityIncidentForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Security_Incident_Form");

                entity.HasIndex(e => new { e.IncidentTittle, e.SecIncidentDate, e.EntityNumber })
                    .HasName("IX_Entity_Security_Incident_Form1");

                entity.Property(e => e.AssetName)
                    .HasColumnName("Asset_name")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.AssetType)
                    .HasColumnName("Asset_type")
                    .HasColumnType("PointerRelatedField");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DesActicity)
                    .HasColumnName("Des_Acticity")
                    .HasColumnType("ntext");

                entity.Property(e => e.DescriptionInc)
                    .HasColumnName("Description_Inc")
                    .HasColumnType("ntext");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EmergencyEvent).HasColumnName("emergency_event");

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FbVerifyRole)
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FberifySign)
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FverifySign)
                    .HasColumnName("FVerifySign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.ImportantEvet).HasColumnName("Important_evet");

                entity.Property(e => e.IncidentTittle)
                    .HasColumnName("Incident_Tittle")
                    .HasMaxLength(300);

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("Letter_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReasonInc)
                    .HasColumnName("Reason_Inc")
                    .HasColumnType("ntext");

                entity.Property(e => e.SecIncidentDate)
                    .HasColumnName("Sec_Incident_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SecurityEvent).HasColumnName("Security_event");

                entity.Property(e => e.SecurityFoible).HasColumnName("Security_foible");

                entity.Property(e => e.SecurityIncident).HasColumnName("Security_Incident");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Threat)
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.UsualEvent).HasColumnName("Usual_event");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.Vulnerabilitie)
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);
            });

            modelBuilder.Entity<EntitySecurityIncidentFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Security_Incident_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntitySessionForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Session_Form");

                entity.HasIndex(e => new { e.Numberofsession, e.Dateofsession, e.Location, e.EntityNumber })
                    .HasName("IX_Entity_Session_Form1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Dateofsession)
                    .HasColumnName("dateofsession")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.Hamkar1)
                    .HasColumnName("hamkar1")
                    .HasMaxLength(50);

                entity.Property(e => e.Hamkar2)
                    .HasColumnName("hamkar2")
                    .HasMaxLength(50);

                entity.Property(e => e.Hamkari3)
                    .HasColumnName("hamkari3")
                    .HasMaxLength(50);

                entity.Property(e => e.Hamkari4)
                    .HasColumnName("hamkari4")
                    .HasMaxLength(50);

                entity.Property(e => e.Hamkari5)
                    .HasColumnName("hamkari5")
                    .HasMaxLength(50);

                entity.Property(e => e.Hamkari6)
                    .HasColumnName("hamkari6")
                    .HasMaxLength(50);

                entity.Property(e => e.Hamkari7)
                    .HasColumnName("hamkari7")
                    .HasMaxLength(50);

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("Letter_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Location)
                    .HasColumnName("location")
                    .HasMaxLength(50);

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Madovin)
                    .HasColumnName("madovin")
                    .HasColumnType("ntext");

                entity.Property(e => e.Mosavabat).HasColumnType("Editor");

                entity.Property(e => e.Mosavabe1)
                    .HasColumnName("mosavabe1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Mosavabe2)
                    .HasColumnName("mosavabe2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Mosavabe3)
                    .HasColumnName("mosavabe3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Mosavabe4)
                    .HasColumnName("mosavabe4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Mosavabe5)
                    .HasColumnName("mosavabe5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Mosavabe6)
                    .HasColumnName("mosavabe6")
                    .HasColumnType("ntext");

                entity.Property(e => e.Mosavabe7)
                    .HasColumnName("mosavabe7")
                    .HasColumnType("ntext");

                entity.Property(e => e.Motavali1)
                    .HasColumnName("motavali1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Motavali2)
                    .HasColumnName("motavali2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Motavali3)
                    .HasColumnName("motavali3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Motavali4)
                    .HasColumnName("motavali4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Motavali5)
                    .HasColumnName("motavali5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Motavali6)
                    .HasColumnName("motavali6")
                    .HasColumnType("ntext");

                entity.Property(e => e.Motavali7)
                    .HasColumnName("motavali7")
                    .HasColumnType("ntext");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.Numberofsession)
                    .HasColumnName("numberofsession")
                    .HasMaxLength(50);

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Pagenumber).HasColumnName("pagenumber");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Sign1)
                    .HasColumnName("sign1")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Sign2)
                    .HasColumnName("sign2")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Sign3)
                    .HasColumnName("sign3")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Sign4)
                    .HasColumnName("sign4")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Sign5)
                    .HasColumnName("sign5")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Subjects).HasColumnType("Editor");

                entity.Property(e => e.Time1)
                    .HasColumnName("time1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Time2)
                    .HasColumnName("time2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Time3)
                    .HasColumnName("time3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Time4)
                    .HasColumnName("time4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Time5)
                    .HasColumnName("time5")
                    .HasColumnType("ntext");

                entity.Property(e => e.Time6)
                    .HasColumnName("time6")
                    .HasColumnType("ntext");

                entity.Property(e => e.Time7)
                    .HasColumnName("time7")
                    .HasColumnType("ntext");

                entity.Property(e => e.Title1)
                    .HasColumnName("title1")
                    .HasColumnType("ntext");

                entity.Property(e => e.Title2)
                    .HasColumnName("title2")
                    .HasColumnType("ntext");

                entity.Property(e => e.Title3)
                    .HasColumnName("title3")
                    .HasColumnType("ntext");

                entity.Property(e => e.Title4)
                    .HasColumnName("title4")
                    .HasColumnType("ntext");

                entity.Property(e => e.Title5)
                    .HasColumnName("title5")
                    .HasColumnType("ntext");

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntitySessionFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Session_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityShora>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_shora");

                entity.HasIndex(e => new { e.Code, e.EntityNumber })
                    .HasName("IX_Entity_shora1");

                entity.Property(e => e.Archive)
                    .HasColumnName("archive")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Code)
                    .HasColumnName("code")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.Eblagh)
                    .HasColumnName("eblagh")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.Etc)
                    .HasColumnName("etc")
                    .HasMaxLength(500);

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.Fdate)
                    .HasColumnName("FDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FverifyRole)
                    .HasColumnName("FVerifyRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.Khahan)
                    .HasColumnName("khahan")
                    .HasMaxLength(50);

                entity.Property(e => e.Khande)
                    .HasColumnName("khande")
                    .HasMaxLength(50);

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityShoraCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_shora_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityStates>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_States");

                entity.HasIndex(e => e.F2)
                    .HasName("IX_Entity_States1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.F1)
                    .HasColumnName("f1")
                    .HasMaxLength(50);

                entity.Property(e => e.F2)
                    .HasColumnName("f2")
                    .HasMaxLength(50);

                entity.Property(e => e.F3).HasColumnName("f3");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(255);

                entity.Property(e => e.Grade).HasDefaultValueSql("(1)");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("(1)");

                entity.Property(e => e.IsPreNote).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsPrivateSearch).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsSigned).HasDefaultValueSql("(0)");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLock).HasDefaultValueSql("(0)");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Locked).HasDefaultValueSql("(0)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(255);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("(1)");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("(0)");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.To).HasMaxLength(255);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityStockTransfer>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Stock_transfer");

                entity.HasIndex(e => new { e.FormDate, e.Applicant, e.OfficeBoss, e.EntityNumber })
                    .HasName("IX_Entity_Stock_transfer1");

                entity.Property(e => e.Applicant)
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DeputyHead)
                    .HasColumnName("deputy_head")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.FormDate).HasColumnType("smalldatetime");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OfficeBoss)
                    .HasColumnName("office_boss")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.RequestTable)
                    .HasColumnName("request_table")
                    .HasColumnType("Editor");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SematMoaven)
                    .HasColumnName("semat_moaven")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityStockTransferCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Stock_transfer_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntitySubport>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_subport");

                entity.HasIndex(e => e.EntityNumber)
                    .HasName("IX_Entity_subport1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FverifyRole)
                    .HasColumnName("FVerifyRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("letter_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Modat)
                    .HasColumnName("modat")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.No1)
                    .HasColumnName("no1")
                    .HasMaxLength(500);

                entity.Property(e => e.No2)
                    .HasColumnName("no2")
                    .HasMaxLength(500);

                entity.Property(e => e.No3)
                    .HasColumnName("no3")
                    .HasMaxLength(500);

                entity.Property(e => e.No4)
                    .HasColumnName("no4")
                    .HasMaxLength(500);

                entity.Property(e => e.No5)
                    .HasColumnName("no5")
                    .HasMaxLength(500);

                entity.Property(e => e.No6)
                    .HasColumnName("no6")
                    .HasMaxLength(500);

                entity.Property(e => e.No7)
                    .HasColumnName("no7")
                    .HasMaxLength(500);

                entity.Property(e => e.No8)
                    .HasColumnName("no8")
                    .HasMaxLength(500);

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.Number)
                    .HasColumnName("number")
                    .HasMaxLength(50);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Signature)
                    .HasColumnName("signature")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.ToCompany)
                    .HasColumnName("to_company")
                    .HasMaxLength(50);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntitySubportCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_subport_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntitySupplies>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_supplies");

                entity.HasIndex(e => new { e.Request, e.EntityNumber })
                    .HasName("IX_Entity_supplies1");

                entity.Property(e => e.Boss)
                    .HasColumnName("boss")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Date).HasColumnType("smalldatetime");

                entity.Property(e => e.Deputy)
                    .HasColumnName("deputy")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.GoodsDiscription)
                    .HasColumnName("Goods_Discription")
                    .HasColumnType("Editor");

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.MamorKharid)
                    .HasColumnName("mamor_kharid")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.MasoleTadarokat)
                    .HasColumnName("masole_tadarokat")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.MoavenSemat)
                    .HasColumnName("moaven_semat")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.Request)
                    .HasColumnName("request")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntitySuppliesCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_supplies_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityTajhizat>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_tajhizat");

                entity.HasIndex(e => new { e.Darkhastkonandeh, e.Namedastgah, e.Namesystem, e.Tarikh, e.Shomerehdastoorkar, e.EntityNumber })
                    .HasName("IX_Entity_tajhizat1");

                entity.Property(e => e.Addi).HasColumnName("addi");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Darkhastkonandeh)
                    .HasColumnName("darkhastkonandeh")
                    .HasMaxLength(256);

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.Emzabahrebardar)
                    .HasColumnName("emzabahrebardar")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Emzakarshenasbahrebardar)
                    .HasColumnName("emzakarshenasbahrebardar")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Emzakarshenasnezarat)
                    .HasColumnName("emzakarshenasnezarat")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.Ezterari).HasColumnName("ezterari");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Ghemat1)
                    .HasColumnName("ghemat1")
                    .HasMaxLength(50);

                entity.Property(e => e.Ghemat2)
                    .HasColumnName("ghemat2")
                    .HasMaxLength(50);

                entity.Property(e => e.Ghemat3)
                    .HasColumnName("ghemat3")
                    .HasMaxLength(50);

                entity.Property(e => e.Ghete1)
                    .HasColumnName("ghete1")
                    .HasMaxLength(512);

                entity.Property(e => e.Ghete2)
                    .HasColumnName("ghete2")
                    .HasMaxLength(512);

                entity.Property(e => e.Ghete3)
                    .HasColumnName("ghete3")
                    .HasMaxLength(512);

                entity.Property(e => e.Ghete42)
                    .HasColumnName("ghete42")
                    .HasMaxLength(512);

                entity.Property(e => e.Gheymat4)
                    .HasColumnName("gheymat4")
                    .HasMaxLength(50);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Makanesteghrar)
                    .HasColumnName("makanesteghrar")
                    .HasMaxLength(256);

                entity.Property(e => e.Mohlat)
                    .HasColumnName("mohlat")
                    .HasMaxLength(50);

                entity.Property(e => e.Nafarsaat1)
                    .HasColumnName("nafarsaat1")
                    .HasMaxLength(50);

                entity.Property(e => e.Nafarsaat2)
                    .HasColumnName("nafarsaat2")
                    .HasMaxLength(50);

                entity.Property(e => e.Nafarsaat3)
                    .HasColumnName("nafarsaat3")
                    .HasMaxLength(50);

                entity.Property(e => e.Nafarsaat4)
                    .HasColumnName("nafarsaat4")
                    .HasMaxLength(50);

                entity.Property(e => e.Namebahrabardar)
                    .HasColumnName("namebahrabardar")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Namebahrebardar)
                    .HasColumnName("namebahrebardar")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Namedastgah)
                    .HasColumnName("namedastgah")
                    .HasMaxLength(256);

                entity.Property(e => e.Namekarshenasnezarat)
                    .HasColumnName("namekarshenasnezarat")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Namesystem)
                    .HasColumnName("namesystem")
                    .HasMaxLength(256);

                entity.Property(e => e.Nametamirkar1)
                    .HasColumnName("nametamirkar1")
                    .HasMaxLength(256);

                entity.Property(e => e.Nametamirkar2)
                    .HasColumnName("nametamirkar2")
                    .HasMaxLength(256);

                entity.Property(e => e.Nametamirkar3)
                    .HasColumnName("nametamirkar3")
                    .HasMaxLength(256);

                entity.Property(e => e.Nametamirkar4)
                    .HasColumnName("nametamirkar4")
                    .HasMaxLength(256);

                entity.Property(e => e.Nazaekarshenas)
                    .HasColumnName("nazaekarshenas")
                    .HasColumnType("ntext");

                entity.Property(e => e.Nazarbahrebardar)
                    .HasColumnName("nazarbahrebardar")
                    .HasColumnType("ntext");

                entity.Property(e => e.Nazarkarshenasnezarat)
                    .HasColumnName("nazarkarshenasnezarat")
                    .HasColumnType("ntext");

                entity.Property(e => e.Noekhadamat)
                    .HasColumnName("noekhadamat")
                    .HasMaxLength(512);

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Peymankar)
                    .HasColumnName("peymankar")
                    .HasMaxLength(50);

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Sharhekar)
                    .HasColumnName("sharhekar")
                    .HasColumnType("ntext");

                entity.Property(e => e.Sharhemokhtasar)
                    .HasColumnName("sharhemokhtasar")
                    .HasColumnType("ntext");

                entity.Property(e => e.Shomerehdastoorkar)
                    .HasColumnName("shomerehdastoorkar")
                    .HasMaxLength(50);

                entity.Property(e => e.Tarikh)
                    .HasColumnName("tarikh")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Tedad1)
                    .HasColumnName("tedad1")
                    .HasMaxLength(50);

                entity.Property(e => e.Tedad2)
                    .HasColumnName("tedad2")
                    .HasMaxLength(50);

                entity.Property(e => e.Tedad3)
                    .HasColumnName("tedad3")
                    .HasMaxLength(50);

                entity.Property(e => e.Tedad4)
                    .HasColumnName("tedad4")
                    .HasMaxLength(50);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.Zamanenjam)
                    .HasColumnName("zamanenjam")
                    .HasMaxLength(512);
            });

            modelBuilder.Entity<EntityTajhizatCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_tajhizat_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityTamdidTaghlil>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_tamdid_taghlil");

                entity.HasIndex(e => new { e.Fsubject, e.Date1, e.Company1, e.EntityNumber })
                    .HasName("IX_Entity_tamdid_taghlil1");

                entity.Property(e => e.AzCount).HasColumnName("az_count");

                entity.Property(e => e.BeCount).HasColumnName("be_count");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Company)
                    .HasColumnName("company")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Company1)
                    .HasColumnName("company1")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Date1).HasColumnType("smalldatetime");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.Done).HasColumnType("nchar(50)");

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FeffortSign)
                    .HasColumnName("FEffortSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Fsubject).HasMaxLength(100);

                entity.Property(e => e.Fto)
                    .HasColumnName("FTo")
                    .HasMaxLength(100);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDoc)
                    .HasColumnName("Letter_Doc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Modat).HasColumnType("nchar(15)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.Number).HasColumnType("nchar(50)");

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityTamdidTaghlilCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_tamdid_taghlil_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityTaxForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Tax_Form");

                entity.HasIndex(e => new { e.Department, e.Company, e.EntityNumber })
                    .HasName("IX_Entity_Tax_Form1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Company).HasMaxLength(50);

                entity.Property(e => e.Copy).HasColumnType("ntext");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Date).HasColumnType("smalldatetime");

                entity.Property(e => e.Department).HasMaxLength(30);

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FeffortSign)
                    .HasColumnName("FEffortSign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FverifyRole)
                    .HasColumnName("FVerifyRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDate)
                    .HasColumnName("Letter_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LetterNum)
                    .HasColumnName("Letter_Num")
                    .HasMaxLength(10);

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.Yaer).HasMaxLength(4);
            });

            modelBuilder.Entity<EntityTaxFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Tax_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityTeste>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Teste");

                entity.HasIndex(e => e.EntityNumber)
                    .HasName("IX_EntityNumber");

                entity.HasIndex(e => e.FirstEntityCode)
                    .HasName("IX_FirstEntityCode");

                entity.HasIndex(e => new { e.IsPreNote, e.CreatorRoleId })
                    .HasName("IX_IsPreNote_CreatorRoleID");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityTesteCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Teste_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityToolbar>(entity =>
            {
                entity.HasKey(e => e.ToolbarId);

                entity.ToTable("Entity_Toolbar");

                entity.Property(e => e.ToolbarId).HasColumnName("ToolbarID");

                entity.Property(e => e.CartableUpdateMode).HasColumnName("Cartable_UpdateMode");

                entity.Property(e => e.CartableUpdateModeTheme)
                    .HasColumnName("Cartable_UpdateMode_Theme")
                    .HasMaxLength(500);

                entity.Property(e => e.CartableViewMode).HasColumnName("Cartable_ViewMode");

                entity.Property(e => e.CartableViewModeTheme)
                    .HasColumnName("Cartable_ViewMode_Theme")
                    .HasMaxLength(500);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.LastUpdate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.OtherUpdateMode).HasColumnName("Other_UpdateMode");

                entity.Property(e => e.OtherUpdateModeTheme)
                    .HasColumnName("Other_UpdateMode_Theme")
                    .HasMaxLength(500);

                entity.Property(e => e.OtherViewMode).HasColumnName("Other_ViewMode");

                entity.Property(e => e.OtherViewModeTheme)
                    .HasColumnName("Other_ViewMode_Theme")
                    .HasMaxLength(500);

                entity.Property(e => e.SpecialCartableUpdateMode).HasColumnName("SpecialCartable_UpdateMode");

                entity.Property(e => e.SpecialCartableUpdateModeTheme).HasColumnName("SpecialCartable_UpdateMode_Theme");

                entity.Property(e => e.SpecialCartableViewMode).HasColumnName("SpecialCartable_ViewMode");

                entity.Property(e => e.SpecialCartableViewModeTheme).HasColumnName("SpecialCartable_ViewMode_Theme");
            });

            modelBuilder.Entity<EntityToolbarRelServicesAndWorkflows>(entity =>
            {
                entity.ToTable("Entity_Toolbar_Rel_ServicesAndWorkflows");

                entity.HasIndex(e => e.ServiceId)
                    .HasName("IX_Entity_Toolbar_Service_Workflows");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ServiceId).HasColumnName("ServiceID");

                entity.Property(e => e.WorkflowId).HasColumnName("WorkflowID");
            });

            modelBuilder.Entity<EntityToolbarServices>(entity =>
            {
                entity.HasKey(e => e.ServiceId);

                entity.ToTable("Entity_Toolbar_Services");

                entity.HasIndex(e => new { e.EntityTypeCode, e.ToolbarType, e.EnServiceName })
                    .HasName("IX_Entity_Toolbar_Services");

                entity.Property(e => e.ServiceId).HasColumnName("ServiceID");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CreatorRoleId).HasColumnName("CreatorRoleID");

                entity.Property(e => e.EnServiceName)
                    .HasColumnName("en_ServiceName")
                    .HasMaxLength(150);

                entity.Property(e => e.FnServiceName)
                    .HasColumnName("fn_ServiceName")
                    .HasMaxLength(150);

                entity.Property(e => e.ProcessType).HasMaxLength(150);

                entity.Property(e => e.ToolbarType).HasMaxLength(100);

                entity.Property(e => e.ViewName).HasMaxLength(500);
            });

            modelBuilder.Entity<EntityToolbarTemplate>(entity =>
            {
                entity.HasKey(e => e.TemplateId);

                entity.ToTable("Entity_Toolbar_Template");

                entity.Property(e => e.TemplateId).HasColumnName("TemplateID");

                entity.Property(e => e.CartableUpdateMode)
                    .IsRequired()
                    .HasColumnName("Cartable_UpdateMode");

                entity.Property(e => e.CartableUpdateModeTheme)
                    .HasColumnName("Cartable_UpdateMode_Theme")
                    .HasMaxLength(500);

                entity.Property(e => e.CartableViewMode)
                    .IsRequired()
                    .HasColumnName("Cartable_ViewMode");

                entity.Property(e => e.CartableViewModeTheme)
                    .HasColumnName("Cartable_ViewMode_Theme")
                    .HasMaxLength(500);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.OtherUpdateMode)
                    .IsRequired()
                    .HasColumnName("Other_UpdateMode");

                entity.Property(e => e.OtherUpdateModeTheme)
                    .HasColumnName("Other_UpdateMode_Theme")
                    .HasMaxLength(500);

                entity.Property(e => e.OtherViewMode)
                    .IsRequired()
                    .HasColumnName("Other_ViewMode");

                entity.Property(e => e.OtherViewModeTheme)
                    .HasColumnName("Other_ViewMode_Theme")
                    .HasMaxLength(500);

                entity.Property(e => e.SpecialCartableUpdateMode).HasColumnName("SpecialCartable_UpdateMode");

                entity.Property(e => e.SpecialCartableUpdateModeTheme).HasColumnName("SpecialCartable_UpdateMode_Theme");

                entity.Property(e => e.SpecialCartableViewMode).HasColumnName("SpecialCartable_ViewMode");

                entity.Property(e => e.SpecialCartableViewModeTheme).HasColumnName("SpecialCartable_ViewMode_Theme");

                entity.Property(e => e.TemplateName).HasMaxLength(500);
            });

            modelBuilder.Entity<EntityTruckform>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_truckform");

                entity.HasIndex(e => new { e.LetterDoc, e.Company, e.EntityNumber })
                    .HasName("IX_Entity_truckform1");

                entity.Property(e => e.Beaz)
                    .HasColumnName("beaz")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Company)
                    .HasColumnName("company")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Forwhat)
                    .HasColumnName("forwhat")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Goods)
                    .HasColumnName("goods")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LetterDoc)
                    .HasColumnName("letter_doc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Mojavezno)
                    .HasColumnName("mojavezno")
                    .HasMaxLength(70);

                entity.Property(e => e.Mr)
                    .HasColumnName("mr")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.Number)
                    .HasColumnName("number")
                    .HasColumnType("nchar(20)");

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Parvaneh).HasMaxLength(70);

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Totime)
                    .HasColumnName("totime")
                    .HasColumnType("Time");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityTruckformCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_truckform_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityVacationDoc>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Vacation_Doc");

                entity.HasIndex(e => new { e.HVacation, e.FeforrtRole, e.MDate, e.Name, e.Vname, e.EntityNumber })
                    .HasName("IX_Entity_Vacation_Doc1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DDate)
                    .HasColumnName("D_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EDate)
                    .HasColumnName("E_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FbVerifyRole)
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FverifySign)
                    .HasColumnName("FVerifySign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.HVacation)
                    .HasColumnName("H_Vacation")
                    .HasMaxLength(20);

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.KVacation).HasColumnName("K_Vacation");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.MDate)
                    .HasColumnName("M_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.NAccept).HasColumnName("N_Accept");

                entity.Property(e => e.Name).HasMaxLength(50);

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.Reason).HasColumnType("ntext");

                entity.Property(e => e.RoleName)
                    .HasColumnName("role_name")
                    .HasColumnType("ntext");

                entity.Property(e => e.RollId)
                    .HasColumnName("Roll_id")
                    .HasMaxLength(20);

                entity.Property(e => e.SDate)
                    .HasColumnName("S_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Sing)
                    .HasColumnName("sing")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.TDate)
                    .HasColumnName("T_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.Vname)
                    .HasColumnName("VName")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<EntityVacationDocCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Vacation_Doc_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityVacationDocOld>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Vacation_Doc_Old");

                entity.HasIndex(e => new { e.HVacation, e.FeforrtRole, e.MDate, e.Name, e.EntityNumber })
                    .HasName("IX_Entity_Vacation_Doc1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DDate)
                    .HasColumnName("D_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EDate)
                    .HasColumnName("E_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FbVerifyRole)
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FeforrtRole)
                    .HasColumnName("FEforrtRole")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FverifySign)
                    .HasColumnName("FVerifySign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.HVacation)
                    .HasColumnName("H_Vacation")
                    .HasMaxLength(20);

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.KVacation).HasColumnName("K_Vacation");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.MDate)
                    .HasColumnName("M_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.NAccept).HasColumnName("N_Accept");

                entity.Property(e => e.Name).HasMaxLength(50);

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.Reason).HasColumnType("ntext");

                entity.Property(e => e.RoleName)
                    .HasColumnName("role_name")
                    .HasColumnType("ntext");

                entity.Property(e => e.RollId)
                    .HasColumnName("Roll_id")
                    .HasMaxLength(20);

                entity.Property(e => e.SDate)
                    .HasColumnName("S_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Sing)
                    .HasColumnName("sing")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.TDate)
                    .HasColumnName("T_date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.VName)
                    .HasColumnName("v name")
                    .HasColumnType("ntext");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityView>(entity =>
            {
                entity.HasKey(e => e.ViewCode);

                entity.ToTable("Entity_View");

                entity.HasIndex(e => new { e.ViewCode, e.EntityTypeCode, e.FieldName })
                    .HasName("IX_Entity_View");

                entity.Property(e => e.FieldName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PropertiesXml).HasColumnName("PropertiesXML");

                entity.Property(e => e.StyleXml)
                    .HasColumnName("StyleXML")
                    .IsUnicode(false);

                entity.Property(e => e.ValueOrLabel).HasColumnName("Value_OR_Label");

                entity.Property(e => e.ViewName).HasMaxLength(100);

                entity.HasOne(d => d.EntityTypeCodeNavigation)
                    .WithMany(p => p.EntityView)
                    .HasForeignKey(d => d.EntityTypeCode)
                    .HasConstraintName("FK_Entity_View_Entity_Metadata");
            });

            modelBuilder.Entity<EntityVulnerabilitiesIsmsForm>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Vulnerabilities_ISMS_Form");

                entity.HasIndex(e => new { e.FormId, e.VulCode, e.EntityNumber })
                    .HasName("IX_Entity_Vulnerabilities_ISMS_Form1");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.FormId)
                    .HasColumnName("Form_ID")
                    .HasMaxLength(50);

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.VulCode)
                    .HasColumnName("Vul_Code")
                    .HasMaxLength(50);

                entity.Property(e => e.VulDiscription)
                    .HasColumnName("Vul_Discription")
                    .HasMaxLength(300);
            });

            modelBuilder.Entity<EntityVulnerabilitiesIsmsFormCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Vulnerabilities_ISMS_Form_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityWarehouseDraftFrom>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_Warehouse_Draft_from");

                entity.HasIndex(e => new { e.RequestSubject, e.DemandedFor, e.DarkhastKonandeh, e.EntityNumber })
                    .HasName("IX_Entity_Warehouse_Draft_from1");

                entity.Property(e => e.BuyGoods).HasColumnName("Buy_Goods");

                entity.Property(e => e.BuyService).HasColumnName("Buy_Service");

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CostRecordDate)
                    .HasColumnName("Cost_Record_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.DarkhastKonandeh)
                    .HasColumnName("darkhast_konandeh")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.DemandedFor)
                    .HasColumnName("Demanded_FOR")
                    .HasMaxLength(75);

                entity.Property(e => e.DeputyName)
                    .HasColumnName("Deputy_Name")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.DeputySignature)
                    .HasColumnName("Deputy_Signature")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.Er)
                    .HasColumnName("er")
                    .HasColumnType("Editor");

                entity.Property(e => e.Er1)
                    .HasColumnName("er1")
                    .HasColumnType("Editor");

                entity.Property(e => e.EstimatedPriceRecordDate)
                    .HasColumnName("Estimated_Price_Record_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.EtebaratExpert)
                    .HasColumnName("Etebarat_Expert")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.EtebaratSigniture)
                    .HasColumnName("Etebarat_Signiture")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.FinanceManager)
                    .HasColumnName("Finance_Manager")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.FinanceManagerSigniture)
                    .HasColumnName("Finance_Manager_Signiture")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FromDate)
                    .HasColumnName("From_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FromDescription)
                    .HasColumnName("From_Description")
                    .HasColumnType("ntext");

                entity.Property(e => e.GoodsDelivery).HasColumnName("Goods_Delivery");

                entity.Property(e => e.GoodsDescription)
                    .HasColumnName("Goods_Description")
                    .HasColumnType("Editor");

                entity.Property(e => e.GoodsReceiptDate)
                    .HasColumnName("Goods_Receipt_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.GoodsReceiptDateSection)
                    .HasColumnName("GoodsReceiptDate_Section")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.GoodsReceiptKarpardaz)
                    .HasColumnName("GoodsReceipt_Karpardaz")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.GoodsReceiptNumber)
                    .HasColumnName("Goods_Receipt_Number")
                    .HasMaxLength(10);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.Karpardaz)
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OfficeManager)
                    .HasColumnName("Office_Manager")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.OfficeSignature)
                    .HasColumnName("Office_Signature")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.PaymentPermision).HasColumnName("Payment_Permision");

                entity.Property(e => e.PriceEstimated).HasColumnName("Price_Estimated");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.RecognizePermision).HasColumnName("Recognize_Permision");

                entity.Property(e => e.RequestSubject)
                    .HasColumnName("Request_Subject")
                    .HasMaxLength(75);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ServiceConfirm).HasColumnName("Service_Confirm");

                entity.Property(e => e.TadarikatBossCostRecord)
                    .HasColumnName("Tadarikat_Boss_CostRecord")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.TadarikatBossSignitureCostRecord)
                    .HasColumnName("TadarikatBoss_Signiture_CostRecord")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.TadarokatBoss)
                    .HasColumnName("Tadarokat_Boss")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.TadarokatExpert)
                    .HasColumnName("Tadarokat_Expert")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.TadarokatExpertCostRecord)
                    .HasColumnName("TadarokatExpert_CostRecord")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.TopManagement)
                    .HasColumnName("Top_Management")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.TopManagementSigniture)
                    .HasColumnName("Top_Management_Signiture")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");
            });

            modelBuilder.Entity<EntityWarehouseDraftFromCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_Warehouse_Draft_from_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<EntityWaterRequest>(entity =>
            {
                entity.HasKey(e => e.EntityCode);

                entity.ToTable("Entity_water_request");

                entity.HasIndex(e => new { e.Fdate, e.Darnazar, e.EntityNumber })
                    .HasName("IX_Entity_water_request1");

                entity.Property(e => e.Abgiri).HasColumnName("abgiri");

                entity.Property(e => e.Abgiricontair)
                    .HasColumnName("abgiricontair")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Bossrequest)
                    .HasColumnName("bossrequest")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.CategoryCode)
                    .HasColumnType("CategoryCode")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.CreatorId)
                    .HasColumnName("CreatorID")
                    .HasColumnType("CreatorCode");

                entity.Property(e => e.CreatorRoleId)
                    .HasColumnName("CreatorRoleID")
                    .HasColumnType("CreatorRoleCode");

                entity.Property(e => e.Darnazar)
                    .HasColumnName("darnazar")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocType).HasMaxLength(150);

                entity.Property(e => e.Endcontarirno)
                    .HasColumnName("endcontarirno")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Endtime)
                    .HasColumnName("endtime")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.Expert)
                    .HasColumnName("expert")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.Expertsign)
                    .HasColumnName("expertsign")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(255);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.Fdate)
                    .HasColumnName("fdate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FieldsStatus)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('<Fields></Fields>')");

                entity.Property(e => e.Firecar).HasColumnName("firecar");

                entity.Property(e => e.FirstEntityCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.Grade).HasDefaultValueSql("((1))");

                entity.Property(e => e.Harigh).HasColumnName("harigh");

                entity.Property(e => e.High).HasColumnName("high");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000)
                    .HasDefaultValueSql(@"create default [Empty] as ''
");

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(255);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsConfirm).HasDefaultValueSql("((1))");

                entity.Property(e => e.Khodroatash).HasColumnName("khodroatash");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql(@"CREATE DEFAULT [CurrentDate] AS GETDATE()
");

                entity.Property(e => e.LastSignatureDate).HasColumnType("datetime");

                entity.Property(e => e.LocalLockRoleId)
                    .HasColumnName("LocalLockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LocalLockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockRoleId)
                    .HasColumnName("LockRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LockUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Low).HasColumnName("low");

                entity.Property(e => e.Manazelsazemani).HasColumnName("manazelsazemani");

                entity.Property(e => e.Metremokab)
                    .HasColumnName("metremokab")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Midd).HasColumnName("midd");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(1024);

                entity.Property(e => e.NumberOfCopies).HasDefaultValueSql("((1))");

                entity.Property(e => e.OriginalVersionCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Priority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RaitingHits).HasDefaultValueSql("((0))");

                entity.Property(e => e.Repairboss)
                    .HasColumnName("repairboss")
                    .HasColumnType("TextRelatedField")
                    .HasMaxLength(4000);

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Signrepair)
                    .HasColumnName("signrepair")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Signrequst)
                    .HasColumnName("signrequst")
                    .HasColumnType("Signature")
                    .HasMaxLength(4000);

                entity.Property(e => e.Starttime)
                    .HasColumnName("starttime")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.Tahvildahande)
                    .HasColumnName("tahvildahande")
                    .HasColumnType("nchar(50)");

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.Version)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('1.0')");

                entity.Property(e => e.Watercar).HasColumnName("watercar");
            });

            modelBuilder.Entity<EntityWaterRequestCopies>(entity =>
            {
                entity.HasKey(e => e.CopyCode);

                entity.ToTable("Entity_water_request_Copies");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CopyNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatorCode).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<FarzinCitizenFollowUpCategory>(entity =>
            {
                entity.HasKey(e => e.CategoryId);

                entity.Property(e => e.CategoryName)
                    .IsRequired()
                    .HasMaxLength(1024);
            });

            modelBuilder.Entity<FarzinCitizenFollowUpCategoryDetails>(entity =>
            {
                entity.HasKey(e => e.Trackingcode);

                entity.Property(e => e.Ec).HasColumnName("EC");

                entity.Property(e => e.Etc).HasColumnName("ETC");

                entity.Property(e => e.OrganizationOfAction)
                    .IsRequired()
                    .HasColumnName("organizationOfAction")
                    .HasMaxLength(1024);

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.ServiceName)
                    .IsRequired()
                    .HasMaxLength(1024);

                entity.Property(e => e.ServiceNumber)
                    .IsRequired()
                    .HasMaxLength(1024);

                entity.Property(e => e.ServiceState).HasDefaultValueSql("((-1))");

                entity.Property(e => e.ServiceUpdate).HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UnitofAction)
                    .IsRequired()
                    .HasMaxLength(1024);

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<FarzinCitizenStateList>(entity =>
            {
                entity.HasKey(e => e.StateId);

                entity.Property(e => e.StateId).HasColumnName("StateID");

                entity.Property(e => e.StateColor).HasMaxLength(50);

                entity.Property(e => e.StateIcon).HasMaxLength(2048);

                entity.Property(e => e.StateName).HasMaxLength(1024);
            });

            modelBuilder.Entity<FarzinePayment>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BankKey).HasMaxLength(50);

                entity.Property(e => e.DeletedCode).HasColumnType("nchar(10)");

                entity.Property(e => e.DeletedDate).HasColumnType("datetime");

                entity.Property(e => e.DeletedRoleId).HasColumnName("DeletedRoleID");

                entity.Property(e => e.DeletedUserId).HasColumnName("DeletedUserID");

                entity.Property(e => e.Ec)
                    .HasColumnName("EC")
                    .HasMaxLength(255);

                entity.Property(e => e.ErrorCode).HasMaxLength(50);

                entity.Property(e => e.Etc)
                    .HasColumnName("ETC")
                    .HasMaxLength(255);

                entity.Property(e => e.FieldName).HasMaxLength(255);

                entity.Property(e => e.FllowId)
                    .HasColumnName("FllowID")
                    .HasMaxLength(50);

                entity.Property(e => e.PortKey).HasMaxLength(50);

                entity.Property(e => e.ReceivedDate).HasColumnType("datetime");

                entity.Property(e => e.SentDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<FarzinEventLogConfig>(entity =>
            {
                entity.HasKey(e => e.RecId);

                entity.Property(e => e.RecId).HasColumnName("RecID");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.EventName)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TableName)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FarzinInputsRegistry>(entity =>
            {
                entity.HasKey(e => e.FarzinInputId);

                entity.Property(e => e.FarzinInputId).HasColumnName("FarzinInput_ID");

                entity.Property(e => e.DataConstraints).HasMaxLength(1024);

                entity.Property(e => e.DataType).HasMaxLength(20);

                entity.Property(e => e.FarzinPageId).HasColumnName("FarzinPageID");

                entity.Property(e => e.Htmltype)
                    .IsRequired()
                    .HasColumnName("HTMLType")
                    .HasMaxLength(20);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasMaxLength(255);

                entity.Property(e => e.IsActiveForDataValidation).HasDefaultValueSql("((1))");

                entity.Property(e => e.Name).HasMaxLength(255);

                entity.Property(e => e.RunAt).HasMaxLength(20);
            });

            modelBuilder.Entity<FarzinModules>(entity =>
            {
                entity.HasKey(e => e.FarzinModuleId);

                entity.Property(e => e.FarzinModuleId).HasColumnName("FarzinModule_ID");

                entity.Property(e => e.FarzinModuleName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.IsActiveForDataValidation).HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<FarzinPagesRegistry>(entity =>
            {
                entity.HasKey(e => e.FarzinPageId);

                entity.Property(e => e.FarzinPageId).HasColumnName("FarzinPage_ID");

                entity.Property(e => e.FarzinSubModuleId).HasColumnName("FarzinSubModuleID");

                entity.Property(e => e.IsActiveForDataValidation).HasDefaultValueSql("((1))");

                entity.Property(e => e.PagePath)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.Severity).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<FarzinPartnerMapping>(entity =>
            {
                entity.ToTable("FarzinPartner_Mapping");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IcanId).HasDefaultValueSql("((-1))");

                entity.Property(e => e.ItemType).HasDefaultValueSql("((-1))");

                entity.Property(e => e.PartnerId).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<FarzinSubModules>(entity =>
            {
                entity.HasKey(e => e.FarzinSubModuleId);

                entity.Property(e => e.FarzinSubModuleId).HasColumnName("FarzinSubModule_ID");

                entity.Property(e => e.FarzinModuleId).HasColumnName("FarzinModuleID");

                entity.Property(e => e.FarzinSubModuleName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.IsActiveForDataValidation).HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<FarzinTables>(entity =>
            {
                entity.HasKey(e => e.TableId);

                entity.ToTable("Farzin_Tables");

                entity.Property(e => e.TableId).HasColumnName("Table_ID");

                entity.Property(e => e.IdentityFieldName).HasMaxLength(50);

                entity.Property(e => e.PrimaryKeyNames).HasMaxLength(50);

                entity.Property(e => e.RoleIdfieldName)
                    .HasColumnName("RoleIDFieldName")
                    .HasMaxLength(50);

                entity.Property(e => e.SyncType)
                    .HasColumnName("Sync_Type")
                    .HasMaxLength(50);

                entity.Property(e => e.TableName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.UserIdfieldName)
                    .HasColumnName("UserIDFieldName")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<FarzinTablesRelations>(entity =>
            {
                entity.HasKey(e => e.RelationId);

                entity.ToTable("Farzin_Tables_Relations");

                entity.Property(e => e.RelationId).HasColumnName("Relation_ID");

                entity.Property(e => e.RelatedField).HasMaxLength(50);

                entity.Property(e => e.RelatedTable).HasMaxLength(50);

                entity.Property(e => e.RelatedTableField).HasMaxLength(50);

                entity.Property(e => e.TableId).HasColumnName("TableID");
            });

            modelBuilder.Entity<FaxMngFileDependency>(entity =>
            {
                entity.HasKey(e => e.FileId);

                entity.ToTable("FaxMng_FileDependency");

                entity.Property(e => e.FileId).HasColumnName("FileID");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FaxId).HasColumnName("FaxID");

                entity.Property(e => e.FilePath).HasMaxLength(4000);

                entity.Property(e => e.FileSelected).HasDefaultValueSql("((0))");

                entity.Property(e => e.FileSelectedSuccess).HasDefaultValueSql("((0))");

                entity.Property(e => e.Message).HasMaxLength(300);

                entity.Property(e => e.Retries).HasDefaultValueSql("((0))");

                entity.Property(e => e.Status).HasDefaultValueSql("((0))");

                entity.Property(e => e.StatusDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<FaxMngImportedReceivedList>(entity =>
            {
                entity.ToTable("FaxMng_ImportedReceivedList");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");

                entity.Property(e => e.Ec).HasColumnName("EC");

                entity.Property(e => e.Etc).HasColumnName("ETC");

                entity.Property(e => e.FaxServerAddress).HasMaxLength(500);

                entity.Property(e => e.ImportEntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000);

                entity.Property(e => e.IndicatorId).HasColumnName("IndicatorID");

                entity.Property(e => e.JobId)
                    .IsRequired()
                    .HasColumnName("JobID")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<FaxMngSelectedDependency>(entity =>
            {
                entity.HasKey(e => e.SelectId);

                entity.ToTable("FaxMng_SelectedDependency");

                entity.Property(e => e.SelectId).HasColumnName("SelectID");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FileId).HasColumnName("FileID");

                entity.Property(e => e.FilePath).HasMaxLength(4000);

                entity.Property(e => e.Message).HasMaxLength(300);

                entity.Property(e => e.Retries).HasDefaultValueSql("((0))");

                entity.Property(e => e.Status).HasDefaultValueSql("((0))");

                entity.Property(e => e.StatusDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<FaxMngSendReceivers>(entity =>
            {
                entity.HasKey(e => e.FaxId);

                entity.ToTable("FaxMng_Send_Receivers");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Ec)
                    .HasColumnName("EC")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Etc)
                    .HasColumnName("ETC")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.ExtendedFaxStatus).HasDefaultValueSql("((0))");

                entity.Property(e => e.FaxNumber)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FaxPriority).HasDefaultValueSql("((0))");

                entity.Property(e => e.FaxServiceJobId)
                    .HasColumnName("FaxServiceJobID")
                    .HasMaxLength(50);

                entity.Property(e => e.FaxStatus).HasDefaultValueSql("((0))");

                entity.Property(e => e.Isdelete).HasColumnName("ISDelete");

                entity.Property(e => e.Message).HasDefaultValueSql("('')");

                entity.Property(e => e.ReadDate)
                    .HasColumnName("Read_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Retries).HasDefaultValueSql("((0))");

                entity.Property(e => e.RoleId)
                    .HasColumnName("RoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.SendReceiveDate)
                    .HasColumnName("Send_Receive_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.SenderName)
                    .HasMaxLength(500)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SenderTitle)
                    .HasMaxLength(500)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Subject)
                    .HasMaxLength(500)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UserId).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<FaxMngSends>(entity =>
            {
                entity.ToTable("FaxMng_Sends");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");

                entity.Property(e => e.Ec).HasColumnName("EC");

                entity.Property(e => e.Etc)
                    .HasColumnName("ETC")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.FaxNumber)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IndicatorId)
                    .HasColumnName("IndicatorID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.JobId)
                    .IsRequired()
                    .HasColumnName("JobID")
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.LastEditionDate).HasColumnType("datetime");

                entity.Property(e => e.LastEditorRoleId)
                    .HasColumnName("LastEditorRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LastEditorUserId)
                    .HasColumnName("LastEditorUserID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.RecipientName).HasMaxLength(500);

                entity.Property(e => e.RequestDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RequesterRoleId)
                    .HasColumnName("RequesterRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.RequesterUserId)
                    .HasColumnName("RequesterUserID")
                    .HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<FaxMngSendsArchive>(entity =>
            {
                entity.ToTable("FaxMng_SendsArchive");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");

                entity.Property(e => e.Ec).HasColumnName("EC");

                entity.Property(e => e.Etc)
                    .HasColumnName("ETC")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.FaxNumber)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IndicatorId)
                    .HasColumnName("IndicatorID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.JobId)
                    .IsRequired()
                    .HasColumnName("JobID")
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.LastEditionDate).HasColumnType("datetime");

                entity.Property(e => e.LastEditorRoleId)
                    .HasColumnName("LastEditorRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LastEditorUserId)
                    .HasColumnName("LastEditorUserID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.RecipientName).HasMaxLength(500);

                entity.Property(e => e.RequestDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RequesterRoleId)
                    .HasColumnName("RequesterRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.RequesterUserId)
                    .HasColumnName("RequesterUserID")
                    .HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<FcfAdvertisingMapping>(entity =>
            {
                entity.HasKey(e => e.AdvertisingMappingId);

                entity.ToTable("FCF_AdvertisingMapping");

                entity.Property(e => e.AdvertisingMappingId).HasColumnName("AdvertisingMappingID");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");

                entity.Property(e => e.DestinitionEventId).HasColumnName("DestinitionEventID");

                entity.Property(e => e.ErrorFlag).HasDefaultValueSql("((0))");

                entity.Property(e => e.SourceEventId).HasColumnName("SourceEventID");

                entity.Property(e => e.TechnicalErrorMessage)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ViewErrorMessage)
                    .IsRequired()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<FcfEventLogAdvertising>(entity =>
            {
                entity.HasKey(e => e.EventAdvertisingId);

                entity.ToTable("FCF_EventLog_Advertising");

                entity.Property(e => e.EventAdvertisingId).HasColumnName("EventAdvertisingID");

                entity.Property(e => e.ErrorFlag).HasDefaultValueSql("((0))");

                entity.Property(e => e.TechnicalErrorMessage)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ViewErrorMessage)
                    .IsRequired()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<FcfEventLogResponseToSends>(entity =>
            {
                entity.HasKey(e => e.EventCode);

                entity.ToTable("FCF_EventLog_ResponseToSends");

                entity.Property(e => e.ConsiderDesc)
                    .IsRequired()
                    .HasMaxLength(512);

                entity.Property(e => e.Ec).HasColumnName("EC");

                entity.Property(e => e.ErrorFlag).HasDefaultValueSql("((0))");

                entity.Property(e => e.Etc).HasColumnName("ETC");

                entity.Property(e => e.Ipaddress)
                    .IsRequired()
                    .HasColumnName("IPAddress")
                    .HasMaxLength(255);

                entity.Property(e => e.ProcessDate).HasColumnType("datetime");

                entity.Property(e => e.ReceiverRoleId).HasColumnName("ReceiverRoleID");

                entity.Property(e => e.ResponseDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ResponseDescription)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.SenderRoleId).HasColumnName("SenderRoleID");

                entity.Property(e => e.TechnicalErrorMessage)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ViewErrorMessage)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<FcfInterOrganDocHamesh>(entity =>
            {
                entity.HasKey(e => e.HameshRegCode);

                entity.ToTable("FCF_InterOrganDocHamesh");

                entity.Property(e => e.ActionDone).HasMaxLength(255);

                entity.Property(e => e.ActionName).HasMaxLength(255);

                entity.Property(e => e.Content).HasMaxLength(4000);

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.CreatorFirstName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CreatorLastName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CreatorRoleName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ReceiverFirstName)
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ReceiverLastName)
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ReceiverRoleName)
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ResponseDate).HasColumnType("datetime");

                entity.Property(e => e.SendDate).HasColumnType("datetime");

                entity.Property(e => e.SrcOrganIp)
                    .IsRequired()
                    .HasColumnName("SrcOrganIP")
                    .HasMaxLength(255);

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.Type).HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<FcfInterOrganDocRefers>(entity =>
            {
                entity.HasKey(e => e.DocRegCode);

                entity.ToTable("FCF_InterOrganDocRefers");

                entity.Property(e => e.CreationDate).HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Ecd).HasColumnName("ECd");

                entity.Property(e => e.Eco).HasColumnName("ECo");

                entity.Property(e => e.Ecs).HasColumnName("ECs");

                entity.Property(e => e.Etcd).HasColumnName("ETCd");

                entity.Property(e => e.Etco).HasColumnName("ETCo");

                entity.Property(e => e.Etcs).HasColumnName("ETCs");

                entity.Property(e => e.OriginEntityNumber).HasMaxLength(512);

                entity.Property(e => e.OriginExportEntityNumber)
                    .IsRequired()
                    .HasMaxLength(512);

                entity.Property(e => e.OriginOrganIp)
                    .IsRequired()
                    .HasColumnName("OriginOrganIP")
                    .HasMaxLength(255);

                entity.Property(e => e.SrcEntityNumber).HasMaxLength(512);

                entity.Property(e => e.SrcExportEntityNumber)
                    .IsRequired()
                    .HasMaxLength(512);

                entity.Property(e => e.SrcImportEntityNumber).HasMaxLength(512);

                entity.Property(e => e.SrcOrganIp)
                    .IsRequired()
                    .HasColumnName("SrcOrganIP")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<FcfInterOrganFileRefers>(entity =>
            {
                entity.HasKey(e => e.FileRegCode);

                entity.ToTable("FCF_InterOrganFileRefers");

                entity.Property(e => e.CreationDate).HasDefaultValueSql("(getdate())");

                entity.Property(e => e.OriginOrganIp)
                    .IsRequired()
                    .HasColumnName("OriginOrganIP")
                    .HasMaxLength(255);

                entity.Property(e => e.SrcOrganIp)
                    .IsRequired()
                    .HasColumnName("SrcOrganIP")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<FcfQueue>(entity =>
            {
                entity.HasKey(e => e.QueueCode);

                entity.ToTable("FCF_QUEUE");

                entity.Property(e => e.QueueCode).HasColumnName("Queue_Code");

                entity.Property(e => e.Ec).HasColumnName("EC");

                entity.Property(e => e.Een)
                    .IsRequired()
                    .HasColumnName("EEN")
                    .HasMaxLength(512);

                entity.Property(e => e.En)
                    .IsRequired()
                    .HasColumnName("EN")
                    .HasMaxLength(512);

                entity.Property(e => e.EntityTitle).HasMaxLength(4000);

                entity.Property(e => e.ErrorCount).HasDefaultValueSql("((0))");

                entity.Property(e => e.ErrorMessage).HasMaxLength(4000);

                entity.Property(e => e.Etc).HasColumnName("ETC");

                entity.Property(e => e.Ien)
                    .HasColumnName("IEN")
                    .HasMaxLength(512);

                entity.Property(e => e.IsFst).HasColumnName("IsFST");

                entity.Property(e => e.PackagePath)
                    .IsRequired()
                    .HasColumnName("Package_Path")
                    .HasMaxLength(4000);

                entity.Property(e => e.ProcessDate).HasColumnType("datetime");

                entity.Property(e => e.QueueEntranceDate)
                    .HasColumnName("Queue_Entrance_Date")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Receivers).IsRequired();

                entity.Property(e => e.ResponseDate).HasColumnType("datetime");

                entity.Property(e => e.SendPriority)
                    .HasColumnName("Send_Priority")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SenderRoleId).HasColumnName("Sender_RoleID");
            });

            modelBuilder.Entity<FcfSendReceivers>(entity =>
            {
                entity.HasKey(e => e.Code);

                entity.ToTable("FCF_Send_Receivers");
            });

            modelBuilder.Entity<FicLog>(entity =>
            {
                entity.HasKey(e => e.LogId);

                entity.ToTable("FIC_Log");

                entity.Property(e => e.LogId).HasColumnName("LogID");

                entity.Property(e => e.Ec).HasColumnName("EC");

                entity.Property(e => e.EntityNumber).HasMaxLength(512);

                entity.Property(e => e.Etc).HasColumnName("ETC");

                entity.Property(e => e.ExportEntityNumber).HasMaxLength(512);

                entity.Property(e => e.HameshTitle).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber).HasMaxLength(512);

                entity.Property(e => e.RoleId).HasColumnName("Role_ID");

                entity.Property(e => e.RuleId).HasColumnName("RuleID");

                entity.Property(e => e.SaveDate).HasColumnType("datetime");

                entity.Property(e => e.SendReceiversCode).HasColumnName("Send_Receivers_Code");

                entity.Property(e => e.SenderId).HasColumnName("SenderID");

                entity.Property(e => e.SenderRoleId).HasColumnName("SenderRoleID");
            });

            modelBuilder.Entity<FicRules>(entity =>
            {
                entity.HasKey(e => e.RuleId);

                entity.ToTable("FIC_Rules");

                entity.Property(e => e.RuleId).HasColumnName("RuleID");

                entity.Property(e => e.Description).HasMaxLength(1024);

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.HameshContent).HasMaxLength(4000);

                entity.Property(e => e.RoleId).HasColumnName("Role_ID");

                entity.Property(e => e.RuleName).HasMaxLength(1024);

                entity.Property(e => e.RuleXml).HasColumnName("RuleXML");

                entity.Property(e => e.SenderIds).HasColumnName("SenderIDs");

                entity.Property(e => e.SenderRoleIds).HasColumnName("SenderRoleIDs");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.UserId).HasColumnName("User_ID");
            });

            modelBuilder.Entity<FicServices>(entity =>
            {
                entity.ToTable("FIC_Services");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.RuleId).HasColumnName("RuleID");
            });

            modelBuilder.Entity<FileDependency>(entity =>
            {
                entity.HasKey(e => e.DependencyId);

                entity.ToTable("File_Dependency");

                entity.HasIndex(e => new { e.Ec, e.Etc, e.DependencyType })
                    .HasName("IX_File_Dependency_1");

                entity.HasIndex(e => new { e.DependencyId, e.Etc, e.Ec, e.DependencyType, e.UserId, e.RoleId })
                    .HasName("IX_File_Dependency");

                entity.Property(e => e.DependencyId).HasColumnName("DependencyID");

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.Description).HasMaxLength(512);

                entity.Property(e => e.Ec).HasColumnName("EC");

                entity.Property(e => e.Etc).HasColumnName("ETC");

                entity.Property(e => e.FileName)
                    .IsRequired()
                    .HasMaxLength(1024);

                entity.Property(e => e.ModifyFlag).HasDefaultValueSql("((1))");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<FollowingAgain>(entity =>
            {
                entity.HasKey(e => e.FollowingId);

                entity.HasIndex(e => new { e.FollowingId, e.SendCode, e.ReceiverRoleId })
                    .HasName("IX_FollowingAgain");

                entity.Property(e => e.FollowingId).HasColumnName("FollowingID");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FirstChangeViewStatesDate).HasColumnType("datetime");

                entity.Property(e => e.FollowingDate).HasColumnType("datetime");

                entity.Property(e => e.LastChangeViewStatesDate).HasColumnType("datetime");

                entity.Property(e => e.ReceiverRoleId).HasColumnName("ReceiverRoleID");

                entity.Property(e => e.ViewStates)
                    .IsRequired()
                    .HasColumnType("char(40)")
                    .HasDefaultValueSql("('0000000000000000000000000000000000000000')");
            });

            modelBuilder.Entity<Friends>(entity =>
            {
                entity.HasKey(e => e.FriendId);

                entity.HasIndex(e => new { e.FriendId, e.UserId })
                    .HasName("IX_Friends");

                entity.Property(e => e.FriendId).HasColumnName("Friend_ID");

                entity.Property(e => e.FriendName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.Priority).HasDefaultValueSql("((-1))");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<FriendsRoles>(entity =>
            {
                entity.HasKey(e => new { e.FriendId, e.RoleId });

                entity.ToTable("Friends_Roles");

                entity.HasIndex(e => new { e.FriendId, e.RoleId })
                    .HasName("IX_Friends_Roles");

                entity.Property(e => e.FriendId).HasColumnName("FriendID");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");
            });

            modelBuilder.Entity<GroupCategory>(entity =>
            {
                entity.HasKey(e => e.CategoryId);

                entity.HasIndex(e => e.CategoryId)
                    .HasName("IX_GroupCategory");

                entity.Property(e => e.CategoryId).HasColumnName("CategoryID");

                entity.Property(e => e.CategoryDescription).HasMaxLength(1024);

                entity.Property(e => e.CategoryName).HasMaxLength(1024);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ParentId).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RoleId).HasDefaultValueSql("((-1))");

                entity.Property(e => e.UserId).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<Groups>(entity =>
            {
                entity.HasKey(e => e.GroupId);

                entity.HasIndex(e => e.GroupId)
                    .HasName("IX_Groups");

                entity.Property(e => e.GroupId).HasColumnName("Group_ID");

                entity.Property(e => e.AllLocationAccess).HasDefaultValueSql("(1)");

                entity.Property(e => e.AllTimesAccess).HasDefaultValueSql("(1)");

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.ExpirationDate).HasColumnType("datetime");

                entity.Property(e => e.Friday).HasDefaultValueSql("(0)");

                entity.Property(e => e.GroupName)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.Monday).HasDefaultValueSql("(0)");

                entity.Property(e => e.Priority).HasDefaultValueSql("(0)");

                entity.Property(e => e.Saturday).HasDefaultValueSql("(0)");

                entity.Property(e => e.Sunday).HasDefaultValueSql("(0)");

                entity.Property(e => e.Thursday).HasDefaultValueSql("(0)");

                entity.Property(e => e.Tuesday).HasDefaultValueSql("(0)");

                entity.Property(e => e.UsedForSend).HasDefaultValueSql("(0)");

                entity.Property(e => e.Wednesday).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<GroupsLocationRestrictions>(entity =>
            {
                entity.HasKey(e => e.LocationId);

                entity.ToTable("Groups_Location_Restrictions");

                entity.HasIndex(e => new { e.LocationId, e.GroupCode })
                    .HasName("IX_Groups_Location_Restrictions");

                entity.Property(e => e.LocationId).HasColumnName("LocationID");

                entity.Property(e => e.Ip)
                    .IsRequired()
                    .HasColumnName("IP")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<GroupsRights>(entity =>
            {
                entity.HasKey(e => new { e.GroupId, e.RightId });

                entity.ToTable("Groups_Rights");

                entity.HasIndex(e => new { e.GroupId, e.RightId })
                    .HasName("IX_Groups_Rights");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.RightId).HasColumnName("RightID");

                entity.Property(e => e.AcceptXml)
                    .HasColumnName("AcceptXML")
                    .HasColumnType("ntext");

                entity.Property(e => e.IsConfirm).HasMaxLength(255);
            });

            modelBuilder.Entity<GroupsRoles>(entity =>
            {
                entity.HasKey(e => new { e.GroupId, e.RoleId });

                entity.ToTable("Groups_Roles");

                entity.HasIndex(e => new { e.GroupId, e.RoleId })
                    .HasName("IX_Groups_Roles");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");
            });

            modelBuilder.Entity<Hamesh>(entity =>
            {
                entity.HasIndex(e => new { e.HameshId, e.UserCode, e.RoleId, e.Etc, e.Ec })
                    .HasName("IX_Hamesh");

                entity.HasIndex(e => new { e.HameshId, e.Title, e.Content, e.UserCode, e.RoleId, e.Etc, e.Ec, e.CreationDate, e.Type, e.ReceiverRoleId, e.ModifyFlag, e.HiddenRoleId, e.HiddenUserId, e.IsHidden, e.ReceiverCode })
                    .HasName("_dta_index_Hamesh_7_1465198603__K10_1_2_3_4_5_6_7_8_9_11_12_13_14_15_9987");

                entity.Property(e => e.HameshId).HasColumnName("HameshID");

                entity.Property(e => e.Content).HasMaxLength(4000);

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.Ec).HasColumnName("EC");

                entity.Property(e => e.Etc).HasColumnName("ETC");

                entity.Property(e => e.HiddenRoleId)
                    .HasColumnName("HiddenRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.HiddenUserId)
                    .HasColumnName("HiddenUserID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.ModifyFlag).HasDefaultValueSql("(1)");

                entity.Property(e => e.ReceiverRoleId).HasColumnName("ReceiverRoleID");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.Type).HasDefaultValueSql("(1)");
            });

            modelBuilder.Entity<IndicatorReservation>(entity =>
            {
                entity.HasKey(e => e.ReserveId);

                entity.Property(e => e.ReserveId).HasColumnName("ReserveID");

                entity.Property(e => e.CurrentPriod).HasDefaultValueSql("(1)");

                entity.Property(e => e.EndValidDate).HasColumnType("datetime");

                entity.Property(e => e.EntityAbrName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EntityNumberRule)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EntityTypeCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.IndicatorFormula)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.IndicatorId).HasColumnName("IndicatorID");

                entity.Property(e => e.IndicatorNo).HasColumnName("IndicatorNO");

                entity.Property(e => e.IndicatorPostfix)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IndicatorPrefix)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IndicatorType)
                    .IsRequired()
                    .HasColumnType("char(20)");

                entity.Property(e => e.InnerNo)
                    .HasColumnName("InnerNO")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.ReserveDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ReserverRoleId).HasColumnName("ReserverRoleID");

                entity.Property(e => e.ReserverUserId).HasColumnName("ReserverUserID");

                entity.Property(e => e.StartValidDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<InternallegalReference>(entity =>
            {
                entity.HasKey(e => new { e.RoleId, e.LegalId, e.LegalType });

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.LegalId).HasColumnName("legalID");

                entity.Property(e => e.LegalType)
                    .HasColumnName("legalType")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<InternalReceivers>(entity =>
            {
                entity.HasKey(e => e.InternalReceiverId);

                entity.Property(e => e.InternalReceiverId).HasColumnName("InternalReceiverID");

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.CreatorRoleId).HasColumnName("CreatorRoleID");

                entity.Property(e => e.HameshTitle).HasMaxLength(255);

                entity.Property(e => e.ReceiverRoleId).HasColumnName("ReceiverRoleID");
            });

            modelBuilder.Entity<Layout>(entity =>
            {
                entity.Property(e => e.LayoutId).HasColumnName("LayoutID");

                entity.Property(e => e.ItemId).HasColumnName("ItemID");

                entity.Property(e => e.LayoutName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.LayoutPass)
                    .HasMaxLength(1024)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.LayoutPath)
                    .IsRequired()
                    .HasMaxLength(1024);
            });

            modelBuilder.Entity<LayoutJob>(entity =>
            {
                entity.HasKey(e => e.JobId);

                entity.ToTable("Layout_Job");

                entity.HasIndex(e => new { e.RoleId, e.UserId, e.JobState, e.JobType })
                    .HasName("IX_Layout_Job");

                entity.Property(e => e.JobId).HasColumnName("JobID");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.InvalidTry).HasDefaultValueSql("((0))");

                entity.Property(e => e.ItemId).HasColumnName("ItemID");

                entity.Property(e => e.JobState).HasDefaultValueSql("((0))");

                entity.Property(e => e.LayoutId).HasColumnName("LayoutID");

                entity.Property(e => e.RoleId)
                    .HasColumnName("RoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<LegalReference>(entity =>
            {
                entity.HasKey(e => new { e.RoleId, e.LegalId, e.LegalType });

                entity.ToTable("legalReference");

                entity.HasIndex(e => e.LegalId)
                    .HasName("IX_legalReference_1");

                entity.HasIndex(e => e.LegalType)
                    .HasName("IX_legalReference_2");

                entity.HasIndex(e => e.RoleId)
                    .HasName("IX_legalReference");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.LegalId).HasColumnName("legalID");

                entity.Property(e => e.LegalType)
                    .HasColumnName("legalType")
                    .HasDefaultValueSql("(1)");
            });

            modelBuilder.Entity<LinkToOtherApplications>(entity =>
            {
                entity.HasKey(e => e.AppId);

                entity.Property(e => e.AppId).HasColumnName("AppID");

                entity.Property(e => e.AppAddress).HasMaxLength(2048);

                entity.Property(e => e.AppName).HasMaxLength(2048);

                entity.Property(e => e.AppType).HasMaxLength(50);

                entity.Property(e => e.CreationDate).HasDefaultValueSql("(getdate())");

                entity.Property(e => e.OpenType).HasMaxLength(50);

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<MsgAttachDocs>(entity =>
            {
                entity.HasKey(e => e.AttachCode);

                entity.ToTable("Msg_AttachDocs");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Ec).HasColumnName("EC");

                entity.Property(e => e.Etc).HasColumnName("ETC");

                entity.Property(e => e.MsgId).HasColumnName("MsgID");

                entity.HasOne(d => d.Msg)
                    .WithMany(p => p.MsgAttachDocs)
                    .HasForeignKey(d => d.MsgId)
                    .HasConstraintName("FK_Msg_AttachDocs_Msg_Sents");
            });

            modelBuilder.Entity<MsgAttachFiles>(entity =>
            {
                entity.HasKey(e => e.AttachCode);

                entity.ToTable("Msg_AttachFiles");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(1024);

                entity.Property(e => e.FilePath)
                    .IsRequired()
                    .HasMaxLength(1024);

                entity.Property(e => e.IsVoice).HasDefaultValueSql("(0)");

                entity.Property(e => e.MsgId).HasColumnName("MsgID");

                entity.Property(e => e.OriginalName)
                    .IsRequired()
                    .HasMaxLength(512);

                entity.HasOne(d => d.Msg)
                    .WithMany(p => p.MsgAttachFiles)
                    .HasForeignKey(d => d.MsgId)
                    .HasConstraintName("FK_Msg_AttachFiles_Msg_Sents");
            });

            modelBuilder.Entity<MsgReceivers>(entity =>
            {
                entity.HasKey(e => new { e.MsgId, e.ReceiverUserId });

                entity.ToTable("Msg_Receivers");

                entity.Property(e => e.MsgId).HasColumnName("MsgID");

                entity.Property(e => e.ReceiverUserId).HasColumnName("ReceiverUserID");

                entity.Property(e => e.IsDeleted).HasDefaultValueSql("(0)");

                entity.Property(e => e.ReceiveDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ReceiveRemoveDate).HasColumnType("datetime");

                entity.Property(e => e.ReceiverRoleId).HasColumnName("ReceiverRoleID");

                entity.Property(e => e.ViewDate).HasColumnType("datetime");

                entity.HasOne(d => d.Msg)
                    .WithMany(p => p.MsgReceivers)
                    .HasForeignKey(d => d.MsgId)
                    .HasConstraintName("FK_Msg_Receivers_Msg_Sents");
            });

            modelBuilder.Entity<MsgSents>(entity =>
            {
                entity.HasKey(e => e.MsgId);

                entity.ToTable("Msg_Sents");

                entity.Property(e => e.MsgId).HasColumnName("Msg_ID");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasColumnType("ntext");

                entity.Property(e => e.IsDeleted).HasDefaultValueSql("(0)");

                entity.Property(e => e.MsgDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RemoveDate).HasColumnType("datetime");

                entity.Property(e => e.SenderRoleId).HasColumnName("SenderRoleID");

                entity.Property(e => e.SenderUserId).HasColumnName("SenderUserID");

                entity.Property(e => e.Subject)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<MultiCategory>(entity =>
            {
                entity.HasIndex(e => new { e.MultiCategoryId, e.ParentId })
                    .HasName("IX_MultiCategory");

                entity.Property(e => e.MultiCategoryId).HasColumnName("MultiCategoryID");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.MultiCategoryDescription).HasMaxLength(255);

                entity.Property(e => e.MultiCategoryName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.ParentId).HasColumnName("ParentID");
            });

            modelBuilder.Entity<OrganizationRoles>(entity =>
            {
                entity.HasKey(e => e.OrganizationRoleId);

                entity.HasIndex(e => new { e.OrganizationRoleId, e.ParentId, e.DepartmentId })
                    .HasName("IX_OrganizationRoles");

                entity.Property(e => e.OrganizationRoleId).HasColumnName("OrganizationRole_ID");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");

                entity.Property(e => e.ExportFormula).HasMaxLength(255);

                entity.Property(e => e.ExportMaxNumber).HasDefaultValueSql("((0))");

                entity.Property(e => e.ExportStep).HasDefaultValueSql("((1))");

                entity.Property(e => e.ImportFormula).HasMaxLength(255);

                entity.Property(e => e.ImportMaxNumber).HasDefaultValueSql("((0))");

                entity.Property(e => e.ImportStep).HasDefaultValueSql("((1))");

                entity.Property(e => e.IndicatorNumber).HasDefaultValueSql("((2))");

                entity.Property(e => e.IndicatorResetConfig).HasMaxLength(500);

                entity.Property(e => e.OrganizationRoleName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.ParentDependencyId)
                    .HasColumnName("ParentDependencyID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.ParentId).HasColumnName("ParentID");

                entity.Property(e => e.PostFixItem)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PreFixItem)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<PersonalArchive>(entity =>
            {
                entity.HasKey(e => e.SubjectId);

                entity.HasIndex(e => new { e.SubjectId, e.ParentId, e.RoleId })
                    .HasName("IX_PersonalArchive");

                entity.HasIndex(e => new { e.SubjectDescription, e.CreationDate, e.ParentId, e.RoleId, e.SubjectId, e.SubjectName })
                    .HasName("_dta_index_PersonalArchive_7_1947960299__K5_K6_K1_K2_3_4");

                entity.HasIndex(e => new { e.SubjectId, e.SubjectDescription, e.CreationDate, e.RoleId, e.ParentId, e.SubjectName })
                    .HasName("_dta_index_PersonalArchive_7_1947960299__K6_K5_K2_1_3_4");

                entity.Property(e => e.SubjectId).HasColumnName("SubjectID");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ParentId)
                    .HasColumnName("ParentID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.SubjectDescription).HasMaxLength(255);

                entity.Property(e => e.SubjectName)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<PersonalArchiveSends>(entity =>
            {
                entity.ToTable("PersonalArchive_Sends");

                entity.HasIndex(e => new { e.SubjectId, e.SendCode })
                    .HasName("IX_PersonalArchive_Sends");

                entity.HasIndex(e => new { e.SubjectId, e.Etc, e.Ec })
                    .HasName("IX_PersonalArchive_DEV_Sends_1")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ArchiveDescription).HasMaxLength(1024);

                entity.Property(e => e.ArchiveTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Ec).HasColumnName("EC");

                entity.Property(e => e.Etc).HasColumnName("ETC");

                entity.Property(e => e.RecycleDate).HasColumnType("datetime");

                entity.Property(e => e.SubjectId).HasColumnName("SubjectID");
            });

            modelBuilder.Entity<PersonalLock>(entity =>
            {
                entity.HasIndex(e => new { e.PersonalLockId, e.RoleId, e.Etc, e.Ec })
                    .HasName("IX_PersonalLock");

                entity.Property(e => e.PersonalLockId).HasColumnName("PersonalLock_ID");

                entity.Property(e => e.Ec).HasColumnName("EC");

                entity.Property(e => e.Etc).HasColumnName("ETC");

                entity.Property(e => e.LockTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");
            });

            modelBuilder.Entity<PersonnelSignature>(entity =>
            {
                entity.HasKey(e => e.SignatureId);

                entity.HasIndex(e => new { e.SignatureId, e.UserId })
                    .HasName("IX_PersonnelSignature");

                entity.Property(e => e.SignatureId).HasColumnName("SignatureID");

                entity.Property(e => e.FilePath)
                    .IsRequired()
                    .HasMaxLength(1024);

                entity.Property(e => e.IsActive).HasDefaultValueSql("(1)");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<PreDefinedHamesh>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Content).HasMaxLength(4000);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.HotKey)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<PreDefinedPersonalDesc>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Content)
                    .IsRequired()
                    .HasMaxLength(1024);

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<PreNoteCategories>(entity =>
            {
                entity.HasKey(e => e.CategoryId);

                entity.ToTable("PreNote_Categories");

                entity.HasIndex(e => new { e.RoleId, e.Etc })
                    .HasName("IX_RoleId_ETC");

                entity.Property(e => e.CategoryId).HasColumnName("CategoryID");

                entity.Property(e => e.CategoryDescription)
                    .HasMaxLength(1024)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CategoryName)
                    .HasMaxLength(1024)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Etc)
                    .HasColumnName("ETC")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.ParentId).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RoleId).HasDefaultValueSql("((-1))");

                entity.Property(e => e.UserId).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<Priorities>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<RelArchiveDepartmentEntities>(entity =>
            {
                entity.HasKey(e => new { e.SubjectId, e.EntityTypeCode, e.EntityCode });

                entity.ToTable("Rel_ArchiveDepartment_Entities");

                entity.HasIndex(e => new { e.EntityCode, e.EntityTypeCode })
                    .HasName("_dta_index_Rel_ArchiveDepartment_Entities_7_911394366__K3_K2");

                entity.HasIndex(e => new { e.SubjectId, e.EntityTypeCode, e.EntityCode })
                    .HasName("IX_Rel_ArchiveDepartment_Entities");

                entity.Property(e => e.SubjectId).HasColumnName("SubjectID");

                entity.Property(e => e.ArchiveDescription).HasMaxLength(1024);

                entity.Property(e => e.ArchiveTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000);

                entity.Property(e => e.EntityTitle).HasMaxLength(4000);
            });

            modelBuilder.Entity<RelEntityIndicator>(entity =>
            {
                entity.ToTable("Rel_Entity_Indicator");

                entity.HasIndex(e => e.ExportDate)
                    .HasName("IX_Rel_Entity_Indicator_2");

                entity.HasIndex(e => e.ExportEntityNumber)
                    .HasName("IX_Rel_Entity_Indicator_4");

                entity.HasIndex(e => e.ExportIndicatorId)
                    .HasName("IX_ExportIndicatorID");

                entity.HasIndex(e => e.ImportDate)
                    .HasName("IX_Rel_Entity_Indicator_1");

                entity.HasIndex(e => e.ImportEntityNumber)
                    .HasName("IX_Rel_Entity_Indicator_3");

                entity.HasIndex(e => e.ImportIndicatorId)
                    .HasName("IX_ImportIndicatorID");

                entity.HasIndex(e => new { e.Etc, e.EntityNumber })
                    .HasName("IX_Rel_Entity_Indicator");

                entity.HasIndex(e => new { e.Etc, e.ExportIndicatorId })
                    .HasName("IX_Rel_Entity_Indicator_5");

                entity.HasIndex(e => new { e.Etc, e.ImportIndicatorId })
                    .HasName("IX_Rel_Entity_Indicator_6");

                entity.HasIndex(e => new { e.Id, e.Etc, e.Fec })
                    .HasName("_dta_index_Rel_Entity_Indicator_7_1230769775__K2_K5_1_4149");

                entity.HasIndex(e => new { e.ImportIndicatorId, e.Etc, e.ImportOriginNo })
                    .HasName("_dta_index_Rel_Entity_Indicator_7_1230769775__K13_K2_K27");

                entity.HasIndex(e => new { e.ExportDate, e.Etc, e.ExportIndicatorId, e.ExportEntityNumber })
                    .HasName("_dta_index_Rel_Entity_Indicator_7_1230769775__K41_K2_K31_K40");

                entity.HasIndex(e => new { e.ImportDate, e.Etc, e.ImportIndicatorId, e.ImportEntityNumber })
                    .HasName("_dta_index_Rel_Entity_Indicator_7_1230769775__K23D_K2_K13_K22");

                entity.HasIndex(e => new { e.ImportDate, e.ImportIndicatorId, e.Etc, e.ImportOriginNo })
                    .HasName("_dta_index_Rel_Entity_Indicator_7_1230769775__K23D_K13_K2_K27");

                entity.HasIndex(e => new { e.Id, e.EntityTypeName, e.EntityTypeFarsiName, e.Fec, e.IsPrivateSearch, e.PrivateSearchUserCode, e.PrivateSearchRoleId, e.EntityNumber, e.SecurityLevelCode, e.ImportRegisterId, e.ImportRegisterRoleId, e.From, e.MainInnerReceiverCode, e.MainInnerReceiver, e.ImportEntityNumber, e.ImportMethod, e.ImportPriority, e.ImportOriginNo, e.ImportOriginDate, e.ExportRegisterId, e.ExportRegisterRoleId, e.ExportIndicatorId, e.To, e.ExportEntityNumber, e.ExportDate, e.ExportMethod, e.ExportPriority, e.NopgAttached, e.DocType, e.DocSubject, e.IsPrinted, e.IsSent, e.Etc, e.ImportIndicatorId, e.ImportDate })
                    .HasName("_dta_index_Rel_Entity_Indicator_7_1230769775__K2_K13_K23_1_3_4_5_6_7_8_9_10_11_12_17_20_21_22_24_26_27_28_29_30_31_35_40_41_42_");

                entity.HasIndex(e => new { e.Id, e.EntityTypeName, e.EntityTypeFarsiName, e.Fec, e.IsPrivateSearch, e.PrivateSearchUserCode, e.PrivateSearchRoleId, e.EntityNumber, e.SecurityLevelCode, e.ImportRegisterId, e.ImportRegisterRoleId, e.ImportIndicatorId, e.From, e.ImportEntityNumber, e.ImportDate, e.ImportMethod, e.ImportPriority, e.ImportOriginNo, e.ImportOriginDate, e.ExportRegisterId, e.ExportRegisterRoleId, e.To, e.MainInnerSenderCode, e.MainInnerSender, e.ExportEntityNumber, e.ExportMethod, e.ExportPriority, e.NopgAttached, e.DocType, e.DocSubject, e.IsPrinted, e.IsSent, e.Etc, e.ExportIndicatorId, e.ExportDate })
                    .HasName("_dta_index_Rel_Entity_Indicator_7_1230769775__K2_K31_K41_1_3_4_5_6_7_8_9_10_11_12_13_17_22_23_24_26_27_28_29_30_35_38_39_40_42_");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DocKeywords).HasMaxLength(450);

                entity.Property(e => e.DocSubject).HasMaxLength(1024);

                entity.Property(e => e.DocSubjectCode).HasMaxLength(50);

                entity.Property(e => e.DocType).HasMaxLength(20);

                entity.Property(e => e.EntityNumber)
                    .IsRequired()
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000);

                entity.Property(e => e.EntityTypeFarsiName).HasMaxLength(255);

                entity.Property(e => e.EntityTypeName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.Etc).HasColumnName("ETC");

                entity.Property(e => e.ExportDate).HasColumnType("datetime");

                entity.Property(e => e.ExportDesc).HasMaxLength(255);

                entity.Property(e => e.ExportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000);

                entity.Property(e => e.ExportIndicatorId)
                    .HasColumnName("ExportIndicatorID")
                    .HasColumnType("ExportIndicatorCode");

                entity.Property(e => e.ExportMethod).HasMaxLength(20);

                entity.Property(e => e.ExportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ExportRegisterId)
                    .HasColumnName("ExportRegisterID")
                    .HasColumnType("ExportEntityRegisterCode");

                entity.Property(e => e.ExportRegisterRoleId)
                    .HasColumnName("ExportRegisterRoleID")
                    .HasColumnType("ExportEntityRegisterRoleCode");

                entity.Property(e => e.Fec).HasColumnName("FEC");

                entity.Property(e => e.FollowPassword)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.From).HasMaxLength(1024);

                entity.Property(e => e.FromCode).HasMaxLength(50);

                entity.Property(e => e.FromId)
                    .HasColumnName("FromID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.FromType).HasColumnType("char(1)");

                entity.Property(e => e.ImportDate).HasColumnType("datetime");

                entity.Property(e => e.ImportDesc).HasMaxLength(255);

                entity.Property(e => e.ImportEntityNumber)
                    .HasColumnType("ENTITY_NUMBER")
                    .HasMaxLength(4000);

                entity.Property(e => e.ImportIndicatorId)
                    .HasColumnName("ImportIndicatorID")
                    .HasColumnType("ImportIndicatorCode");

                entity.Property(e => e.ImportMethod).HasMaxLength(20);

                entity.Property(e => e.ImportOriginDate).HasColumnType("datetime");

                entity.Property(e => e.ImportOriginNo)
                    .HasColumnName("ImportOriginNO")
                    .HasMaxLength(255);

                entity.Property(e => e.ImportPriority).HasColumnType("PointerRelatedField");

                entity.Property(e => e.ImportRegisterId)
                    .HasColumnName("ImportRegisterID")
                    .HasColumnType("ImportEntityRegisterCode");

                entity.Property(e => e.ImportRegisterRoleId)
                    .HasColumnName("ImportRegisterRoleID")
                    .HasColumnType("ImportEntityRegisterRoleCode");

                entity.Property(e => e.IsPrinted).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsPrivateSearch).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsSent).HasDefaultValueSql("(0)");

                entity.Property(e => e.MainInnerReceiver).HasMaxLength(1000);

                entity.Property(e => e.MainInnerReceiverCode).HasMaxLength(50);

                entity.Property(e => e.MainInnerReceiverId)
                    .HasColumnName("MainInnerReceiverID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.MainInnerReceiverType).HasColumnType("char(1)");

                entity.Property(e => e.MainInnerSender).HasMaxLength(1000);

                entity.Property(e => e.MainInnerSenderCode).HasMaxLength(50);

                entity.Property(e => e.MainInnerSenderId)
                    .HasColumnName("MainInnerSenderID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.MainInnerSenderType).HasColumnType("char(1)");

                entity.Property(e => e.NopgAttached)
                    .HasColumnName("NOPgAttached")
                    .HasMaxLength(255);

                entity.Property(e => e.PrivateSearchRoleId)
                    .HasColumnName("PrivateSearchRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.PrivateSearchUserCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.SecurityLevelCode)
                    .HasColumnType("SecurityLevelCode")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.SenderCellNumber).HasMaxLength(500);

                entity.Property(e => e.To).HasMaxLength(1024);

                entity.Property(e => e.ToCode).HasMaxLength(50);

                entity.Property(e => e.ToId)
                    .HasColumnName("ToID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.ToType).HasColumnType("char(1)");
            });

            modelBuilder.Entity<RepeatedcirculationInCartable>(entity =>
            {
                entity.HasKey(e => e.ActiveRoleId);

                entity.Property(e => e.ActiveRoleId)
                    .HasColumnName("ActiveRoleID")
                    .ValueGeneratedNever();
            });

            modelBuilder.Entity<RepeatedPersonalArchiveInCartable>(entity =>
            {
                entity.HasKey(e => e.ActiveRoleId);

                entity.Property(e => e.ActiveRoleId)
                    .HasColumnName("ActiveRoleID")
                    .ValueGeneratedNever();
            });

            modelBuilder.Entity<ReservedPersonnel>(entity =>
            {
                entity.HasKey(e => e.ReserveId);

                entity.Property(e => e.ReserveId).HasColumnName("ReserveID");

                entity.Property(e => e.CardTableXml).HasColumnType("ntext");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.IsActive).HasDefaultValueSql("(0)");

                entity.Property(e => e.ReserveRoleId).HasColumnName("ReserveRoleID");

                entity.Property(e => e.ReserveUserId).HasColumnName("ReserveUserID");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<ReserveHistory>(entity =>
            {
                entity.HasKey(e => e.Code);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Ec).HasColumnName("EC");

                entity.Property(e => e.Etc).HasColumnName("ETC");

                entity.Property(e => e.MasterRoleId).HasColumnName("MasterRoleID");

                entity.Property(e => e.MasterUserId).HasColumnName("MasterUserID");

                entity.Property(e => e.ReserveId).HasColumnName("ReserveID");

                entity.Property(e => e.ReserveRoleId).HasColumnName("ReserveRoleID");

                entity.Property(e => e.ReserveUserId).HasColumnName("ReserveUserID");

                entity.Property(e => e.ServiceId).HasColumnName("ServiceID");
            });

            modelBuilder.Entity<RevocationCertificatesList>(entity =>
            {
                entity.HasKey(e => e.CrlId);

                entity.Property(e => e.CrlId).HasColumnName("CRL_ID");

                entity.Property(e => e.CarootId).HasColumnName("CARootID");

                entity.Property(e => e.CreateRoleId).HasColumnName("CreateRoleID");

                entity.Property(e => e.CreateUserId).HasColumnName("CreateUserID");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Crl)
                    .IsRequired()
                    .HasColumnName("CRL");

                entity.Property(e => e.Issuer).IsRequired();
            });

            modelBuilder.Entity<Roles>(entity =>
            {
                entity.HasKey(e => e.RoleId);

                entity.HasIndex(e => e.RoleId)
                    .HasName("IX_Roles");

                entity.Property(e => e.RoleId).HasColumnName("Role_ID");

                entity.Property(e => e.CardTableStatus).HasDefaultValueSql("((1))");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");

                entity.Property(e => e.InternalCardTableStatus).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastRefreshTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.OrganizationRoleId).HasColumnName("OrganizationRoleID");

                entity.Property(e => e.OriginRoleId).HasColumnName("OriginRoleID");

                entity.Property(e => e.ParentId)
                    .HasColumnName("ParentID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.RoleName).HasMaxLength(512);

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<RolesDefaultPrintLayouts>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.RoleId, e.DefaultLayoutId });

                entity.ToTable("Roles_DefaultPrintLayouts");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.DefaultLayoutId).HasColumnName("DefaultLayoutID");
            });

            modelBuilder.Entity<RolesExLocationAccess>(entity =>
            {
                entity.HasKey(e => e.LocationCode);

                entity.ToTable("Roles_Ex_Location_Access");

                entity.HasIndex(e => new { e.LocationCode, e.RoleId })
                    .HasName("IX_Roles_Ex_Location_Access");

                entity.Property(e => e.Count).HasDefaultValueSql("(0)");

                entity.Property(e => e.Ip)
                    .IsRequired()
                    .HasColumnName("IP")
                    .HasMaxLength(255);

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.RolesExLocationAccess)
                    .HasForeignKey(d => d.RoleId)
                    .HasConstraintName("FK_Roles_Ex_Location_Access_Roles");
            });

            modelBuilder.Entity<RolesExRights>(entity =>
            {
                entity.HasKey(e => new { e.RoleId, e.RightId });

                entity.ToTable("Roles_Ex_Rights");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.RightId).HasColumnName("RightID");

                entity.Property(e => e.AcceptXml)
                    .HasColumnName("AcceptXML")
                    .HasColumnType("ntext");

                entity.Property(e => e.IsConfirm).HasMaxLength(255);

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.RolesExRights)
                    .HasForeignKey(d => d.RoleId)
                    .HasConstraintName("FK_Roles_Ex_Rights_Roles");
            });

            modelBuilder.Entity<RolesExTimeAccess>(entity =>
            {
                entity.HasKey(e => e.TimeAccessCode);

                entity.ToTable("Roles_Ex_TimeAccess");

                entity.HasIndex(e => new { e.TimeAccessCode, e.RoleId })
                    .HasName("IX_Roles_Ex_TimeAccess");

                entity.Property(e => e.ExpirationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Friday).HasDefaultValueSql("(0)");

                entity.Property(e => e.Monday).HasDefaultValueSql("(0)");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.Saturday).HasDefaultValueSql("(0)");

                entity.Property(e => e.Sunday).HasDefaultValueSql("(0)");

                entity.Property(e => e.Thursday).HasDefaultValueSql("(0)");

                entity.Property(e => e.Tuesday).HasDefaultValueSql("(0)");

                entity.Property(e => e.Wednesday).HasDefaultValueSql("(0)");

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.RolesExTimeAccess)
                    .HasForeignKey(d => d.RoleId)
                    .HasConstraintName("FK_Roles_Ex_TimeAccess_Roles");
            });

            modelBuilder.Entity<Rootcertificates>(entity =>
            {
                entity.HasKey(e => e.CarootId);

                entity.Property(e => e.CarootId).HasColumnName("CARootID");

                entity.Property(e => e.Certificate).IsRequired();

                entity.Property(e => e.CreateRoleId).HasColumnName("CreateRoleID");

                entity.Property(e => e.CreateUserId).HasColumnName("CreateUserID");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FingerPrint).IsRequired();

                entity.Property(e => e.SerialNumber).IsRequired();

                entity.Property(e => e.ViewName)
                    .IsRequired()
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<Rptcategory>(entity =>
            {
                entity.HasKey(e => e.CategoryId);

                entity.ToTable("RPTCategory");

                entity.HasIndex(e => new { e.DbCode, e.RoleId })
                    .HasName("IX_RPTCategory");

                entity.Property(e => e.CategoryId).HasColumnName("CategoryID");

                entity.Property(e => e.CategoryDescription).HasMaxLength(1024);

                entity.Property(e => e.CategoryName).HasMaxLength(1024);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ParentId).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RoleId).HasDefaultValueSql("((-1))");

                entity.Property(e => e.UserId).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<RptdbConfig>(entity =>
            {
                entity.HasKey(e => e.DbCode);

                entity.ToTable("RPTDbConfig");

                entity.Property(e => e.CommandTout).HasColumnName("CommandTOut");

                entity.Property(e => e.DbProvider).HasMaxLength(1024);

                entity.Property(e => e.Dsn)
                    .HasColumnName("DSN")
                    .HasMaxLength(1024);

                entity.Property(e => e.ExportDbDsn)
                    .HasColumnName("ExportDB_DSN")
                    .HasMaxLength(1024);

                entity.Property(e => e.ExportDbPwd)
                    .HasColumnName("ExportDB_PWD")
                    .HasMaxLength(1024);

                entity.Property(e => e.ExportDbUid)
                    .HasColumnName("ExportDB_UID")
                    .HasMaxLength(1024);

                entity.Property(e => e.Pwd)
                    .HasColumnName("PWD")
                    .HasMaxLength(1024);

                entity.Property(e => e.Uid)
                    .HasColumnName("UID")
                    .HasMaxLength(1024);

                entity.Property(e => e.ViewDbName)
                    .IsRequired()
                    .HasMaxLength(1024);
            });

            modelBuilder.Entity<Rptentity>(entity =>
            {
                entity.HasKey(e => e.EntityId);

                entity.ToTable("RPTEntity");

                entity.HasIndex(e => e.DbCode)
                    .HasName("IX_RPTEntity");

                entity.Property(e => e.EntityId).ValueGeneratedNever();

                entity.Property(e => e.EnglishName).HasMaxLength(1024);

                entity.Property(e => e.FarsiName).HasMaxLength(1024);

                entity.Property(e => e.Owner).HasMaxLength(1024);

                entity.Property(e => e.PrimaryKey).HasMaxLength(1024);
            });

            modelBuilder.Entity<Rptstructure>(entity =>
            {
                entity.HasKey(e => e.RptId);

                entity.ToTable("RPTStructure");

                entity.HasIndex(e => e.DbCode)
                    .HasName("IX_RPTStructure");

                entity.Property(e => e.RptId).HasColumnName("RptID");

                entity.Property(e => e.BodyClientHeight).HasMaxLength(50);

                entity.Property(e => e.BodyHtml).HasColumnName("BodyHTML");

                entity.Property(e => e.BodySize).HasMaxLength(50);

                entity.Property(e => e.CtrlText).HasMaxLength(50);

                entity.Property(e => e.En).HasColumnName("EN");

                entity.Property(e => e.Fn).HasColumnName("FN");

                entity.Property(e => e.FooterClientHeight).HasMaxLength(50);

                entity.Property(e => e.FooterHtml).HasColumnName("FooterHTML");

                entity.Property(e => e.FooterSize).HasMaxLength(50);

                entity.Property(e => e.HeaderClientHeight).HasMaxLength(50);

                entity.Property(e => e.HeaderHtml).HasColumnName("HeaderHTML");

                entity.Property(e => e.HeaderSize).HasMaxLength(50);

                entity.Property(e => e.OutputType).HasMaxLength(50);

                entity.Property(e => e.SqlexportTblMidName).HasColumnName("SQLExportTblMidName");

                entity.Property(e => e.SqlexportTblPostName).HasColumnName("SQLExportTblPostName");

                entity.Property(e => e.SqlexportTblPreName).HasColumnName("SQLExportTblPreName");
            });

            modelBuilder.Entity<SendDocAttachment>(entity =>
            {
                entity.HasKey(e => e.SendAttachCode);

                entity.ToTable("Send_Doc_Attachment");

                entity.HasIndex(e => new { e.SendAttachCode, e.SendCode, e.Etc, e.Ec, e.UserId, e.RoleId })
                    .HasName("IX_Send_Doc_Attachment");

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.Description).HasMaxLength(1024);

                entity.Property(e => e.Ec).HasColumnName("EC");

                entity.Property(e => e.Etc).HasColumnName("ETC");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.HasOne(d => d.SendCodeNavigation)
                    .WithMany(p => p.SendDocAttachment)
                    .HasForeignKey(d => d.SendCode)
                    .HasConstraintName("FK_Send_Doc_Attachment_Sends");
            });

            modelBuilder.Entity<SendDocCopy>(entity =>
            {
                entity.HasKey(e => e.CopyId);

                entity.HasIndex(e => new { e.Ec, e.Etc })
                    .HasName("_dta_index_SendDocCopy_7_1605723106__K3_K2");

                entity.Property(e => e.CopyId).HasColumnName("CopyID");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CreationRoleId).HasColumnName("CreationRoleID");

                entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");

                entity.Property(e => e.Ec).HasColumnName("EC");

                entity.Property(e => e.Etc).HasColumnName("ETC");

                entity.Property(e => e.OrganizationId).HasColumnName("OrganizationID");

                entity.Property(e => e.ReceiverName)
                    .IsRequired()
                    .HasMaxLength(1024);

                entity.Property(e => e.RoleId).HasColumnName("RoleID");
            });

            modelBuilder.Entity<SendFileAttachment>(entity =>
            {
                entity.HasKey(e => e.SendAttachCode);

                entity.ToTable("Send_File_Attachment");

                entity.HasIndex(e => new { e.SendAttachCode, e.SendCode, e.Etc, e.Ec, e.UserId, e.RoleId })
                    .HasName("IX_Send_File_Attachment");

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.Description).HasMaxLength(1024);

                entity.Property(e => e.Ec).HasColumnName("EC");

                entity.Property(e => e.Etc).HasColumnName("ETC");

                entity.Property(e => e.FilePath)
                    .IsRequired()
                    .HasMaxLength(1024);

                entity.Property(e => e.OriginalFileName).HasMaxLength(1024);

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.HasOne(d => d.SendCodeNavigation)
                    .WithMany(p => p.SendFileAttachment)
                    .HasForeignKey(d => d.SendCode)
                    .HasConstraintName("FK_Send_File_Attachment_Sends");
            });

            modelBuilder.Entity<SendReceivers>(entity =>
            {
                entity.HasKey(e => e.Code);

                entity.ToTable("Send_Receivers");

                entity.HasIndex(e => e.ResponseDate)
                    .HasName("IX_Send_Receivers_3");

                entity.HasIndex(e => e.ResponseUntilDate)
                    .HasName("IX_Send_Receivers_2");

                entity.HasIndex(e => e.SendCode)
                    .HasName("IX_Send_Receivers_1");

                entity.HasIndex(e => new { e.ReceiverRoleId, e.ActionCode })
                    .HasName("IX_Send_Receivers");

                entity.HasIndex(e => new { e.ConsiderationType, e.ReceiveDate, e.FinishedOperation, e.ShowRejected })
                    .HasName("IX_Send_Receivers_4");

                entity.Property(e => e.ConsiderationType).HasMaxLength(255);

                entity.Property(e => e.FirstChangeViewStatesDate).HasColumnType("datetime");

                entity.Property(e => e.FollowingCount).HasDefaultValueSql("((0))");

                entity.Property(e => e.HiddenRoleId)
                    .HasColumnName("HiddenRoleID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.HiddenUserId)
                    .HasColumnName("HiddenUserID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.LastChangeViewStatesDate).HasColumnType("datetime");

                entity.Property(e => e.PriorityId).HasColumnName("PriorityID");

                entity.Property(e => e.ReceiveDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ReceiverId).HasColumnName("ReceiverID");

                entity.Property(e => e.ReceiverRoleId).HasColumnName("ReceiverRoleID");

                entity.Property(e => e.ResponseDate).HasColumnType("datetime");

                entity.Property(e => e.ResponseUntilDate).HasColumnType("datetime");

                entity.Property(e => e.ShowRejected).HasDefaultValueSql("((1))");

                entity.Property(e => e.ViewStates)
                    .IsRequired()
                    .HasColumnType("char(40)")
                    .HasDefaultValueSql("('0000000000000000000000000000000000000000')");

                entity.Property(e => e.WfextendedParams)
                    .HasColumnName("WFExtendedParams")
                    .HasMaxLength(4000);

                entity.Property(e => e.WfscenarioCode).HasColumnName("WFScenarioCode");

                entity.HasOne(d => d.SendCodeNavigation)
                    .WithMany(p => p.SendReceivers)
                    .HasForeignKey(d => d.SendCode)
                    .HasConstraintName("FK_Send_Receivers_Sends");
            });

            modelBuilder.Entity<Sends>(entity =>
            {
                entity.HasKey(e => e.SendCode);

                entity.HasIndex(e => e.SendCode)
                    .HasName("IX_Sends_2");

                entity.HasIndex(e => e.SendIsDeleted)
                    .HasName("IX_Sends_4");

                entity.HasIndex(e => e.SendIsRecycle)
                    .HasName("IX_Sends_5");

                entity.HasIndex(e => e.SendParentCode)
                    .HasName("IX_Sends_3");

                entity.HasIndex(e => e.SenderRoleId)
                    .HasName("IX_Sends");

                entity.HasIndex(e => e.ViewInOutbox)
                    .HasName("IX_Sends_6");

                entity.HasIndex(e => new { e.EntityTypeCode, e.EntityCode })
                    .HasName("IX_Sends_1");

                entity.Property(e => e.Description).HasMaxLength(1024);

                entity.Property(e => e.Location)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ParentReceiverCode).HasDefaultValueSql("((-1))");

                entity.Property(e => e.SendDate).HasColumnType("datetime");

                entity.Property(e => e.SendIsDeleted).HasDefaultValueSql("(0)");

                entity.Property(e => e.SendIsRecycle).HasDefaultValueSql("(0)");

                entity.Property(e => e.SendRecycleDate).HasColumnType("datetime");

                entity.Property(e => e.SendRecycleRefrence).HasMaxLength(255);

                entity.Property(e => e.SenderId).HasColumnName("SenderID");

                entity.Property(e => e.SenderRoleId).HasColumnName("SenderRoleID");

                entity.Property(e => e.ViewInOutbox).HasDefaultValueSql("(1)");

                entity.Property(e => e.WfexecutionId).HasColumnName("WFExecutionID");
            });

            modelBuilder.Entity<SpecialCartable>(entity =>
            {
                entity.Property(e => e.SpecialCartableId).HasColumnName("SpecialCartableID");

                entity.Property(e => e.CategoryId).HasColumnName("CategoryID");

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.CreatorIp)
                    .HasColumnName("CreatorIP")
                    .HasMaxLength(100);

                entity.Property(e => e.CreatorRoleId).HasColumnName("CreatorRoleID");

                entity.Property(e => e.Ec).HasColumnName("EC");

                entity.Property(e => e.Etc).HasColumnName("ETC");

                entity.Property(e => e.ManagerRoleId).HasColumnName("ManagerRoleID");

                entity.Property(e => e.SecretaryRoleId).HasColumnName("SecretaryRoleID");
            });

            modelBuilder.Entity<SpecialCartableCategory>(entity =>
            {
                entity.HasKey(e => e.CategoryId);

                entity.ToTable("SpecialCartable_Category");

                entity.Property(e => e.CategoryId).HasColumnName("CategoryID");

                entity.Property(e => e.CategoryName).IsRequired();

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.CreatorIp)
                    .HasColumnName("CreatorIP")
                    .HasMaxLength(100);

                entity.Property(e => e.CreatorRoleId).HasColumnName("CreatorRoleID");

                entity.Property(e => e.ManagerRoleId).HasColumnName("ManagerRoleID");
            });

            modelBuilder.Entity<SpecialCartableDependency>(entity =>
            {
                entity.ToTable("SpecialCartable_Dependency");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DependencyId).HasColumnName("DependencyID");

                entity.Property(e => e.SpecialCartableId).HasColumnName("SpecialCartableID");
            });

            modelBuilder.Entity<SpecialCartableSecretaryPersonnel>(entity =>
            {
                entity.ToTable("SpecialCartable_SecretaryPersonnel");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ActionCode).IsRequired();

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.CreatorIp)
                    .HasColumnName("CreatorIP")
                    .HasMaxLength(100);

                entity.Property(e => e.CreatorRoleId).HasColumnName("CreatorRoleID");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.ManagerRoleId).HasColumnName("ManagerRoleID");

                entity.Property(e => e.ManagerUserId).HasColumnName("ManagerUserID");

                entity.Property(e => e.SecretaryRoleId).HasColumnName("SecretaryRoleID");

                entity.Property(e => e.SecretaryUserId).HasColumnName("SecretaryUserID");

                entity.Property(e => e.StartDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<SubjectCategory>(entity =>
            {
                entity.HasKey(e => e.CategoryId);

                entity.Property(e => e.CategoryId).HasColumnName("CategoryID");

                entity.Property(e => e.CategoryDescription).HasMaxLength(255);

                entity.Property(e => e.CategoryName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ParentId).HasColumnName("ParentID");
            });

            modelBuilder.Entity<Subjects>(entity =>
            {
                entity.HasKey(e => e.SubjectId);

                entity.Property(e => e.SubjectId).HasColumnName("SubjectID");

                entity.Property(e => e.CategoryId).HasColumnName("CategoryID");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IndicatorId).HasColumnName("IndicatorID");

                entity.Property(e => e.SubjectCode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SubjectName)
                    .IsRequired()
                    .HasMaxLength(4000);
            });

            modelBuilder.Entity<SyncBaseFarzinForms>(entity =>
            {
                entity.ToTable("Sync_BaseFarzinForms");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Etc).HasColumnName("ETC");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");
            });

            modelBuilder.Entity<SyncBaseInfoLastCodes>(entity =>
            {
                entity.ToTable("Sync_BaseInfo_LastCodes");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LastRecordId).HasColumnName("LastRecordID");

                entity.Property(e => e.LastSyncTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TableName)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<SyncKeyMap>(entity =>
            {
                entity.HasKey(e => e.MapId);

                entity.ToTable("Sync_Key_Map");

                entity.Property(e => e.MapId).HasColumnName("Map_ID");

                entity.Property(e => e.KeyName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.MasterValue)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.OfflineValue)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.TableName)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<SyncLockedDocuments>(entity =>
            {
                entity.HasKey(e => e.LockId);

                entity.ToTable("Sync_LockedDocuments");

                entity.Property(e => e.LockId).HasColumnName("LockID");

                entity.Property(e => e.Ec).HasColumnName("EC");

                entity.Property(e => e.Etc).HasColumnName("ETC");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.LockerRoleId).HasColumnName("LockerRoleID");
            });

            modelBuilder.Entity<SyncOfflineChangesLog>(entity =>
            {
                entity.HasKey(e => e.LogId);

                entity.ToTable("Sync_Offline_Changes_Log");

                entity.Property(e => e.LogId).HasColumnName("Log_ID");

                entity.Property(e => e.Condition)
                    .IsRequired()
                    .HasMaxLength(1024);

                entity.Property(e => e.LogDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TableName)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<SystemCategories>(entity =>
            {
                entity.HasKey(e => e.CategoryId);

                entity.Property(e => e.CategoryId).HasColumnName("CategoryID");

                entity.Property(e => e.CategoryDiscription).HasMaxLength(500);

                entity.Property(e => e.CategoryName).HasMaxLength(100);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<SystemRights>(entity =>
            {
                entity.HasKey(e => e.RightId);

                entity.HasIndex(e => e.RelatedService)
                    .HasName("IX_SystemRights_1");

                entity.HasIndex(e => e.RightType)
                    .HasName("IX_SystemRights_2");

                entity.HasIndex(e => new { e.RightId, e.RightName, e.RelatedService })
                    .HasName("_dta_index_SystemRights_7_1299184074__K3_1_2");

                entity.Property(e => e.RightId).HasColumnName("Right_ID");

                entity.Property(e => e.Etc).HasColumnName("ETC");

                entity.Property(e => e.IsConfirmable).HasMaxLength(255);

                entity.Property(e => e.OrganizationRoleId).HasColumnName("OrganizationRoleID");

                entity.Property(e => e.RelatedService)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.RightName)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.RightType).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TaskHistory>(entity =>
            {
                entity.HasKey(e => e.HistoryId);

                entity.Property(e => e.HistoryId).HasColumnName("History_ID");

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.Ec).HasColumnName("EC");

                entity.Property(e => e.Etc).HasColumnName("ETC");

                entity.Property(e => e.TaskId).HasColumnName("TaskID");

                entity.Property(e => e.TaskLocation)
                    .IsRequired()
                    .HasMaxLength(512);

                entity.Property(e => e.TaskSubject)
                    .IsRequired()
                    .HasMaxLength(1024);
            });

            modelBuilder.Entity<TaskSchedule>(entity =>
            {
                entity.HasKey(e => e.TaskId);

                entity.Property(e => e.TaskId).HasColumnName("Task_ID");

                entity.Property(e => e.Duration).HasDefaultValueSql("(15)");

                entity.Property(e => e.EndDate).HasColumnType("smalldatetime");

                entity.Property(e => e.IsPriodical).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsPrivate).HasDefaultValueSql("(0)");

                entity.Property(e => e.IsSession).HasDefaultValueSql("(0)");

                entity.Property(e => e.LastReminderTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Priority).HasDefaultValueSql("(2)");

                entity.Property(e => e.StartDate).HasColumnType("smalldatetime");

                entity.Property(e => e.TaskReminder).HasDefaultValueSql("(1)");

                entity.Property(e => e.TaskTitle)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TempTablePermission>(entity =>
            {
                entity.ToTable("_TempTablePermission");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.PermissionName).HasMaxLength(255);
            });

            modelBuilder.Entity<TesTable>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("nchar(10)");
            });

            modelBuilder.Entity<UploadFiles>(entity =>
            {
                entity.HasKey(e => e.FileCode);

                entity.ToTable("Upload_Files");

                entity.HasIndex(e => new { e.FileCode, e.SessionKey })
                    .HasName("IX_Upload_Files");

                entity.Property(e => e.AttachPageRandomNo)
                    .IsRequired()
                    .HasColumnName("AttachPageRandomNO")
                    .HasMaxLength(50);

                entity.Property(e => e.Description).HasMaxLength(1024);

                entity.Property(e => e.FilePath)
                    .IsRequired()
                    .HasMaxLength(1024);

                entity.Property(e => e.OriginalFileName)
                    .IsRequired()
                    .HasMaxLength(1024);

                entity.Property(e => e.SessionKey)
                    .IsRequired()
                    .HasMaxLength(400)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<UrlserviceExpiredKeys>(entity =>
            {
                entity.HasKey(e => e.KeyId);

                entity.ToTable("URLService_Expired_Keys");

                entity.HasIndex(e => new { e.HashedKey, e.EncryptedKey })
                    .HasName("IX_URLService_Expired_Keys");

                entity.Property(e => e.KeyId).HasColumnName("Key_ID");

                entity.Property(e => e.ClientAddress)
                    .IsRequired()
                    .HasMaxLength(1024);

                entity.Property(e => e.EncryptedKey)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.ExpireDate).HasColumnType("datetime");

                entity.Property(e => e.HashedKey)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<Users>(entity =>
            {
                entity.HasKey(e => e.UserId);

                entity.HasIndex(e => new { e.UserId, e.UserName, e.Password })
                    .HasName("IX_Users");

                entity.Property(e => e.UserId).HasColumnName("User_ID");

                entity.Property(e => e.AcceptXml)
                    .HasColumnName("AcceptXML")
                    .HasColumnType("ntext");

                entity.Property(e => e.ActiveSessionId)
                    .HasColumnName("ActiveSessionID")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Address).HasMaxLength(250);

                entity.Property(e => e.BirthDate).HasColumnType("datetime");

                entity.Property(e => e.Crc)
                    .HasColumnName("CRC")
                    .HasColumnType("char(40)");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.EMail)
                    .HasColumnName("E_Mail")
                    .HasMaxLength(100);

                entity.Property(e => e.EditionDate).HasColumnType("datetime");

                entity.Property(e => e.FirstName).HasMaxLength(100);

                entity.Property(e => e.Iplocation)
                    .HasColumnName("IPLocation")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.LastChangePassDate).HasColumnType("datetime");

                entity.Property(e => e.LastLoginTime).HasColumnType("datetime");

                entity.Property(e => e.LastName).HasMaxLength(100);

                entity.Property(e => e.LastRefreshTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Mobile)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NativeId)
                    .HasColumnName("NativeID")
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NewPassword).HasMaxLength(100);

                entity.Property(e => e.Password).HasMaxLength(100);

                entity.Property(e => e.PersonnelId)
                    .HasColumnName("PersonnelID")
                    .HasMaxLength(200);

                entity.Property(e => e.Phone)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PhotoPath).HasMaxLength(200);

                entity.Property(e => e.SystemProfile).HasColumnType("xml");

                entity.Property(e => e.Title).HasMaxLength(100);

                entity.Property(e => e.UserName).HasMaxLength(100);
            });

            modelBuilder.Entity<UsersDevice>(entity =>
            {
                entity.HasKey(e => e.Pk);

                entity.ToTable("Users_Device");

                entity.Property(e => e.Pk).HasColumnName("PK");

                entity.Property(e => e.Serial)
                    .IsRequired()
                    .HasColumnName("serial")
                    .HasMaxLength(40);

                entity.Property(e => e.UserId).HasColumnName("User_ID");

                entity.Property(e => e.Uuid)
                    .HasColumnName("uuid")
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<UsersOtp>(entity =>
            {
                entity.HasKey(e => e.OtpId);

                entity.ToTable("Users_OTP");

                entity.Property(e => e.OtpId).HasColumnName("OTP_ID");

                entity.Property(e => e.Challenge)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.Response)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<UsersTickets>(entity =>
            {
                entity.HasKey(e => e.TicketCode);

                entity.ToTable("Users_Tickets");

                entity.HasIndex(e => new { e.TicketCode, e.UserCode, e.Ticket, e.SessionKey })
                    .HasName("IX_Users_Tickets");

                entity.Property(e => e.ClientTimeStamp).HasColumnType("datetime");

                entity.Property(e => e.LastRequestDate).HasColumnType("datetime");

                entity.Property(e => e.Location)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.LoginDate).HasColumnType("datetime");

                entity.Property(e => e.SessionKey)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ticket)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<UsersToken>(entity =>
            {
                entity.HasKey(e => e.TokenSerialNo);

                entity.ToTable("Users_Token");

                entity.Property(e => e.TokenSerialNo)
                    .HasColumnName("TokenSerialNO")
                    .HasMaxLength(255)
                    .ValueGeneratedNever();

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.UsersToken)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK_Users_Token_Users");
            });

            modelBuilder.Entity<Wfcategory>(entity =>
            {
                entity.HasKey(e => e.CategoryId);

                entity.ToTable("WFCategory");

                entity.HasIndex(e => e.CategoryId)
                    .HasName("IX_WFCategory");

                entity.Property(e => e.CategoryId).HasColumnName("CategoryID");

                entity.Property(e => e.CategoryDescription).HasMaxLength(1024);

                entity.Property(e => e.CategoryName).HasMaxLength(1024);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ParentId).HasDefaultValueSql("((-1))");

                entity.Property(e => e.RoleId).HasDefaultValueSql("((-1))");

                entity.Property(e => e.UserId).HasDefaultValueSql("((-1))");
            });

            modelBuilder.Entity<Wfdbconnection>(entity =>
            {
                entity.HasKey(e => e.ConnectionId);

                entity.ToTable("WFDBConnection");

                entity.HasIndex(e => e.ConnectionId)
                    .HasName("IX_WFDBConnection");

                entity.Property(e => e.ConnectionId).HasColumnName("ConnectionID");

                entity.Property(e => e.ConnectionName).HasMaxLength(1024);

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.DataSource).HasMaxLength(1024);

                entity.Property(e => e.Dbname)
                    .HasColumnName("DBName")
                    .HasMaxLength(1024);

                entity.Property(e => e.Dbtype)
                    .HasColumnName("DBType")
                    .HasMaxLength(1024);

                entity.Property(e => e.Password).HasMaxLength(1024);

                entity.Property(e => e.UserName).HasMaxLength(1024);
            });

            modelBuilder.Entity<Wfexecute>(entity =>
            {
                entity.HasKey(e => e.ExecuteId);

                entity.ToTable("WFExecute");

                entity.HasIndex(e => new { e.ExecuteId, e.Wfid, e.WfversionId, e.AppName })
                    .HasName("IX_WFExecute");

                entity.Property(e => e.ExecuteId).HasColumnName("ExecuteID");

                entity.Property(e => e.AppName).HasMaxLength(255);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ExecutionDate).HasColumnType("datetime");

                entity.Property(e => e.Status).HasMaxLength(500);

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Wfid)
                    .HasColumnName("WFID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.WfversionId)
                    .HasColumnName("WFVersionID")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<WffaxRequest>(entity =>
            {
                entity.HasKey(e => e.RequestId);

                entity.ToTable("WFFaxRequest");

                entity.HasIndex(e => e.RequestId)
                    .HasName("IX_WFFaxRequest");

                entity.Property(e => e.RequestId).HasColumnName("RequestID");

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.FaxDocumentName).HasMaxLength(1024);

                entity.Property(e => e.FaxNumber).HasMaxLength(500);

                entity.Property(e => e.FaxReceiverName).HasMaxLength(1024);

                entity.Property(e => e.FaxSubject)
                    .HasMaxLength(4000)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Status).HasMaxLength(50);

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<Wfhistory>(entity =>
            {
                entity.ToTable("WFHistory");

                entity.HasIndex(e => new { e.WfexecutedId, e.FromScenario, e.ToScenario, e.Id })
                    .HasName("IX_WFHistory");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Comment).HasDefaultValueSql("('')");

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.FromScenario).HasDefaultValueSql("((0))");

                entity.Property(e => e.GroupNo).HasDefaultValueSql("((0))");

                entity.Property(e => e.Response).HasMaxLength(500);

                entity.Property(e => e.Status)
                    .HasMaxLength(500)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Subject).HasDefaultValueSql("('')");

                entity.Property(e => e.ToScenario).HasDefaultValueSql("((0))");

                entity.Property(e => e.UserId)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.WfexecutedId)
                    .HasColumnName("WFExecutedID")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<WflogTrace>(entity =>
            {
                entity.ToTable("WFLogTrace");

                entity.Property(e => e.ExecuterId)
                    .HasColumnName("ExecuterID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FromScenarioCode).HasDefaultValueSql("((0))");

                entity.Property(e => e.FromScenarioName).HasMaxLength(4000);

                entity.Property(e => e.LogDate).HasColumnType("datetime");

                entity.Property(e => e.ToScenarioCode).HasDefaultValueSql("((0))");

                entity.Property(e => e.ToScenarioName).HasMaxLength(4000);

                entity.Property(e => e.WfexecutedId)
                    .HasColumnName("WFExecutedID")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<Wfstructure>(entity =>
            {
                entity.HasKey(e => e.Wfid);

                entity.ToTable("WFStructure");

                entity.HasIndex(e => e.Wfid)
                    .HasName("IX_WFStructure");

                entity.Property(e => e.Wfid).HasColumnName("WFID");

                entity.Property(e => e.AppName).HasMaxLength(255);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.MaxScenarioCode).HasMaxLength(50);

                entity.Property(e => e.WfextendedScenariosXml).HasColumnName("WFExtendedScenariosXml");

                entity.Property(e => e.Wfname)
                    .HasColumnName("WFName")
                    .HasMaxLength(150);

                entity.Property(e => e.Wfstate)
                    .HasColumnName("WFState")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.WfstructureXml).HasColumnName("WFStructureXml");

                entity.Property(e => e.Wftype)
                    .HasColumnName("WFType")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<WfstructureVersion>(entity =>
            {
                entity.HasKey(e => e.WfversionId);

                entity.ToTable("WFStructureVersion");

                entity.HasIndex(e => new { e.WfversionId, e.Wfid })
                    .HasName("IX_WFStructureVersion");

                entity.Property(e => e.WfversionId).HasColumnName("WFVersionID");

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.Wfid)
                    .HasColumnName("WFID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.WfstructureXml).HasColumnName("WFStructureXml");
            });

            modelBuilder.Entity<WfvirtualUser>(entity =>
            {
                entity.ToTable("WFVirtualUser");

                entity.HasIndex(e => e.UserIdstring)
                    .HasName("IX_WFVirtualUser_1");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AppName).HasMaxLength(500);

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.UserIdstring)
                    .HasColumnName("UserIDString")
                    .HasMaxLength(255);
            });
        }
    }
}
